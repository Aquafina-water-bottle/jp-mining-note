{"version":3,"file":"jpmn_pa_sent_back.js","mappings":"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","sources":["webpack:///./src/ts/consts.ts","webpack:///./src/ts/fields.ts","webpack:///./src/ts/utils.ts","webpack:///./src/ts/spersist.ts","webpack:///./src/ts/reflow.ts","webpack:///./src/ts/options.ts","webpack:///./src/ts/logger.ts","webpack:///./src/ts/module.ts","webpack:///./src/ts/globalEventManager.ts","webpack:///./src/ts/jpUtils.ts","webpack:///./src/ts/modules/autoHighlightWord.ts","webpack:///./src/ts/modules/sentenceParser.ts","webpack:///./src/ts/modules/autoPitchAccent.ts","webpack:///./src/ts/modules/infoCircleSetting.ts","webpack:///./src/ts/modules/imgStylizer.ts","webpack:///./src/ts/ankiConnectUtils.ts","webpack:///./src/ts/modules/tooltips.ts","webpack:///./src/ts/modules/kanjiHover.ts","webpack:///./src/ts/isNew.ts","webpack:///./src/ts/modules/wordIndicators.ts","webpack:///./src/ts/modules/freqUtils.ts","webpack:///./src/ts/modules/mobileUtils.ts","webpack:///./src/ts/mobilePopup.ts","webpack:///./src/ts/modules/infoCircleUtils.ts","webpack:///./src/ts/modules/fixRubyPositioning.ts","webpack:///./src/ts/modules/checkDuplicateKey.ts","webpack:///./src/ts/modules/asyncManager.ts","webpack:///./src/ts/modules/blockquotes.ts","webpack:///./src/ts/modules/refreshCard.ts","webpack:///./src/ts/modules/cardCache.ts","webpack:///./src/ts/main.ts","webpack:///./src/ts/jp-mining-note/pa_sent/back.ts"],"sourcesContent":["/*\n * Runtime options here are separated into `overrides` to maintain proper types\n * for typescript, and will remain like that internally. This behavior should not\n * be replicated in the user config.\n */\nexport const compileOpts = {\n    \"allowClickToggleOnHoverCards\": false,\n    \"alwaysFilledFields\": [],\n    \"autoQuoteClose\": \"\\u300d\",\n    \"autoQuoteOpen\": \"\\u300c\",\n    \"breakpoints.height.tablet\": 700,\n    \"breakpoints.width.combinePicture\": 620,\n    \"breakpoints.width.displaySentenceRemoveNewlines\": 1300,\n    \"breakpoints.width.displaySentenceShrink\": 1600,\n    \"breakpoints.width.enlargeMaxWidth\": 2250,\n    \"breakpoints.width.maxWidthBackside\": 850,\n    \"clipboardInserter0pxHackEnabled\": true,\n    \"cssFolders\": [\n        \"base\",\n        \"responsive-font\",\n        \"responsive\",\n        \"dictionaries\",\n        \"editor-fields\",\n        \"theme\",\n        \"extra\"\n    ],\n    \"defaultQuote.add\": true,\n    \"defaultQuote.altDisplay.displayMode\": \"unquoted-no-indent\",\n    \"defaultQuote.display.displayMode\": \"quoted-block\",\n    \"defaultQuote.displayMode\": \"vn\",\n    \"defaultQuote.fullSent.displayMode\": \"unquoted-no-indent\",\n    \"displayLanguages\": [\n        \"en\"\n    ],\n    \"enableModule.asyncScheduler\": true,\n    \"enableModule.asyncScheduler.front\": true,\n    \"enableModule.autoPitchAccent\": true,\n    \"enableModule.blockquotes\": true,\n    \"enableModule.checkDuplicateKey\": true,\n    \"enableModule.fixRubyPositioning\": true,\n    \"enableModule.freqUtils\": true,\n    \"enableModule.fsrsUtils\": true,\n    \"enableModule.imgStylizer\": true,\n    \"enableModule.imgStylizer.imageBlur\": true,\n    \"enableModule.infoCircleUtils\": true,\n    \"enableModule.kanjiHover\": true,\n    \"enableModule.keybinds\": true,\n    \"enableModule.mobilePopup\": true,\n    \"enableModule.mobileUtils\": true,\n    \"enableModule.refreshCard\": true,\n    \"enableModule.sentenceParser\": true,\n    \"enableModule.sentenceParser.autoHighlight\": true,\n    \"enableModule.wordIndicators\": true,\n    \"externalLinks\": {\n        \"image-search\": {\n            \"hoverDisplay\": \"google.co.jp (Image search)\",\n            \"iconImageDark\": \"_icon_image_white.svg\",\n            \"iconImageLight\": \"_icon_image_black.svg\",\n            \"iconType\": \"image\",\n            \"url\": \"https://www.google.co.jp/search?q={{text:Word}}\\u0026tbm=isch\"\n        },\n        \"jisho.org\": {\n            \"iconImageDark\": \"_icon_jisho_darkmode.png\",\n            \"iconImageLight\": \"_icon_jisho_lightmode.png\",\n            \"iconType\": \"image\",\n            \"url\": \"https://jisho.org/search/{{Word}}\"\n        },\n        \"jpdb.io\": {\n            \"iconImageDark\": \"_icon_jpdb_darkmode.png\",\n            \"iconImageLight\": \"_icon_jpdb_lightmode.png\",\n            \"iconType\": \"image\",\n            \"url\": \"https://jpdb.io/search?q={{text:Word}}\"\n        }\n    },\n    \"externalLinksPosition\": \"Extra Info\",\n    \"fullSentenceRuby.displayMode\": \"hover\",\n    \"fullSentenceRuby.fillMode\": \"opacity\",\n    \"fullSentenceRuby.fillModeFontSizeTransition\": false,\n    \"hardcodedRuntimeOptions\": false,\n    \"neverFilledFields\": []\n};\nexport const runtimeOpts = {\n    \"_overrides\": {\n        \"blockquotes.collapsePrimaryDefinition\": {\n            \"args\": {\n                \"cardType\": \"cloze_deletion\",\n                \"op\": \"===\"\n            },\n            \"resultFalse\": false,\n            \"resultTrue\": true,\n            \"type\": \"cardType\"\n        },\n        \"blockquotes.folderTab.enabled\": {\n            \"args\": {\n                \"op\": \"\\u003c=\",\n                \"value\": \"combinePicture\"\n            },\n            \"resultFalse\": false,\n            \"resultTrue\": true,\n            \"type\": \"viewportWidthBreakpoint\"\n        },\n        \"cardCache.enabled\": {\n            \"resultFalse\": false,\n            \"resultTrue\": true,\n            \"type\": \"isMobile\"\n        },\n        \"enableAnkiconnectFeatures\": {\n            \"resultFalse\": false,\n            \"resultTrue\": true,\n            \"type\": \"isPC\"\n        },\n        \"freqUtils.list.max\": {\n            \"resultFalse\": 4,\n            \"resultTrue\": 1,\n            \"type\": \"isMobile\"\n        },\n        \"infoCircleUtils.mobileDialog\": {\n            \"resultFalse\": true,\n            \"resultTrue\": false,\n            \"type\": \"isAnkiMobile\"\n        },\n        \"logger.toConsole\": {\n            \"resultFalse\": true,\n            \"resultTrue\": false,\n            \"type\": \"isAnkiMobile\"\n        },\n        \"sentenceParser.quotes.quoteClose\": {\n            \"args\": {\n                \"cardType\": \"pa_sent\",\n                \"op\": \"===\"\n            },\n            \"resultFalse\": \"\\u300d\",\n            \"resultTrue\": \"\\u300f\",\n            \"type\": \"cardType\"\n        },\n        \"sentenceParser.quotes.quoteOpen\": {\n            \"args\": {\n                \"cardType\": \"pa_sent\",\n                \"op\": \"===\"\n            },\n            \"resultFalse\": \"\\u300c\",\n            \"resultTrue\": \"\\u300e\",\n            \"type\": \"cardType\"\n        }\n    },\n    \"asyncManager.initialDelay\": 50,\n    \"audioPlaybackMode\": \"default\",\n    \"autoPitchAccent.coloredPitchAccent.color.definitions\": true,\n    \"autoPitchAccent.coloredPitchAccent.color.fullSentence\": true,\n    \"autoPitchAccent.coloredPitchAccent.color.testedContent\": true,\n    \"autoPitchAccent.coloredPitchAccent.color.wordReadingKanji\": true,\n    \"autoPitchAccent.coloredPitchAccent.color.wordReadingPitchOverline\": true,\n    \"autoPitchAccent.coloredPitchAccent.enabled\": false,\n    \"autoPitchAccent.coloredPitchAccent.multiplePitchesColorAsFirst.ajtWordPitch\": true,\n    \"autoPitchAccent.coloredPitchAccent.multiplePitchesColorAsFirst.paOverride.integer\": true,\n    \"autoPitchAccent.coloredPitchAccent.multiplePitchesColorAsFirst.paOverride.text\": false,\n    \"autoPitchAccent.coloredPitchAccent.multiplePitchesColorAsFirst.paPositions\": true,\n    \"autoPitchAccent.enabled\": true,\n    \"autoPitchAccent.paOverride.detectKifukuFromWordTags\": true,\n    \"autoPitchAccent.paOverride.downstepMarkers\": [\n        \"\\uff3c\"\n    ],\n    \"autoPitchAccent.paOverride.heibanMarkerRequired\": true,\n    \"autoPitchAccent.paOverride.heibanMarkers\": [\n        \"\\uffe3\"\n    ],\n    \"autoPitchAccent.paOverride.kifukuOveride\": [\n        -1\n    ],\n    \"autoPitchAccent.paOverride.separators\": [\n        \"\\u30fb\",\n        \"\\u3001\"\n    ],\n    \"autoPitchAccent.paPositions.defaultConnector\": \"\\u30fb\",\n    \"autoPitchAccent.paPositions.displayMode\": \"selected-result\",\n    \"autoPitchAccent.readingDisplayMode\": \"katakana\",\n    \"autoPitchAccent.searchForAJTWord\": true,\n    \"autoPitchAccent.showReadingIfNoPitch\": false,\n    \"blockquotes.collapsePrimaryDefinition\": false,\n    \"blockquotes.enabled\": true,\n    \"blockquotes.folderTab.enabled\": true,\n    \"blockquotes.folderTab.linkedTabs\": \"12-3-4-5\",\n    \"blockquotes.folderTab.mode\": \"unique\",\n    \"blockquotes.folderTab.showDotWhenEmpty\": false,\n    \"blockquotes.hideEmpty\": true,\n    \"blockquotes.open.additionalNotes\": false,\n    \"blockquotes.open.enabled\": false,\n    \"blockquotes.open.extraDefinitions\": false,\n    \"blockquotes.open.extraInfo\": false,\n    \"blockquotes.open.primaryDefinition\": false,\n    \"blockquotes.open.secondaryDefinition\": false,\n    \"blockquotes.openOnNew.additionalNotes\": false,\n    \"blockquotes.openOnNew.enabled\": false,\n    \"blockquotes.openOnNew.extraDefinitions\": false,\n    \"blockquotes.openOnNew.extraInfo\": false,\n    \"blockquotes.openOnNew.primaryDefinition\": false,\n    \"blockquotes.openOnNew.secondaryDefinition\": false,\n    \"blockquotes.simplifyDefinitions.dictsOverride.hideFirstLineMode\": {\n        \"JMdict\": \"none\",\n        \"JMdict (English)\": \"none\",\n        \"JMdict Extra\": \"none\",\n        \"Nico/Pixiv\": \"none\",\n        \"\\u56db\\u5b57\\u719f\\u8a9e\\u8f9e\\u5178\\u30aa\\u30f3\\u30e9\\u30a4\\u30f3\": \"none\",\n        \"\\u56fd\\u8a9e\\u8f9e\\u5178\\u30aa\\u30f3\\u30e9\\u30a4\\u30f3\": \"none\",\n        \"\\u5927\\u8f9e\\u6797\\u3000\\u7b2c\\u56db\\u7248\": \"none\",\n        \"\\u6545\\u4e8b\\u30fb\\u3053\\u3068\\u308f\\u3056\\u30fb\\u6163\\u7528\\u53e5\\u30aa\\u30f3\\u30e9\\u30a4\\u30f3\": \"none\",\n        \"\\u65b0\\u660e\\u89e3\\u56fd\\u8a9e\\u8f9e\\u5178\\u3000\\u7b2c\\u516b\\u7248\": \"none\"\n    },\n    \"blockquotes.simplifyDefinitions.enabled\": false,\n    \"blockquotes.simplifyDefinitions.extraDefinitions.enabled\": true,\n    \"blockquotes.simplifyDefinitions.hideFirstLineMode\": \"first-line\",\n    \"blockquotes.simplifyDefinitions.primaryDefinition.enabled\": true,\n    \"blockquotes.simplifyDefinitions.removeListMode\": \"on-singular\",\n    \"blockquotes.simplifyDefinitions.removeListMode.tagOverride.always\": [\n        \"list-hide\",\n        \"jpmn-hide-hide\"\n    ],\n    \"blockquotes.simplifyDefinitions.removeListMode.tagOverride.never\": [\n        \"list-show\",\n        \"jpmn-list-show\"\n    ],\n    \"blockquotes.simplifyDefinitions.secondaryDefinition.enabled\": true,\n    \"blockquotes.simplifyDefinitions.tagOverride.primaryDefinition.hideFirstLine\": [\n        \"line-hide\",\n        \"jpmn-line-hide\",\n        \"line-hide-1st\",\n        \"jpmn-line-hide-1st\"\n    ],\n    \"blockquotes.simplifyDefinitions.tagOverride.primaryDefinition.showFirstLine\": [\n        \"line-show\",\n        \"jpmn-line-show\",\n        \"line-show-1st\",\n        \"jpmn-line-show-1st\"\n    ],\n    \"blockquotes.simplifyDefinitions.tagOverride.secondaryDefinition.hideFirstLine\": [\n        \"line-hide-2nd\",\n        \"jpmn-line-hide-2nd\"\n    ],\n    \"blockquotes.simplifyDefinitions.tagOverride.secondaryDefinition.showFirstLine\": [\n        \"line-show-2nd\",\n        \"jpmn-line-show-2nd\"\n    ],\n    \"cardCache.enabled\": true,\n    \"checkDuplicateKey.enabled\": true,\n    \"clickCardRevealSentenceOnBackSide\": true,\n    \"enableAnkiconnectFeatures\": true,\n    \"fixRubyPositioning.enabled\": false,\n    \"freqUtils.displayMode\": \"summary\",\n    \"freqUtils.enabled\": true,\n    \"freqUtils.list.max\": 4,\n    \"freqUtils.list.overflow\": 0,\n    \"freqUtils.list.showSummaryMode\": \"if-frequencies-empty\",\n    \"freqUtils.summary.defaultValues\": [\n        \"999999\",\n        \"9999999\",\n        \"99999999\",\n        \"1000000\",\n        \"10000000\"\n    ],\n    \"hybridSentenceOpenOnPlaySentence\": true,\n    \"imgStylizer.enabled\": true,\n    \"imgStylizer.glossary.dictsOverride.mode.yomichan\": {\n        \"\\u56db\\u5b57\\u719f\\u8a9e\\u8f9e\\u5178\\u30aa\\u30f3\\u30e9\\u30a4\\u30f3\": \"match-yomichan\",\n        \"\\u56fd\\u8a9e\\u8f9e\\u5178\\u30aa\\u30f3\\u30e9\\u30a4\\u30f3\": \"match-yomichan\",\n        \"\\u5927\\u8f9e\\u6797\\u3000\\u7b2c\\u56db\\u7248\": \"match-yomichan\",\n        \"\\u6545\\u4e8b\\u30fb\\u3053\\u3068\\u308f\\u3056\\u30fb\\u6163\\u7528\\u53e5\\u30aa\\u30f3\\u30e9\\u30a4\\u30f3\": \"match-yomichan\",\n        \"\\u65b0\\u660e\\u89e3\\u56fd\\u8a9e\\u8f9e\\u5178\\u3000\\u7b2c\\u516b\\u7248\": \"match-yomichan\"\n    },\n    \"imgStylizer.glossary.floatImg.enabled\": true,\n    \"imgStylizer.glossary.floatImg.overrideTags.bottom\": [\n        \"img-bottom\",\n        \"jpmn-img-bottom\"\n    ],\n    \"imgStylizer.glossary.floatImg.overrideTags.right\": [\n        \"img-right\",\n        \"jpmn-img-right\"\n    ],\n    \"imgStylizer.glossary.floatImg.overrideTags.top\": [\n        \"img-top\",\n        \"jpmn-img-top\"\n    ],\n    \"imgStylizer.glossary.floatImg.position\": \"auto\",\n    \"imgStylizer.glossary.other.enabled\": true,\n    \"imgStylizer.glossary.primaryDef.enabled\": true,\n    \"imgStylizer.glossary.primaryDef.mode.general.tagOverride.collapse\": [\n        \"img-collapse\",\n        \"jpmn-img-collapse\"\n    ],\n    \"imgStylizer.glossary.primaryDef.mode.general.tagOverride.float\": [\n        \"img-float\",\n        \"jpmn-img-float\"\n    ],\n    \"imgStylizer.glossary.primaryDef.mode.general.tagOverride.none\": [\n        \"img-no-styling\",\n        \"jpmn-img-no-styling\"\n    ],\n    \"imgStylizer.glossary.primaryDef.mode.user\": \"collapse\",\n    \"imgStylizer.glossary.primaryDef.mode.user.tagOverride.collapse\": [\n        \"img-user-collapse\",\n        \"jpmn-img-user-collapse\"\n    ],\n    \"imgStylizer.glossary.primaryDef.mode.user.tagOverride.float\": [\n        \"img-user-float\",\n        \"jpmn-img-user-float\"\n    ],\n    \"imgStylizer.glossary.primaryDef.mode.user.tagOverride.none\": [\n        \"img-user-no-styling\",\n        \"jpmn-img-user-no-styling\"\n    ],\n    \"imgStylizer.glossary.primaryDef.mode.yomichan\": \"collapse\",\n    \"imgStylizer.glossary.primaryDef.mode.yomichan.tagOverride.collapse\": [\n        \"img-yomichan-collapse\",\n        \"jpmn-img-yomichan-collapse\"\n    ],\n    \"imgStylizer.glossary.primaryDef.mode.yomichan.tagOverride.float\": [\n        \"img-yomichan-float\",\n        \"jpmn-img-yomichan-float\"\n    ],\n    \"imgStylizer.glossary.primaryDef.mode.yomichan.tagOverride.none\": [\n        \"img-yomichan-no-styling\",\n        \"jpmn-img-yomichan-no-styling\"\n    ],\n    \"imgStylizer.mainImage.blur.enabled\": false,\n    \"imgStylizer.mainImage.blur.startState\": \"only-tagged\",\n    \"imgStylizer.mainImage.blur.tags\": [\n        \"NSFW\",\n        \"nsfw\",\n        \"-NSFW\"\n    ],\n    \"imgStylizer.mainImage.resizeHeightFixedValue\": 210,\n    \"imgStylizer.mainImage.resizeHeightMode\": \"auto-height\",\n    \"imgStylizer.mainImage.resizeOnMobile\": true,\n    \"imgStylizer.setMainImageFromTags\": [],\n    \"infoCircleUtils.dataTags\": [\n        \"line-hide\",\n        \"jpmn-line-hide\",\n        \"line-hide-1st\",\n        \"jpmn-line-hide-1st\",\n        \"line-show\",\n        \"jpmn-line-show\",\n        \"line-show-1st\",\n        \"jpmn-line-show-1st\",\n        \"line-hide-2nd\",\n        \"jpmn-line-hide-2nd\",\n        \"line-show-2nd\",\n        \"jpmn-line-show-2nd\",\n        \"list-hide\",\n        \"jpmn-hide-hide\",\n        \"list-show\",\n        \"jpmn-list-show\",\n        \"quote-add\",\n        \"jpmn-quote-add\",\n        \"quote-remove\",\n        \"jpmn-quote-remove\",\n        \"quote-as-is\",\n        \"jpmn-quote-as-is\",\n        \"quote-no-processing\",\n        \"jpmn-quote-no-processing\",\n        \"quote-disp-quoted-block\",\n        \"jpmn-quote-disp-quoted-block\",\n        \"quote-disp-quoted-flow\",\n        \"jpmn-quote-disp-quoted-flow\",\n        \"quote-disp-unquoted-indent\",\n        \"jpmn-quote-disp-unquoted-indent\",\n        \"quote-disp-unquoted-noIndent\",\n        \"jpmn-quote-disp-unquoted-no-indent\",\n        \"quote-disp-unquoted-rightShifted\",\n        \"jpmn-quote-disp-unquoted-right-shifted\",\n        \"img-no-styling\",\n        \"jpmn-img-no-styling\",\n        \"img-collapse\",\n        \"jpmn-img-collapse\",\n        \"img-float\",\n        \"jpmn-img-float\",\n        \"img-yomichan-no-styling\",\n        \"jpmn-img-yomichan-no-styling\",\n        \"img-yomichan-collapse\",\n        \"jpmn-img-yomichan-collapse\",\n        \"img-yomichan-float\",\n        \"jpmn-img-yomichan-float\",\n        \"img-user-no-styling\",\n        \"jpmn-img-user-no-styling\",\n        \"img-user-collapse\",\n        \"jpmn-img-user-collapse\",\n        \"img-user-float\",\n        \"jpmn-img-user-float\",\n        \"img-bottom\",\n        \"jpmn-img-bottom\",\n        \"img-top\",\n        \"jpmn-img-top\",\n        \"img-right\",\n        \"jpmn-img-right\",\n        \"\\u5e73\\u677f\",\n        \"heiban\",\n        \"\\u982d\\u9ad8\",\n        \"atamadaka\",\n        \"\\u4e2d\\u9ad8\",\n        \"nakadaka\",\n        \"\\u5c3e\\u9ad8\",\n        \"odaka\",\n        \"\\u8d77\\u4f0f\",\n        \"kifuku\"\n    ],\n    \"infoCircleUtils.enabled\": true,\n    \"infoCircleUtils.mobileDialog\": true,\n    \"infoCircleUtils.showTagsMode\": \"back\",\n    \"kanjiHover.enabled\": true,\n    \"kanjiHover.overrideOptions.tooltips\": {},\n    \"kanjiHover.searchSentences\": true,\n    \"keybinds.enabled\": true,\n    \"keybinds.playSentenceAudio\": [\n        \"KeyP\"\n    ],\n    \"keybinds.playWordAudio\": [\n        \"KeyW\"\n    ],\n    \"keybinds.toggleAdditionalNotesDisplay\": [\n        \"Digit9\"\n    ],\n    \"keybinds.toggleExtraDefinitionsDisplay\": [\n        \"Digit0\"\n    ],\n    \"keybinds.toggleExtraInfoDisplay\": [\n        \"BracketLeft\"\n    ],\n    \"keybinds.toggleFrontFullSentenceDisplay\": [\n        \"Quote\"\n    ],\n    \"keybinds.toggleHighlightWord\": [\n        \"KeyN\"\n    ],\n    \"keybinds.toggleHintDisplay\": [\n        \"Period\"\n    ],\n    \"keybinds.toggleHybridSentence\": [\n        \"KeyN\"\n    ],\n    \"keybinds.toggleSecondaryDefinitionsDisplay\": [\n        \"Digit8\"\n    ],\n    \"logger.debugConsoleLevel\": 3,\n    \"logger.debugLevel\": 6,\n    \"logger.error.ignore\": [\n        \"ReferenceError: EFDRC is not defined\"\n    ],\n    \"logger.error.ignoreRegex\": [\n        {\n            \"flags\": null,\n            \"pattern\": \"^TypeError: Cannot read properties of null \\\\(reading \\u0027style\\u0027\\\\)\\n    at (nc|Ar) \\\\(http://127.0.0.1:\\\\d+/_anki/js/reviewer\\\\.js:7:(113091|112035)\\\\)$\"\n        }\n    ],\n    \"logger.toConsole\": true,\n    \"logger.warn.ignore\": [\n        \"(sentenceParser) Following sentence was stripped of div elements\",\n        \"(tb:sentenceParser) Following sentence was stripped of div elements\",\n        \"(sentenceParser) Automatically highlighted word in \",\n        \"(tb:sentenceParser) Automatically highlighted word in \",\n        \"SentenceReading is not filled out. Using Sentence field instead.\"\n    ],\n    \"mainCardUtils.enabled\": true,\n    \"mobileUtils.enabled\": true,\n    \"refreshCard.enabled\": true,\n    \"sentenceParser.altDisplay.quotes.processMode\": \"as-is\",\n    \"sentenceParser.altDisplay.quotes.processMode.searchMulti\": true,\n    \"sentenceParser.autoHighlightWord.enabled\": true,\n    \"sentenceParser.checkSentenceReadingEqualsSentence\": true,\n    \"sentenceParser.display.quotes.displayMode.quoted\": \"block\",\n    \"sentenceParser.display.quotes.displayMode.quoted.tagOverride.block\": [\n        \"quote-disp-quoted-block\",\n        \"jpmn-quote-disp-quoted-block\"\n    ],\n    \"sentenceParser.display.quotes.displayMode.quoted.tagOverride.flow\": [\n        \"quote-disp-quoted-flow\",\n        \"jpmn-quote-disp-quoted-flow\"\n    ],\n    \"sentenceParser.display.quotes.displayMode.unquoted\": \"no-indent\",\n    \"sentenceParser.display.quotes.displayMode.unquoted.tagOverride.indented\": [\n        \"quote-disp-unquoted-indent\",\n        \"jpmn-quote-disp-unquoted-indent\"\n    ],\n    \"sentenceParser.display.quotes.displayMode.unquoted.tagOverride.noIndent\": [\n        \"quote-disp-unquoted-noIndent\",\n        \"jpmn-quote-disp-unquoted-no-indent\"\n    ],\n    \"sentenceParser.display.quotes.displayMode.unquoted.tagOverride.rightShifted\": [\n        \"quote-disp-unquoted-rightShifted\",\n        \"jpmn-quote-disp-unquoted-right-shifted\"\n    ],\n    \"sentenceParser.display.quotes.processMode\": \"add\",\n    \"sentenceParser.display.quotes.processMode.searchMulti\": true,\n    \"sentenceParser.display.quotes.processMode.tagOverride.add\": [\n        \"quote-add\",\n        \"jpmn-quote-add\"\n    ],\n    \"sentenceParser.display.quotes.processMode.tagOverride.asIs\": [\n        \"quote-as-is\",\n        \"jpmn-quote-as-is\"\n    ],\n    \"sentenceParser.display.quotes.processMode.tagOverride.none\": [\n        \"quote-no-processing\",\n        \"jpmn-quote-no-processing\"\n    ],\n    \"sentenceParser.display.quotes.processMode.tagOverride.remove\": [\n        \"quote-remove\",\n        \"jpmn-quote-remove\"\n    ],\n    \"sentenceParser.enabled\": true,\n    \"sentenceParser.fixDivList.enabled\": true,\n    \"sentenceParser.fullSent.quotes.displayMode.quoted\": \"block\",\n    \"sentenceParser.fullSent.quotes.displayMode.unquoted\": \"no-indent\",\n    \"sentenceParser.fullSent.quotes.processMode\": \"remove\",\n    \"sentenceParser.fullSent.quotes.processMode.searchMulti\": true,\n    \"sentenceParser.multi.quotes.displayMode.quoted\": \"block\",\n    \"sentenceParser.multi.quotes.displayMode.unquoted\": \"right-shifted\",\n    \"sentenceParser.quotes.matches\": [\n        {\n            \"close\": \"\\u300d\",\n            \"open\": \"\\u300c\"\n        },\n        {\n            \"close\": \"\\u300f\",\n            \"open\": \"\\u300e\"\n        }\n    ],\n    \"sentenceParser.quotes.quoteClose\": \"\\u300d\",\n    \"sentenceParser.quotes.quoteOpen\": \"\\u300c\",\n    \"sentenceParser.removeFinalPeriod.altDisplay.quoted\": false,\n    \"sentenceParser.removeFinalPeriod.altDisplay.unquoted\": false,\n    \"sentenceParser.removeFinalPeriod.display.quoted\": true,\n    \"sentenceParser.removeFinalPeriod.display.unquoted\": false,\n    \"sentenceParser.removeFinalPeriod.fullSent.quoted\": true,\n    \"sentenceParser.removeFinalPeriod.fullSent.unquoted\": false,\n    \"sentenceParser.removeFinalPeriod.validPeriods\": \"\\uff61\\u3002\\uff0e\\\\.\",\n    \"tooltips.categoryMax.new.newest\": 0,\n    \"tooltips.categoryMax.new.oldest\": 2,\n    \"tooltips.categoryMax.nonNew.newest\": 2,\n    \"tooltips.categoryMax.nonNew.oldest\": 2,\n    \"tooltips.clickWordToBrowse\": true,\n    \"tooltips.displayPitchAccent\": true,\n    \"tooltips.displayPitchAccentOnHoverOnly\": true,\n    \"tooltips.highlightWordInSentence\": false,\n    \"tooltips.overrideOptions.autoPitchAccent\": {\n        \"autoPitchAccent.coloredPitchAccent.color.fullSentence\": false,\n        \"autoPitchAccent.coloredPitchAccent.color.wordReadingKanji\": false\n    },\n    \"tooltips.overrideOptions.sentenceParser\": {\n        \"sentenceParser.fullSent.quotes.processMode\": \"add\"\n    },\n    \"tooltips.query.new.base\": \"is:new\",\n    \"tooltips.query.new.removed\": \"is:suspended (flag:1 OR flag:3)\",\n    \"tooltips.query.nonNew.base\": \"-is:new OR (is:suspended is:new flag:3)\",\n    \"tooltips.query.nonNew.removed\": \"is:suspended flag:1\",\n    \"wordIndicators.enabled\": true,\n    \"wordIndicators.getResultsFront\": true,\n    \"wordIndicators.overrideOptions.tooltips\": {\n        \"tooltips.displayPitchAccentOnHoverOnly\": false\n    }\n};\nexport const translatorStrs = {\n    \"additional-notes\": \"Additional Notes\",\n    \"card-type-close-bracket\": \") \",\n    \"card-type-cloze-deletion\": \"Cloze Deletion\",\n    \"card-type-main-audio\": \"Audio\",\n    \"card-type-main-click\": \"Click\",\n    \"card-type-main-hint\": \"Hint \",\n    \"card-type-main-hover\": \"Hover\",\n    \"card-type-main-pitch-none\": \"None\",\n    \"card-type-main-sentence\": \"Sentence\",\n    \"card-type-main-sentence-first\": \"Sentence First\",\n    \"card-type-main-tsc\": \"TSC\",\n    \"card-type-main-word\": \"Word\",\n    \"card-type-open-bracket\": \" (\",\n    \"card-type-pa-sentence\": \"PA Sentence\",\n    \"card-type-pa-word\": \"PA Word\",\n    \"card-type-separator\": \" / \",\n    \"extra-definitions\": \"Extra Definitions\",\n    \"extra-info\": \"Extra Info\",\n    \"full-sentence\": \"Full Sentence\",\n    \"hide-word-button\": \"Hide\",\n    \"hint\": \"Hint\",\n    \"image-hover-text\": \"[Image]\",\n    \"kanji-not-found\": \"Kanji not found.\",\n    \"pa-indicator-do-not-test\": \"Do not test\",\n    \"pa-indicator-prefix\": \"PA: \",\n    \"pa-indicator-sentence\": \"Sentence\",\n    \"pa-indicator-word\": \"Word\",\n    \"primary-definition\": \"Primary Definition\",\n    \"secondary-definition\": \"Secondary Definition\",\n    \"show-word-button\": \"Show\",\n    \"unknown-frequency\": \"Unknown\"\n};\nexport const fields = {\n    \"AJTWordPitch\": {\n        \"auto_fill\": true,\n        \"binary_field\": false,\n        \"font\": 20,\n        \"name\": \"AJTWordPitch\"\n    },\n    \"AdditionalNotes\": {\n        \"auto_fill\": false,\n        \"binary_field\": false,\n        \"font\": 20,\n        \"jidoujisho_export\": \"Notes\",\n        \"name\": \"AdditionalNotes\"\n    },\n    \"AltDisplayAudioCard\": {\n        \"auto_fill\": false,\n        \"binary_field\": false,\n        \"default_collapsed\": true,\n        \"font\": 20,\n        \"name\": \"AltDisplayAudioCard\",\n        \"version\": \"0.12.0.0\"\n    },\n    \"AltDisplayPASentenceCard\": {\n        \"auto_fill\": false,\n        \"binary_field\": false,\n        \"default_collapsed\": true,\n        \"font\": 20,\n        \"name\": \"AltDisplayPASentenceCard\",\n        \"version\": \"0.12.0.0\"\n    },\n    \"AltDisplaySentence\": {\n        \"auto_fill\": false,\n        \"binary_field\": false,\n        \"font\": 20,\n        \"name\": \"AltDisplaySentence\",\n        \"notes\": \"Originally `AltDisplay` before `0.12.0.0`\"\n    },\n    \"AltDisplayWord\": {\n        \"auto_fill\": false,\n        \"binary_field\": false,\n        \"font\": 20,\n        \"name\": \"AltDisplayWord\",\n        \"version\": \"0.12.0.0\"\n    },\n    \"CardCache\": {\n        \"auto_fill\": false,\n        \"binary_field\": false,\n        \"default_collapsed\": true,\n        \"font\": 20,\n        \"name\": \"CardCache\"\n    },\n    \"Comment\": {\n        \"auto_fill\": false,\n        \"binary_field\": false,\n        \"font\": 20,\n        \"ignore_field_exists\": true,\n        \"jidoujisho_export\": \"Context\",\n        \"name\": \"Comment\",\n        \"personal_setup\": \"DICTIONARY:\\u300c{_jpmn-get-primary-definition-dict}\\u300d\\u003cbr\\u003eSELECTION:\\u300c{_jpmn-selection-text}\\u300d\"\n    },\n    \"ExtraDefinitions\": {\n        \"auto_fill\": true,\n        \"binary_field\": false,\n        \"default_collapsed\": true,\n        \"font\": 15,\n        \"name\": \"ExtraDefinitions\",\n        \"setup\": \"{jpmn-extra-definitions}\"\n    },\n    \"FrequenciesStylized\": {\n        \"auto_fill\": true,\n        \"binary_field\": false,\n        \"font\": 15,\n        \"name\": \"FrequenciesStylized\",\n        \"setup\": \"{jpmn-frequencies}\"\n    },\n    \"FrequencySort\": {\n        \"auto_fill\": true,\n        \"binary_field\": false,\n        \"font\": 10,\n        \"jidoujisho_export\": \"Frequency\",\n        \"name\": \"FrequencySort\",\n        \"setup\": \"{jpmn-frequency-sort}\"\n    },\n    \"Hint\": {\n        \"auto_fill\": false,\n        \"binary_field\": false,\n        \"font\": 15,\n        \"name\": \"Hint\"\n    },\n    \"HintNotHidden\": {\n        \"anime_cards_import\": \"Hint\",\n        \"auto_fill\": false,\n        \"binary_field\": false,\n        \"font\": 15,\n        \"name\": \"HintNotHidden\"\n    },\n    \"IsAudioCard\": {\n        \"auto_fill\": false,\n        \"binary_field\": true,\n        \"font\": 10,\n        \"name\": \"IsAudioCard\",\n        \"version\": \"0.12.0.0\"\n    },\n    \"IsClickCard\": {\n        \"auto_fill\": false,\n        \"binary_field\": true,\n        \"font\": 10,\n        \"name\": \"IsClickCard\",\n        \"personal_setup\": \"{jpmn-is-click-card}\"\n    },\n    \"IsHintCard\": {\n        \"auto_fill\": false,\n        \"binary_field\": true,\n        \"font\": 10,\n        \"name\": \"IsHintCard\",\n        \"personal_setup\": \"{jpmn-is-hint-card}\",\n        \"version\": \"0.12.0.0\"\n    },\n    \"IsHoverCard\": {\n        \"auto_fill\": false,\n        \"binary_field\": true,\n        \"font\": 10,\n        \"name\": \"IsHoverCard\"\n    },\n    \"IsSentenceCard\": {\n        \"auto_fill\": false,\n        \"binary_field\": true,\n        \"font\": 10,\n        \"name\": \"IsSentenceCard\",\n        \"personal_setup\": \"{jpmn-is-sentence-card}\"\n    },\n    \"IsSentenceFirstCard\": {\n        \"auto_fill\": false,\n        \"binary_field\": true,\n        \"font\": 10,\n        \"name\": \"IsSentenceFirstCard\",\n        \"version\": \"0.12.0.0\"\n    },\n    \"IsTargetedSentenceCard\": {\n        \"auto_fill\": false,\n        \"binary_field\": true,\n        \"font\": 10,\n        \"name\": \"IsTargetedSentenceCard\"\n    },\n    \"Key\": {\n        \"anime_cards_import\": \"front\",\n        \"auto_fill\": true,\n        \"binary_field\": false,\n        \"font\": 40,\n        \"jidoujisho_export\": \"Term\",\n        \"name\": \"Key\",\n        \"setup\": \"{expression}\"\n    },\n    \"PADoNotTest\": {\n        \"auto_fill\": false,\n        \"binary_field\": true,\n        \"font\": 10,\n        \"name\": \"PADoNotTest\"\n    },\n    \"PAGraphs\": {\n        \"anime_cards_import\": \"Graph\",\n        \"auto_fill\": true,\n        \"binary_field\": false,\n        \"font\": 15,\n        \"jidoujisho_export\": \"Pitch Accent\",\n        \"name\": \"PAGraphs\",\n        \"setup\": \"{jpmn-pitch-accent-graphs}\"\n    },\n    \"PAOverride\": {\n        \"auto_fill\": false,\n        \"binary_field\": false,\n        \"font\": 20,\n        \"name\": \"PAOverride\"\n    },\n    \"PAOverrideText\": {\n        \"auto_fill\": false,\n        \"binary_field\": false,\n        \"font\": 20,\n        \"name\": \"PAOverrideText\",\n        \"version\": \"0.11.0.0\"\n    },\n    \"PAPositions\": {\n        \"auto_fill\": true,\n        \"binary_field\": false,\n        \"font\": 15,\n        \"name\": \"PAPositions\",\n        \"setup\": \"{jpmn-pitch-accent-positions}\"\n    },\n    \"PASeparateSentenceCard\": {\n        \"auto_fill\": false,\n        \"binary_field\": true,\n        \"font\": 10,\n        \"name\": \"PASeparateSentenceCard\"\n    },\n    \"PASeparateWordCard\": {\n        \"auto_fill\": false,\n        \"binary_field\": true,\n        \"font\": 10,\n        \"name\": \"PASeparateWordCard\"\n    },\n    \"PAShowInfo\": {\n        \"auto_fill\": false,\n        \"binary_field\": true,\n        \"font\": 10,\n        \"name\": \"PAShowInfo\",\n        \"personal_setup\": \"1\"\n    },\n    \"PASilence\": {\n        \"auto_fill\": true,\n        \"binary_field\": false,\n        \"font\": 10,\n        \"name\": \"PASilence\",\n        \"setup\": \"[sound:_silence.wav]\"\n    },\n    \"PATestOnlyWord\": {\n        \"auto_fill\": false,\n        \"binary_field\": true,\n        \"font\": 10,\n        \"name\": \"PATestOnlyWord\",\n        \"personal_setup\": \"1\"\n    },\n    \"Picture\": {\n        \"anime_cards_import\": \"Picture\",\n        \"auto_fill\": true,\n        \"binary_field\": false,\n        \"font\": 20,\n        \"jidoujisho_export\": \"Image\",\n        \"name\": \"Picture\"\n    },\n    \"PrimaryDefinition\": {\n        \"anime_cards_import\": \"Glossary\",\n        \"auto_fill\": true,\n        \"binary_field\": false,\n        \"font\": 20,\n        \"jidoujisho_export\": \"Meaning\",\n        \"name\": \"PrimaryDefinition\",\n        \"setup\": \"{jpmn-primary-definition}\"\n    },\n    \"PrimaryDefinitionPicture\": {\n        \"auto_fill\": false,\n        \"binary_field\": false,\n        \"font\": 20,\n        \"name\": \"PrimaryDefinitionPicture\",\n        \"version\": \"0.11.0.0\"\n    },\n    \"SecondaryDefinition\": {\n        \"auto_fill\": true,\n        \"binary_field\": false,\n        \"default_collapsed\": true,\n        \"font\": 15,\n        \"name\": \"SecondaryDefinition\",\n        \"setup\": \"{jpmn-secondary-definition}\"\n    },\n    \"Sentence\": {\n        \"anime_cards_import\": \"Sentence\",\n        \"auto_fill\": true,\n        \"binary_field\": false,\n        \"font\": 20,\n        \"jidoujisho_export\": \"Sentence\",\n        \"name\": \"Sentence\",\n        \"setup\": \"{cloze-prefix}\\u003cb\\u003e{cloze-body}\\u003c/b\\u003e{cloze-suffix}\"\n    },\n    \"SentenceAudio\": {\n        \"anime_cards_import\": \"SentenceAudio\",\n        \"auto_fill\": true,\n        \"binary_field\": false,\n        \"font\": 15,\n        \"jidoujisho_export\": \"Sentence Audio\",\n        \"name\": \"SentenceAudio\"\n    },\n    \"SentenceReading\": {\n        \"auto_fill\": true,\n        \"binary_field\": false,\n        \"font\": 20,\n        \"name\": \"SentenceReading\"\n    },\n    \"SeparateAudioCard\": {\n        \"auto_fill\": false,\n        \"binary_field\": true,\n        \"font\": 10,\n        \"name\": \"SeparateAudioCard\",\n        \"notes\": \"Originally `SeparateClozeDeletionCard` before `0.12.0.0`\"\n    },\n    \"SeparateSentenceAudioCard\": {\n        \"auto_fill\": false,\n        \"binary_field\": true,\n        \"font\": 10,\n        \"name\": \"SeparateSentenceAudioCard\",\n        \"notes\": \"Currently doesn\\u0027t do anything\",\n        \"version\": \"0.12.0.0\"\n    },\n    \"UtilityDictionaries\": {\n        \"auto_fill\": true,\n        \"binary_field\": false,\n        \"default_collapsed\": true,\n        \"font\": 15,\n        \"name\": \"UtilityDictionaries\",\n        \"setup\": \"{jpmn-utility-dictionaries}\"\n    },\n    \"Word\": {\n        \"anime_cards_import\": \"front\",\n        \"auto_fill\": true,\n        \"binary_field\": false,\n        \"font\": 20,\n        \"jidoujisho_export\": \"Term\",\n        \"name\": \"Word\",\n        \"setup\": \"{expression}\"\n    },\n    \"WordAudio\": {\n        \"anime_cards_import\": \"Audio\",\n        \"auto_fill\": true,\n        \"binary_field\": false,\n        \"font\": 15,\n        \"jidoujisho_export\": \"Term Audio\",\n        \"name\": \"WordAudio\",\n        \"setup\": \"{audio}\"\n    },\n    \"WordReading\": {\n        \"anime_cards_import\": \"Reading\",\n        \"auto_fill\": true,\n        \"binary_field\": false,\n        \"font\": 20,\n        \"jidoujisho_export\": \"Furigana\",\n        \"name\": \"WordReading\",\n        \"setup\": \"{furigana-plain}\"\n    },\n    \"WordReadingHiragana\": {\n        \"auto_fill\": true,\n        \"binary_field\": false,\n        \"font\": 10,\n        \"jidoujisho_export\": \"Reading\",\n        \"name\": \"WordReadingHiragana\",\n        \"setup\": \"{jpmn-word-reading-hiragana}\",\n        \"version\": \"0.11.0.0\"\n    },\n    \"YomichanWordTags\": {\n        \"auto_fill\": true,\n        \"binary_field\": false,\n        \"font\": 10,\n        \"name\": \"YomichanWordTags\",\n        \"setup\": \"{tags}\",\n        \"version\": \"0.12.0.0\"\n    }\n};\n","import { LOGGER } from './logger';\nlet fieldFilledCache = {};\nexport function cacheFieldFilled(field, value) {\n    fieldFilledCache[field] = value;\n}\nexport function fieldIsFilled(field) {\n    const cachedValue = fieldFilledCache[field];\n    if (cachedValue !== undefined) {\n        return cachedValue;\n    }\n    const x = document.getElementById(`hidden_field_exists_${field}`);\n    if (x === null) {\n        LOGGER.warn(`fieldIsFilled(${field}) could not find element`);\n        return false; // shouldn't ever be reached?\n    }\n    return x.innerHTML.length !== 0;\n}\n/* if every field exists */\nexport function fieldsAllFilled(...fields) {\n    for (const field of fields) {\n        if (!fieldIsFilled(field)) {\n            return false;\n        }\n    }\n    return true;\n}\n/* if any field exists */\nexport function fieldsAnyFilled(...fields) {\n    for (const field of fields) {\n        if (fieldIsFilled(field)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function fieldsAllEmpty(...fields) {\n    return !fieldsAnyFilled(...fields);\n}\n// per card\nlet fieldValueCache = {};\n// specifically to cache for asynchronous functions\n// (when the getElementById can return a different elemnt)\nexport function cacheFieldValue(field) {\n    const cacheValue = fieldValueCache[field];\n    if (cacheValue !== undefined) {\n        return; // already cached\n    }\n    const value = getFieldValue(field);\n    fieldValueCache[field] = value;\n}\nexport function getFieldValue(field) {\n    const cacheValue = fieldValueCache[field];\n    if (cacheValue !== undefined) {\n        return cacheValue;\n    }\n    const x = document.getElementById(`hidden_field_${field}`);\n    if (x === null) {\n        LOGGER.warn(`getFieldValue(${field}) could not find element`);\n        return '';\n    }\n    return x.innerHTML;\n}\n// NOTE: not currently cached!!!\n// Should this be cached at some point?\nexport function getFieldValueEle(field) {\n    const x = document.getElementById(`hidden_field_${field}`);\n    if (x === null) {\n        LOGGER.warn(`getFieldValueEle(${field}) could not find element`);\n        return null;\n    }\n    return x;\n}\n/*\n * This is prefixed with `_` to indicate that this should not be used under normal circumstances.\n * These values should be reset after each card flip normally, but has to be manually reset\n * with cache.ts\n */\nexport function _resetGlobalState() {\n    fieldValueCache = {};\n    fieldFilledCache = {};\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { LOGGER } from './logger';\nimport { translatorStrs } from './consts';\nimport { getFieldValue, fieldsAnyFilled, fieldIsFilled } from './fields';\n// TODO use this in the HTML as well (define it under make.py)\nexport const BASE_DOCS_URL = 'https://aquafina-water-bottle.github.io/jp-mining-note-prerelease';\n//export const VW = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);\nlet _tagsList = null;\nexport function getTags() {\n    if (_tagsList === null) {\n        let tags = '{{Tags}}'.split(' ');\n        if (tags.length === 1 && tags[0] === '') {\n            _tagsList = [];\n        }\n        else {\n            _tagsList = tags;\n        }\n    }\n    return _tagsList;\n}\n// all verb tags that isn't 'vs'\nconst ALL_VERB_OR_IADJ_TAGS = new Set([\n    'v_unspec',\n    'v1',\n    'v1_s',\n    'v2a_s',\n    'v2b_k',\n    'v2b_s',\n    'v2d_k',\n    'v2d_s',\n    'v2g_k',\n    'v2g_s',\n    'v2h_k',\n    'v2h_s',\n    'v2k_k',\n    'v2k_s',\n    'v2m_k',\n    'v2m_s',\n    'v2n_s',\n    'v2r_k',\n    'v2r_s',\n    'v2s_s',\n    'v2t_k',\n    'v2t_s',\n    'v2w_s',\n    'v2y_k',\n    'v2y_s',\n    'v2z_s',\n    'v4b',\n    'v4g',\n    'v4h',\n    'v4k',\n    'v4m',\n    'v4n',\n    'v4r',\n    'v4s',\n    'v4t',\n    'v5aru',\n    'v5b',\n    'v5g',\n    'v5k',\n    'v5k_s',\n    'v5m',\n    'v5n',\n    'v5r',\n    'v5r_i',\n    'v5s',\n    'v5t',\n    'v5u',\n    'v5u_s',\n    'v5uru',\n    'vk',\n    'vn',\n    'vr',\n    'vz',\n    'adj-i',\n]);\n// A key string that should be almost guaranteed to be unique per card.\n// If a card has the same key and sentence, it's safe to guess that the card\n// is functionally the same anways.\n// Useful for usage in persistance, etc.\n//let cardKey: string | null = null;\n//export function getCardKey() {\n//  if (cardKey !== null) {\n//    cardKey = `${getFieldValue(\"Key\")}.${getFieldValue(\"Sentence\")}`;\n//  }\n//  return cardKey;\n//}\nlet _cardKey = null;\nexport function getCardKey() {\n    if (_cardKey !== null) {\n        return _cardKey;\n    }\n    _cardKey = `${getFieldValue('Key')}.${getFieldValue('Sentence')}`;\n    return _cardKey;\n}\n/*\n * This is prefixed with `_` to indicate that this should not be used under normal circumstances.\n * These values should be reset after each card flip normally, but has to be manually reset\n * with cache.ts\n */\nexport function _resetGlobalState() {\n    _cardKey = null;\n    _tagsList = null;\n}\nexport function popupMenuMessage(message, isHTML = false) {\n    let popupMenu = document.getElementById('popup_menu');\n    if (popupMenu === null) {\n        LOGGER.warn('popup menu cannot be found?');\n        return;\n    }\n    // creates message\n    const popupMessageDiv = document.createElement('div');\n    if (isHTML) {\n        popupMessageDiv.innerHTML = message;\n    }\n    else {\n        popupMessageDiv.textContent = message;\n    }\n    popupMessageDiv.classList.add('popup-menu--animate');\n    popupMenu.appendChild(popupMessageDiv);\n    // kills the popup after the animations play\n    setTimeout(() => {\n        popupMenu === null || popupMenu === void 0 ? void 0 : popupMenu.removeChild(popupMessageDiv);\n        LOGGER.debug(`Removed popup: \"${message}\"`, 2);\n    }, 1000 * (0.6 + 3 + 0.75));\n}\nexport function isMobile() {\n    return document.documentElement.classList.contains('mobile');\n}\nexport function isAndroid() {\n    return document.documentElement.classList.contains('android');\n}\nexport function escapeRegExp(str) {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\nexport function escapeReplacement(str) {\n    return str.replace(/\\$/g, '$$$$');\n}\n// why isn't this builtin :(?\nexport function countOccurancesInString(str, substr) {\n    var _a;\n    return ((_a = str.match(escapeRegExp(substr))) !== null && _a !== void 0 ? _a : []).length;\n}\nexport function arrContainsAnyOf(mainArr, testArr) {\n    for (const x of testArr) {\n        if (mainArr.includes(x)) {\n            return true;\n        }\n    }\n    return false;\n}\nlet _paIndicator = null;\nexport function getPAIndicator() {\n    if (_paIndicator !== null) {\n        return _paIndicator;\n    }\n    let type = null;\n    let tooltip = null;\n    if (getCardType() === 'pa_sent') {\n        type = 'sentence';\n    }\n    else if (fieldIsFilled('IsAudioCard')) {\n        // ignores word cards and sentence cards for now, TODO?\n        if (fieldIsFilled('PADoNotTest')) {\n            type = 'none';\n        }\n        else if (fieldIsFilled('PATestOnlyWord')) {\n            type = 'word';\n            //} else if (fieldIsFilled(\"IsSentenceCard\")) {\n            //  type = \"sentence\";\n        }\n        else {\n            type = 'sentence';\n        }\n    }\n    else if (fieldsAnyFilled('PADoNotTest', 'PASeparateWordCard')) {\n        type = 'none';\n    }\n    else if (fieldsAnyFilled('PASeparateSentenceCard', 'PATestOnlyWord')) {\n        type = 'word';\n    }\n    else if (fieldsAnyFilled('IsSentenceCard')) {\n        type = 'sentence';\n    }\n    else {\n        type = 'word';\n    }\n    let className = `pa-indicator-color--${type}`;\n    if (type === 'none') {\n        tooltip = translatorStrs['pa-indicator-do-not-test'];\n    }\n    else if (type == 'word') {\n        tooltip = translatorStrs['pa-indicator-word'];\n    }\n    else {\n        // sentence\n        tooltip = translatorStrs['pa-indicator-sentence'];\n    }\n    _paIndicator = {\n        type: type,\n        className: className,\n        tooltip: tooltip,\n    };\n    return _paIndicator;\n}\nexport function getCardType() {\n    var _a;\n    return (_a = document.getElementById('hidden_card_type')) === null || _a === void 0 ? void 0 : _a.innerHTML;\n}\nexport function getCardTypeName() {\n    var _a;\n    return (_a = document.getElementById('hidden_card_type_name')) === null || _a === void 0 ? void 0 : _a.innerHTML;\n}\nexport function getCardSide() {\n    var _a;\n    return (_a = document.getElementById('hidden_card_side')) === null || _a === void 0 ? void 0 : _a.innerHTML;\n}\nexport function getDeckName() {\n    var _a;\n    return (_a = document.getElementById('deck')) === null || _a === void 0 ? void 0 : _a.getAttribute(\"deck_name\");\n}\nexport function getNoteType() {\n    var _a;\n    return (_a = document.getElementById('hidden_note_type')) === null || _a === void 0 ? void 0 : _a.innerHTML;\n}\nexport function getModelName() {\n    var _a;\n    return (_a = document.getElementById('hidden_model_name')) === null || _a === void 0 ? void 0 : _a.innerHTML;\n}\nfunction _plainToX(str, filter) {\n    const re = / ?([^ >]+?)\\[(.+?)\\]/g;\n    let result = str.replace(/&nbsp;/g, ' ');\n    return result.replace(re, filter);\n}\n/* equivalent to anki's furigana: filter */\nexport function plainToRuby(str) {\n    // NOTE: <rb> is deprecated (but we don't use its main feature here anyways):\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rb\n    // It might be useful to retain this for easier styling (and because Anki internally uses it)\n    return _plainToX(str, '<ruby><rb>$1</rb><rt>$2</rt></ruby>');\n}\n/* equivalent to anki's kana: filter */\nexport function plainToKanaOnly(str) {\n    return _plainToX(str, '$2');\n}\n/* equivalent to anki's kanji: filter */\nexport function plainToKanjiOnly(str) {\n    return _plainToX(str, '$1');\n}\nexport function throwOnNotFound(id) {\n    const result = document.getElementById(id);\n    if (result === null) {\n        throw Error(`${id} cannot be found`);\n    }\n    return result;\n}\nexport function getWordTags(wordTagsStr) {\n    if (wordTagsStr.length === 0) {\n        return [];\n    }\n    return wordTagsStr.split(', ');\n}\nexport function isVerbOrIAdj(wordTags) {\n    for (const t of wordTags) {\n        if (ALL_VERB_OR_IADJ_TAGS.has(t)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction filterCardsReduce1(aMaxFirst, aMaxLast, bMaxFirst, bMaxLast, aArrLen, bArrLen) {\n    let flip = true;\n    while (aMaxFirst + aMaxLast > aArrLen && bMaxFirst + bMaxLast < bArrLen) {\n        if (flip && aMaxFirst > 0) {\n            aMaxFirst -= 1;\n            bMaxFirst += 1;\n        }\n        else if (aMaxLast > 0) {\n            aMaxLast -= 1;\n            bMaxLast += 1;\n        }\n        flip = !flip;\n    }\n    return [aMaxFirst, aMaxLast, bMaxFirst, bMaxLast];\n}\nfunction filterCardsReduce2(tempTotal, limit) {\n    if (tempTotal === 0) {\n        // nothing to do\n        limit = 0;\n    }\n    else if (tempTotal >= limit) {\n        // can remove total limit\n        tempTotal -= limit;\n    }\n    else {\n        // tempTotal !== 0 && tempTotal < limit\n        limit = tempTotal; // gets remaining amount\n        tempTotal = 0;\n    }\n    return [tempTotal, limit];\n}\nexport function filterCards(a, b, aMaxFirst, aMaxLast, bMaxFirst, bMaxLast) {\n    if (a.length !== b.length) {\n        throw Error(`Invalid lengths: ${a.length} vs ${b.length}`);\n    }\n    // store original values\n    const aMaxFirstOG = aMaxFirst;\n    const aMaxLastOG = aMaxLast;\n    const bMaxFirstOG = bMaxFirst;\n    const bMaxLastOG = bMaxLast;\n    let totalLimits = aMaxFirst + aMaxLast + bMaxFirst + bMaxLast;\n    // result\n    let aRes = [];\n    let bRes = [];\n    // attempts to use all in a_arr and b_arr to fill all of the resulting 2 arrays\n    for (let i = 0; i < a.length; i++) {\n        const aArr = Array.from(a[i]).sort();\n        const bArr = Array.from(b[i]).sort();\n        //console.log(\"filter1\", aMaxFirst, aMaxLast, bMaxFirst, bMaxLast, totalLimits, aArr.length, bArr.length);\n        // spreads out the limits to each other if necessary\n        // only spreads out the limits if the other array can handle it!\n        // expensive (O(n) instead of constant) but it's guaranteed to work\n        [aMaxFirst, aMaxLast, bMaxFirst, bMaxLast] = filterCardsReduce1(aMaxFirst, aMaxLast, bMaxFirst, bMaxLast, aArr.length, bArr.length);\n        //console.log(\"filter2\", aMaxFirst, aMaxLast, bMaxFirst, bMaxLast, totalLimits);\n        [bMaxFirst, bMaxLast, aMaxFirst, aMaxLast] = filterCardsReduce1(bMaxFirst, bMaxLast, aMaxFirst, aMaxLast, bArr.length, aArr.length);\n        //console.log(\"filter3\", aMaxFirst, aMaxLast, bMaxFirst, bMaxLast, totalLimits);\n        if (aArr.length > aMaxFirst + aMaxLast) {\n            if (aMaxLast === 0) {\n                aRes.push([...aArr.slice(0, aMaxFirst)]);\n            }\n            else {\n                aRes.push([...aArr.slice(0, aMaxFirst), ...aArr.slice(-aMaxLast, aArr.length)]);\n            }\n            totalLimits -= aMaxFirst + aMaxLast;\n        }\n        else {\n            aRes.push(Array.from(aArr));\n            totalLimits -= aArr.length;\n        }\n        if (bArr.length > bMaxFirst + bMaxLast) {\n            if (bMaxLast === 0) {\n                bRes.push([...bArr.slice(0, bMaxFirst)]);\n            }\n            else {\n                bRes.push([...bArr.slice(0, bMaxFirst), ...bArr.slice(-bMaxLast, bArr.length)]);\n            }\n            totalLimits -= bMaxFirst + bMaxLast;\n        }\n        else {\n            bRes.push(Array.from(bArr));\n            totalLimits -= bArr.length;\n        }\n        //console.log(\"filter4\", aMaxFirst, aMaxLast, bMaxFirst, bMaxLast, totalLimits);\n        // we CANNOT break the loop here because we must add the remaining (empty) arrays\n        // to aRes and bRes it seems\n        // bubbles up all remaining limits in the following priority:\n        // aMaxFirst, aMaxLast, bMaxFirst, bMaxLast\n        let tempTotal = totalLimits;\n        [tempTotal, aMaxFirst] = filterCardsReduce2(tempTotal, aMaxFirstOG);\n        [tempTotal, aMaxLast] = filterCardsReduce2(tempTotal, aMaxLastOG);\n        [tempTotal, bMaxFirst] = filterCardsReduce2(tempTotal, bMaxFirstOG);\n        [tempTotal, bMaxLast] = filterCardsReduce2(tempTotal, bMaxLastOG);\n        //console.log(\"filter5\", aMaxFirst, aMaxLast, bMaxFirst, bMaxLast, totalLimits);\n    }\n    return [aRes, bRes];\n}\nexport function hybridClick() {\n    const toggleEle = document.getElementById('hybrid_click_toggle');\n    if (toggleEle !== null) {\n        toggleEle.checked = !toggleEle.checked;\n    }\n}\nexport function addOnShownHook(callback) {\n    let success = false;\n    if (typeof window.onShownHook !== 'undefined') {\n        let onShownHook = window.onShownHook;\n        if (Array.isArray(onShownHook)) {\n            success = true;\n            onShownHook.push(callback);\n        }\n    }\n    if (!success) {\n        LOGGER.debug(\"(playSilence) onShownHook is invalid or doesn't exist\");\n    }\n}\n// plays the silence audio only if the pa_silence_audio ID exists somewhere in the HTML.\nexport function playAudio(id) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let ele = document.querySelector(`#${id} .soundLink, #${id} .replaybutton`);\n        if (ele) {\n            ele.click();\n        }\n    });\n}\n","/*\n * select persist\n * Internal implemenetation of Anki Persist that allows selection of the default mode.\n * If this were to be made more public facing, it might be best to change the\n * method names to be the exact same as the original...\n */\nconst _persistenceKey = 'github.com/Aquafina-water-bottle/jp-mining-note/';\n//interface SPersistGlobalInterface {\n//  /* Removes all previously persisted key-value pairs. */\n//  clear(): void;\n//\n//  isAvailable(): boolean;\n//}\nexport class SPersistSessionStorage {\n    constructor() { }\n    isAvailable() {\n        return (globalThis.sessionStorage !== null && typeof globalThis.sessionStorage === 'object');\n    }\n    has(key) {\n        return globalThis.sessionStorage.getItem(_persistenceKey + key) !== null;\n    }\n    get(key) {\n        return globalThis.sessionStorage.getItem(_persistenceKey + key);\n    }\n    set(key, value) {\n        globalThis.sessionStorage.setItem(_persistenceKey + key, value);\n    }\n    pop(key) {\n        const item = this.get(key);\n        globalThis.sessionStorage.removeItem(_persistenceKey + key);\n        return item;\n    }\n    onlyStoresStrings() {\n        return true;\n    }\n    getType() {\n        return 'sessionStorage';\n    }\n}\nclass SPersistObj {\n    constructor(obj) {\n        obj[_persistenceKey] = {};\n        this.storage = obj[_persistenceKey];\n    }\n    //isAvailable() {\n    //  return this.storage !== null && typeof this.storage === 'object';\n    //}\n    has(key) {\n        return key in this.storage;\n    }\n    get(key) {\n        if (this.has(key)) {\n            return this.storage[key];\n        }\n        return null;\n    }\n    set(key, value) {\n        this.storage[key] = value;\n    }\n    pop(key) {\n        const item = this.storage[key];\n        delete this.storage[key];\n        return item;\n    }\n    onlyStoresStrings() {\n        return false;\n    }\n    getType() {\n        return 'window';\n    }\n}\nconst persistObjs = {\n    sessionStorage: null,\n    window: null,\n};\nexport function manuallyCreateObjPersist() {\n    // WARNING: you very very very likely don't want to call this function\n    // outside this module unless you know what you are doing!\n    if ('window' in globalThis && !('_SPersist_windowKey' in window)) {\n        if (typeof window.py === 'object') {\n            return; // nothing to do\n        }\n        console.log('Manually created .py persist...');\n        window.py = {};\n        window._SPersist_windowKey = new SPersistObj(window.py);\n        calculatePersists();\n    }\n}\nfunction calculatePersists() {\n    console.log('spersist control');\n    // wrappers to ensure that these are defined only once\n    if ('window' in globalThis &&\n        !('_SPersist_sessionStorage' in window) &&\n        globalThis.sessionStorage !== null &&\n        typeof globalThis.sessionStorage === 'object') {\n        window._SPersist_sessionStorage = new SPersistSessionStorage();\n        console.log('Initializing _SPersist_sessionStorage');\n    }\n    if ('window' in globalThis && !('_SPersist_windowKey' in window)) {\n        if (typeof window.py === 'object') {\n            //LOGGER.debug('Initializing _SPersist_windowKey.py');\n            console.log('Initializing _SPersist_windowKey.py');\n            window._SPersist_windowKey = new SPersistObj(window.py);\n        }\n        else if (typeof window.qt === 'object') {\n            //LOGGER.debug('Initializing _SPersist_windowKey.qt');\n            console.log('Initializing _SPersist_windowKey.qt');\n            window._SPersist_windowKey = new SPersistObj(window.qt);\n        }\n    }\n    persistObjs.sessionStorage =\n        'window' in globalThis ? window._SPersist_sessionStorage : null;\n    persistObjs.window =\n        'window' in globalThis ? window._SPersist_windowKey : null;\n}\ncalculatePersists();\nexport function recalculatePersists() { }\n/* this function removes the need for isAvailable(), since it will be null if not available */\nfunction selectPersist(...types) {\n    if (types.length === 0) {\n        types = ['sessionStorage', 'window'];\n    }\n    for (const t of types) {\n        const persist = persistObjs[t];\n        if (typeof persist !== 'undefined') {\n            return persistObjs[t];\n        }\n    }\n    return null;\n}\nexport function selectPersistStr() {\n    return selectPersist('sessionStorage', 'window');\n}\nexport function selectPersistObj() {\n    return selectPersist('window');\n}\nexport function selectPersistAny() {\n    return selectPersist('sessionStorage', 'window');\n}\n//export function clearAllPersists() {\n//  for (const persistObj of Object.values(persistObjs)) {\n//    if (persistObj.isAvailable()) {\n//      persistObj.clear();\n//    }\n//  }\n//}\n","// manager to get viewport width and viewport height\n// this is here in order to prevent unnecessary reflows on each card open!\n// Also see: globalEventManager.ts\nimport { LOGGER } from './logger';\nimport { selectPersistStr } from './spersist';\nimport { getOption } from './options';\nimport { compileOpts } from './consts';\nconst widthKey = 'jpmn.reflow.widthKey';\n//const heightKey = \"jpmn.reflow.heightKey\";\nfunction getVWForceReflow() {\n    LOGGER.debug('Running getVWForceReflow...', 2);\n    //return Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);\n    return document.documentElement.clientWidth || 0;\n}\n//function _getVHForceReflow(): number {\n//  return Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0);\n//}\nexport function setWidthCache(persist) {\n    const VW = getVWForceReflow();\n    persist.set(widthKey, VW.toString());\n    LOGGER.debug(`set viewport width to ${VW}`, 1);\n}\nfunction getViewportWidthFromCache() {\n    const persist = selectPersistStr();\n    if (persist === null) {\n        return getVWForceReflow();\n    }\n    else {\n        if (!persist.has(widthKey)) {\n            setWidthCache(persist);\n            //setResizeListener(persist);\n        }\n        return Number(persist.get(widthKey));\n    }\n}\nfunction pxToNumber(px) {\n    if (!px.endsWith('px')) {\n        throw Error(`pxToNumber: cannot convert to number (${px})`);\n    }\n    return Number(px.substring(0, px.length - 2));\n}\n// NOTE: adjust width only! assumes a sane height, and decreases if necessary\nfunction adjustMobile(imgEle, wordBoxEle, imgBoxEle) {\n    if (imgEle === null) {\n        // nothing needs to be adjust if no image\n        return;\n    }\n    // does a lot of height/width reads here\n    // as all reads are grouped, only one forced reflow should happen\n    const dhReading = document.getElementById('dh_reading');\n    const dhWordPitch = document.getElementById('dh_word_pitch');\n    //const cardDiv = document.querySelector(\".card\") as HTMLElement;\n    // scrollWidth ensures it gets the width of the overflowed text\n    const dhLeftWidth = wordBoxEle.scrollWidth;\n    //const dhLeftOffsetWidth = wordBoxEle.offsetWidth; // width of the div without overflowed text\n    const dhReadingHeight = dhReading.scrollHeight;\n    const dhWordPitchWidth = dhWordPitch.offsetWidth; // saves width if necessary (if word overflows past screen)\n    const VW = getViewportWidth();\n    const dhLeftStyle = getComputedStyle(wordBoxEle);\n    const ftWidth = pxToNumber(dhLeftStyle.getPropertyValue('--folder-tab-width'));\n    const ftMarginLeft = pxToNumber(dhLeftStyle.getPropertyValue('--folder-tab-margin-left'));\n    const ftFullWidth = ftMarginLeft * 2 + ftWidth;\n    // I'm not sure how to convert --mobile-border (0.5rem) into pixels.\n    // However, 0.5rem === 8px with default settings, so this will be used here for now...\n    const border = 8;\n    const imageMargin = 8; // same with this\n    const cardWidth = VW - border * 2;\n    if (dhLeftWidth >= cardWidth) {\n        wordBoxEle.classList.toggle('dh-left--word-past-screen', true);\n        dhWordPitch.style.setProperty('max-width', `${dhWordPitchWidth}px`);\n    }\n    if (dhLeftWidth > ftFullWidth) {\n        wordBoxEle.classList.toggle('dh-left--word-past-tab', true);\n    }\n    // hardcoded min\n    // when using dhLeftWidth, we assume that dhLeftWidth will never change,\n    // but this assumption breaks when pitch accent is longer than the word!\n    // 100vw is the full card width\n    // border * 2: actual border + gap between word box + image box\n    // 2 * var(--dh-right-image-gap): additional padding around the image\n    // ${dhLeftWidth}px: self explanatory\n    const maxWidthCSS = `max(100vw - ${border * 3}px - (2 * var(--dh-right-image-gap)) - ${dhLeftWidth}px, 128px)`;\n    imgBoxEle.style.setProperty('max-width', maxWidthCSS);\n    imgEle.style.setProperty('max-width', maxWidthCSS); // ensures the max-width doesn't pass the image\n    let imgLoaded = false;\n    const adjustWordOverflow = (imgEle) => {\n        // ensure this is only called once per card\n        if (imgLoaded) {\n            return;\n        }\n        imgLoaded = true;\n        // goal: determine if word overflows into image element\n        // wordBoxEle.scrollWidth: ensures that scrollbar isn't gotten\n        // VW is max viewport width\n        // -imgEle.scrollWidth: self explanatory\n        // border * 2: left/right border of the card\n        // imageMargin: only subtract the image margin of one side (because we want to maintain this gap)\n        if (dhLeftWidth >= VW ||\n            wordBoxEle.scrollWidth > VW - imgEle.scrollWidth - border * 2 - imageMargin) {\n            // magic number 5 to make it slightly more separated from the word above\n            imgBoxEle.style.setProperty('margin-top', `${dhReadingHeight + 5}px`);\n            dhWordPitch.style.setProperty('text-align', `left`);\n        }\n    };\n    if (imgEle !== null) {\n        // THIS IS A RACE CONDITION\n        imgEle.onload = () => {\n            adjustWordOverflow(imgEle);\n            LOGGER.debug('adjustWordOverflow: imgEle.onload');\n        };\n        if (imgEle.complete) {\n            // this is usually true despite imgEle.onload being called???\n            LOGGER.debug('adjustWordOverflow: imgEle.complete');\n            adjustWordOverflow(imgEle);\n        }\n    }\n}\nfunction setHeight(imgEle, imgBoxEle, height) {\n    if (imgEle !== null) {\n        imgEle.style.maxHeight = height + 'px';\n    }\n    imgBoxEle.style.maxHeight = height + 'px';\n}\n// resets everything for card refreshes\nfunction resetProperties(imgEle, wordBoxEle, imgBoxEle) {\n    // we are using js\n    const dhRight = document.getElementById('dh_right');\n    dhRight === null || dhRight === void 0 ? void 0 : dhRight.classList.toggle('dh-right--no-js', false);\n    // resets setHeight\n    imgEle === null || imgEle === void 0 ? void 0 : imgEle.style.removeProperty('max-height');\n    imgBoxEle.style.removeProperty('max-height');\n    // resets adjustMobile\n    const dhWordPitch = document.getElementById('dh_word_pitch');\n    dhWordPitch === null || dhWordPitch === void 0 ? void 0 : dhWordPitch.style.removeProperty('max-width');\n    dhWordPitch === null || dhWordPitch === void 0 ? void 0 : dhWordPitch.style.removeProperty('text-align');\n    imgBoxEle.style.removeProperty('max-width');\n    imgBoxEle.style.removeProperty('margin-top');\n    imgEle === null || imgEle === void 0 ? void 0 : imgEle.style.removeProperty('max-width');\n}\n/*\n * adjust sizes of various elements within the word image box\n * - can be called with refresh card\n */\nexport function adjustElements(imgEle, wordBoxEle, imgBoxEle) {\n    LOGGER.debug(\"Running adjustElements...\", 1);\n    resetProperties(imgEle, wordBoxEle, imgBoxEle);\n    if (getViewportWidth() > compileOpts['breakpoints.width.combinePicture']) {\n        // pc\n        if (getOption('imgStylizer.mainImage.resizeHeightMode') === 'auto-height') {\n            const wordBoxEleHeight = wordBoxEle.offsetHeight;\n            setHeight(imgEle, imgBoxEle, wordBoxEleHeight);\n        }\n        else if (getOption('imgStylizer.mainImage.resizeHeightMode') === 'fixed') {\n            const height = getOption('imgStylizer.mainImage.resizeHeightFixedValue');\n            setHeight(imgEle, imgBoxEle, height);\n        }\n    }\n    else if (getOption('imgStylizer.mainImage.resizeOnMobile')) {\n        // mobile\n        adjustMobile(imgEle, wordBoxEle, imgBoxEle);\n    }\n}\nexport function refreshAdjustElements(imgStylizer) {\n    var _a;\n    const wordBoxEle = document.getElementById('dh_left');\n    const imgBoxEle = document.getElementById('dh_right');\n    if (wordBoxEle !== null && imgBoxEle !== null) {\n        const imgEle = (_a = imgStylizer === null || imgStylizer === void 0 ? void 0 : imgStylizer.getDisplayImg()) !== null && _a !== void 0 ? _a : null;\n        adjustElements(imgEle, wordBoxEle, imgBoxEle);\n    }\n}\nexport function getViewportWidth() {\n    LOGGER.debug(`viewport width is currently ${getViewportWidthFromCache()}`, 1);\n    return getViewportWidthFromCache();\n}\n//export function getViewportHeight(): number {\n//  return 0;\n//}\n","import { compileOpts, runtimeOpts } from './consts';\nimport { LOGGER } from './logger';\nimport { isMobile, getCardType, getCardSide, getDeckName } from './utils';\nimport { fieldsAllEmpty, fieldsAllFilled, fieldsAnyFilled } from './fields';\nimport { getViewportWidth } from './reflow';\nconst OVERRIDE_FUNCS = {\n    /*\n    \"key\": {\n      \"type\": \"isMobile\",\n      \"resultTrue\": ...,\n      \"resultFalse\": ...,\n    },\n     */\n    isMobile: isMobile,\n    /*\n    key: {\n      \"type\": \"isPC\",\n      \"resultTrue\": ...,\n      \"resultFalse\": ...,\n    },\n     */\n    isPC: () => !isMobile(),\n    /*\n    key: {\n      \"type\": \"isiPhoneiPad\",\n      \"resultTrue\": ...,\n      \"resultFalse\": ...,\n    },\n     */\n    isiPhoneiPad: () => {\n        return (document.documentElement.classList.contains('iphone') ||\n            document.documentElement.classList.contains('ipad'));\n    },\n    // TODO: make this only detect AnkiMobile! Is this even possible?\n    isAnkiMobile: () => {\n        return (document.documentElement.classList.contains('iphone') ||\n            document.documentElement.classList.contains('ipad'));\n    },\n    /*\n    key: {\n      \"type\": \"viewportWidth\",\n      \"args\": {\n        \"op\": MATH_OP,\n        \"value\": VALUE,\n      },\n      \"resultTrue\": ...,\n      \"resultFalse\": ...,\n    },\n     */\n    viewportWidth: (args) => {\n        if (args !== null && typeof args === 'object' && 'op' in args && 'value' in args) {\n            if (args.op in OPS) {\n                return OPS[args.op](getViewportWidth(), args.value);\n            }\n        }\n        LOGGER.warn(`Invalid viewportWidth arguments: ${args}`, { ignoreOptions: true });\n        return true;\n    },\n    /*\n    key: {\n      \"type\": \"viewportWidthBreakpoint\",\n      \"args\": {\n        \"op\": MATH_OP,\n        \"value\": VALUE,\n      },\n      \"resultTrue\": ...,\n      \"resultFalse\": ...,\n    },\n     */\n    viewportWidthBreakpoint: (args) => {\n        if (args !== null && typeof args === 'object' && 'op' in args && 'value' in args) {\n            if (args.op in OPS && args.value in VIEWPORT_WIDTH_BPS) {\n                const bp = VIEWPORT_WIDTH_BPS[args.value];\n                return OPS[args.op](getViewportWidth(), bp);\n            }\n        }\n        LOGGER.warn(`Invalid viewportWidth arguments: ${args}`, { ignoreOptions: true });\n        return true;\n    },\n    /*\n    key: {\n      \"type\": \"cardType\",\n      \"args\": {\n        \"op\": STRING_OP,\n        \"cardType\": \"front\" or \"back\",\n      },\n      \"resultTrue\": ...,\n      \"resultFalse\": ...,\n    },\n     */\n    cardType: (args) => {\n        if (args !== null &&\n            typeof args === 'object' &&\n            'op' in args &&\n            typeof args.op === 'string' &&\n            args.op in STR_OPS &&\n            'cardType' in args) {\n            if (args.op in OPS) {\n                const testCardType = args.cardType;\n                return STR_OPS[args.op](getCardType(), testCardType);\n            }\n        }\n        LOGGER.warn(`Invalid cardType arguments: ${args}`, { ignoreOptions: true });\n        return true;\n    },\n    /*\n    key: {\n      \"type\": \"cardSide\",\n      \"args\": {\n        \"op\": STRING_OP,\n        \"cardSide\": \"front\" or \"back\",\n      },\n      \"resultTrue\": ...,\n      \"resultFalse\": ...,\n    },\n     */\n    cardSide: (args) => {\n        if (args !== null &&\n            typeof args === 'object' &&\n            'op' in args &&\n            typeof args.op === 'string' &&\n            args.op in STR_OPS &&\n            'cardSide' in args) {\n            if (args.op in OPS) {\n                const testCardSide = args.cardSide;\n                return STR_OPS[args.op](getCardSide(), testCardSide);\n            }\n        }\n        LOGGER.warn(`Invalid cardType arguments: ${args}`, { ignoreOptions: true });\n        return true;\n    },\n    /*\n    key: {\n      \"type\": \"deckName\",\n      \"args\": {\n        \"op\": STRING_OP,\n        \"deckName\": \"DECK_NAME\"\n      },\n      \"resultTrue\": ...,\n      \"resultFalse\": ...,\n    },\n     */\n    deckName: (args) => {\n        if (args !== null &&\n            typeof args === 'object' &&\n            'op' in args &&\n            typeof args.op === 'string' &&\n            args.op in STR_OPS &&\n            'deckName' in args &&\n            typeof args.deckName === 'string') {\n            if (args.op in OPS) {\n                const deckName = args.deckName;\n                return STR_OPS[args.op](getDeckName(), deckName);\n            }\n        }\n        LOGGER.warn(`Invalid deckName arguments: ${args}`, { ignoreOptions: true });\n        return true;\n    },\n    /*\n    key: {\n      \"type\": \"fieldsAllEmpty\",\n      \"args\": {\n        \"fields\": [FIELD...],\n      },\n      \"resultTrue\": ...,\n      \"resultFalse\": ...,\n    },\n     */\n    fieldsAllEmpty: overrideFuncFields(fieldsAllEmpty),\n    /*\n    key: {\n      \"type\": \"fieldsAllFilled\",\n      \"args\": {\n        \"fields\": [FIELD...],\n      },\n      \"resultTrue\": ...,\n      \"resultFalse\": ...,\n    },\n     */\n    fieldsAllFilled: overrideFuncFields(fieldsAllFilled),\n    /*\n    key: {\n      \"type\": \"fieldsAnyFilled\",\n      \"args\": {\n        \"fields\": [FIELD...],\n      },\n      \"resultTrue\": ...,\n      \"resultFalse\": ...,\n    },\n     */\n    fieldsAnyFilled: overrideFuncFields(fieldsAnyFilled),\n    // TODO: AND & OR operators?\n};\nconst STR_OPS = {\n    '===': (a, b) => a === b,\n    '!==': (a, b) => a !== b,\n};\nconst OPS = {\n    '===': (a, b) => a === b,\n    '!==': (a, b) => a !== b,\n    '>': (a, b) => a > b,\n    '<': (a, b) => a < b,\n    '>=': (a, b) => a >= b,\n    '<=': (a, b) => a <= b,\n};\nconst VIEWPORT_WIDTH_BPS = {\n    displaySentenceShrink: compileOpts['breakpoints.width.displaySentenceShrink'],\n    displaySentenceRemoveNewlines: compileOpts['breakpoints.width.displaySentenceRemoveNewlines'],\n    maxWidthBackside: compileOpts['breakpoints.width.maxWidthBackside'],\n    combinePicture: compileOpts['breakpoints.width.combinePicture'],\n};\n// generates function\nfunction overrideFuncFields(fieldsFunc) {\n    return (args) => {\n        if (args !== null &&\n            typeof args === 'object' &&\n            'field' in args &&\n            Array.isArray(args.field)) {\n            return fieldsFunc(...args.field);\n        }\n        LOGGER.warn(`Invalid cardType arguments: ${args}`, { ignoreOptions: true });\n        return true;\n    };\n}\nfunction isOverrideValue(val) {\n    return (val !== null &&\n        typeof val === 'object' &&\n        'type' in val &&\n        'resultTrue' in val &&\n        'resultFalse' in val);\n}\n// function can also take a simple value of the option, doesn't have to be an override\n// returns value, undefined if the value is invalid\n// exported for testing\nexport function attemptParseOverride(val, // user option or override value\nt // default option\n) {\n    let result = val;\n    if (isOverrideValue(val)) {\n        const override = val;\n        // valid override type\n        if (typeof override.type === 'string' && override.type in OVERRIDE_FUNCS) {\n            let overrideType = override.type;\n            let func = OVERRIDE_FUNCS[overrideType];\n            result = func(override.args) ? override.resultTrue : override.resultFalse;\n            if (isOverrideValue(result)) {\n                return attemptParseOverride(result, t);\n            }\n        }\n    }\n    // verify that it's a valid option\n    if (typeof result === typeof t) {\n        return result;\n    }\n    return undefined;\n}\n// - user option is defined under the window's JPMNOptions object\n// - a user option will ALWAYS override the default option\n// - if it doesn't exist, the _jpmn-opts.js file doesn't exist too btw\n// - hard-coded options will hard-code into consts.ts (runtimeOpts)\nfunction userOption(k) {\n    let userOptions = {};\n    if (typeof window !== 'undefined') {\n        // window can be undefined in cache.ts\n        const jpmnOpts = window === null || window === void 0 ? void 0 : window.JPMNOptions;\n        userOptions = jpmnOpts !== null && jpmnOpts !== void 0 ? jpmnOpts : {};\n    }\n    const t = runtimeOpts[k]; // default\n    const val = userOptions[k];\n    if (typeof val === undefined) {\n        return undefined;\n    }\n    return attemptParseOverride(val, t);\n}\nfunction getDefaultOption(k) {\n    const t = runtimeOpts[k];\n    if (k in runtimeOpts._overrides) {\n        const runtimeOverrides = runtimeOpts._overrides;\n        const result = attemptParseOverride(runtimeOverrides[k], t);\n        if (result === undefined) {\n            LOGGER.warn(`Default option override for ${k} is invalid?`, {\n                ignoreOptions: true,\n            });\n        }\n        else {\n            return result;\n        }\n    }\n    return t;\n}\n// gets runtime option, fallsback to default option if not found in user options.\nexport function getOption(k) {\n    var _a;\n    if (compileOpts.hardcodedRuntimeOptions) {\n        // compiler optimization\n        return getDefaultOption(k);\n    }\n    return (_a = userOption(k)) !== null && _a !== void 0 ? _a : getDefaultOption(k);\n}\n// given an array with entries of format [keyof O, any],\n// gets the first result where the setting contains the tag\nexport function checkOptTags(tags, tagsToResult) {\n    for (const [optKey, result] of tagsToResult) {\n        const opt = getOption(optKey);\n        // This is some workaround for some crazy typescript bug:\n        // For some reason, x can be of type number[] when defining these two separately:\n        //\n        //    \"tooltips.overrideOptions.autoPitchAccent\": {\n        //      \"autoPitchAccent.coloredPitchAccent.color.wordReadingPitchOverline\": true,\n        //    },\n        //    \"kanjiHover.overrideOptions.tooltips\": {\n        //      \"tooltips.displayPitchAccentOnHoverOnly\": false,\n        //    },\n        //\n        // To workaround this, we replace arrContainsAnyOf with this:\n        if (Array.isArray(opt)) {\n            for (const x of opt) {\n                if (typeof x === 'string' && tags.includes(x)) {\n                    return result;\n                }\n            }\n        }\n    }\n    return undefined;\n}\n","import { getOption } from './options';\nconst leechClass = 'info-circle-leech';\nconst warnClass = 'info-circle-warning';\nconst errorClass = 'info-circle-error';\nconst debugGroupId = 'info_circle_text_debug';\nconst infoGroupId = 'info_circle_text_info';\nconst leechGroupId = 'info_circle_text_leech';\nconst warnGroupId = 'info_circle_text_warning';\nconst errorGroupId = 'info_circle_text_error';\nexport class Logger {\n    getDebugLevel() {\n        if (this._debugLevel === null) {\n            this._debugLevel = getOption('logger.debugLevel');\n        }\n        return this._debugLevel;\n    }\n    getToConsole() {\n        if (this._toConsole === null) {\n            this._toConsole = getOption('logger.toConsole');\n        }\n        return this._toConsole;\n    }\n    getDebugConsoleLevel() {\n        if (this._debugConsoleLevel === null) {\n            this._debugConsoleLevel = getOption('logger.debugConsoleLevel');\n        }\n        return this._debugConsoleLevel;\n    }\n    constructor(name = null) {\n        // moved to lazy getters because a call to getOption fails when the option is an override type\n        this._debugLevel = null;\n        this._toConsole = null;\n        this._debugConsoleLevel = null;\n        this.name = name;\n    }\n    debug(message, level = 3, args) {\n        //const debugToConsole = getOption('logger.consoleLevel');\n        //const onlyShowCertainModules = getOption('logger.debug.onlyShowCertainModules');\n        //const validModules = getOption('logger.debug.onlyShowCertainModules.modules') as (\n        //  | string\n        //  | null\n        //)[];\n        //if (onlyShowCertainModules && !validModules.includes(this.name)) {\n        //  return;\n        //}\n        //if (level >= debugLevel) {\n        //  if (debugToConsole) {\n        //    let displayMsg: string = message;\n        //    if (this.name !== null) {\n        //      displayMsg = `(${this.name}) ${message}`;\n        //    }\n        //    console.log(displayMsg);\n        //  } else {\n        //    this.printMsg(message, debugGroupId, null, args);\n        //  }\n        //}\n        const dispMsg = this.formatMsg(message);\n        if (level >= this.getDebugLevel()) {\n            this.printMsg(dispMsg, debugGroupId, null, args);\n        }\n        if (this.getToConsole() && level >= this.getDebugConsoleLevel()) {\n            console.log(dispMsg);\n        }\n    }\n    info(message, args) {\n        const dispMsg = this.formatMsg(message);\n        this.printMsg(dispMsg, infoGroupId, null, args);\n        if (this.getToConsole()) {\n            console.info(dispMsg);\n        }\n    }\n    warn(message, args) {\n        const dispMsg = this.formatMsg(message);\n        if (this.getToConsole()) {\n            console.warn(dispMsg);\n        }\n        if (!(args === null || args === void 0 ? void 0 : args.ignoreOptions)) {\n            let ignoredWarns = getOption('logger.warn.ignore');\n            for (let substr of ignoredWarns) {\n                if (dispMsg.includes(substr)) {\n                    return;\n                }\n            }\n        }\n        this.printMsg(dispMsg, warnGroupId, warnClass, args);\n    }\n    error(message, args) {\n        const dispMsg = this.formatMsg(message);\n        if (this.getToConsole()) {\n            console.error(dispMsg);\n        }\n        if (!(args === null || args === void 0 ? void 0 : args.ignoreOptions)) {\n            let ignoredErrors = getOption('logger.error.ignore');\n            for (let substr of ignoredErrors) {\n                if (dispMsg.includes(substr)) {\n                    return;\n                }\n            }\n        }\n        this.printMsg(dispMsg, errorGroupId, errorClass, args);\n    }\n    errorStack(stack, msg, url, lineNo, columnNo) {\n        var _a;\n        if (this.getToConsole()) {\n            console.error(stack);\n        }\n        try {\n            let ignoredErrors = getOption('logger.error.ignore');\n            for (let substr of ignoredErrors) {\n                if (stack.includes(substr)) {\n                    return;\n                }\n            }\n            let ignoredErrorsRegex = getOption('logger.error.ignoreRegex');\n            for (let regexData of ignoredErrorsRegex) {\n                const regex = RegExp(regexData.pattern, (_a = regexData.flags) !== null && _a !== void 0 ? _a : undefined);\n                const result = regex.exec(stack);\n                if (result) {\n                    return;\n                }\n            }\n            //let stackList = stack.split(' at ');\n            //for (let i = 1; i < stackList.length; i++) {\n            //  stackList[i] = '>>> ' + stackList[i];\n            //}\n            //stackList[0] = 'Stack: ' + stackList[0];\n            //// array.splice(index, 0, item) is the equivalent of list.insert(index, item)\n            //stackList.splice(0, 0, `${msg}`);\n            //stackList.splice(1, 0, `URL: ${url}, position: ${lineNo}:${columnNo}`);\n            let fullMsg = `${stack}`;\n            if (msg) {\n                fullMsg = `${msg}\\n\\nStack:\\n` + fullMsg;\n            }\n            if (url || lineNo || columnNo) {\n                fullMsg += `\\nURL: ${url}\\nPosition: ${lineNo}:${columnNo}`;\n            }\n            this.printMsg(fullMsg, errorGroupId, errorClass);\n        }\n        catch (e) {\n            // in case the above fails for some reason\n            // better to throw an error that is not as prettily formatted\n            // than to essentially have it go missing\n            const fullMsg = `msg: ${msg} || url: ${url} || lineNo: ${lineNo} || colNo: ${columnNo} || stack: ${stack} || Could not show standard errorStack.`;\n            this.error(fullMsg);\n        }\n    }\n    leech(displayMsg = true) {\n        if (displayMsg) {\n            this.printMsg('', leechGroupId, leechClass);\n        }\n        else {\n            let infoCirc = document.getElementById('info_circle');\n            infoCirc === null || infoCirc === void 0 ? void 0 : infoCirc.classList.toggle(leechClass, true);\n        }\n        if (this.getToConsole()) {\n            console.info('Leech');\n        }\n    }\n    formatMsg(message) {\n        let displayMsg = message;\n        if (this.name !== null) {\n            displayMsg = `(${this.name}) ${message}`;\n        }\n        return displayMsg;\n    }\n    printMsg(message, eleId, colorClass, args = {}) {\n        let groupEle = document.getElementById(eleId);\n        if (groupEle !== null) {\n            this.appendMsg(message, groupEle, args);\n        }\n        let infoCirc = document.getElementById('info_circle');\n        if (colorClass !== null) {\n            infoCirc === null || infoCirc === void 0 ? void 0 : infoCirc.classList.toggle(colorClass, true);\n        }\n    }\n    appendMsg(message, groupEle, args = {}) {\n        let msgEle = document.createElement('div');\n        msgEle.classList.add('info-circle__message');\n        //if (args?.key) {\n        //  msgEle.setAttribute('data-key', args.key);\n        //}\n        if (args === null || args === void 0 ? void 0 : args.isHtml) {\n            msgEle.innerHTML = message;\n        }\n        else {\n            msgEle.textContent = message;\n        }\n        groupEle.appendChild(msgEle);\n    }\n}\nexport const LOGGER = new Logger();\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getOption } from './options';\nimport { Logger } from './logger';\nexport class Module {\n    constructor(id) {\n        this.localOpts = {};\n        this.id = id;\n        this.logger = new Logger(id);\n    }\n    /* sets the local option to be the specified value */\n    overrideOption(k, o) {\n        this.localOpts[k] = o;\n    }\n    /* similar to overrideOption, but accepts an entire set of key/value pairs */\n    overrideOptions(options) {\n        for (const key of Object.keys(options)) {\n            const o = options[key];\n            if (typeof o !== 'undefined') {\n                this.overrideOption(key, o);\n            }\n        }\n    }\n    getOption(k) {\n        const x = this.localOpts[k];\n        if (x !== undefined) {\n            return x;\n        }\n        return getOption(k);\n    }\n}\nexport class RunnableModule extends Module {\n    constructor(rid, id) {\n        super(id === undefined ? rid : id);\n        this.rid = rid; // requires another set apparently\n    }\n    run() {\n        try {\n            if (getOption(`${this.rid}.enabled`)) {\n                this.main();\n            }\n        }\n        catch (error) {\n            this.logger.errorStack(error.stack);\n        }\n    }\n}\nexport class RunnableAsyncModule extends RunnableModule {\n    constructor() {\n        super(...arguments);\n        this.useCache = false;\n        // still requires main() to be implemented!\n    }\n    setUseCache(useCache) {\n        this.useCache = useCache;\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // to call run() except in an async context\n            RunnableModule.prototype.run.call(this);\n        });\n    }\n}\n","import { Module } from \"./module\";\nimport { setWidthCache } from \"./reflow\";\nimport { selectPersistStr } from \"./spersist\";\nimport { hybridClick, getCardSide, getCardType, playAudio } from './utils';\nimport { fieldsAnyFilled } from './fields';\nimport { getOption } from './options';\nexport function hasKey(e, keys = null) {\n    return keys !== null && keys.includes(e.code);\n}\nfunction toggleDetailsTagOnKey(e, keys, ele) {\n    if (hasKey(e, keys) && ele !== null) {\n        toggleDetailsTag(ele);\n    }\n}\n/*\n * Toggles the display of any given details tag\n */\nfunction toggleDetailsTag(ele) {\n    if (ele === null) {\n        return;\n    }\n    if (ele.hasAttribute('open')) {\n        ele.removeAttribute('open');\n    }\n    else {\n        ele.setAttribute('open', 'true');\n    }\n}\nfunction baseKeybindFunc(e) {\n    if (hasKey(e, getOption('keybinds.playWordAudio'))) {\n        playAudio('word_audio');\n    }\n    if (hasKey(e, getOption('keybinds.playSentenceAudio'))) {\n        const toggleEle = document.getElementById('hybrid_click_toggle');\n        if (getCardSide() === 'front' &&\n            getCardType() === 'main' &&\n            getOption('hybridSentenceOpenOnPlaySentence') &&\n            fieldsAnyFilled('IsHoverCard', 'IsClickCard') &&\n            fieldsAnyFilled('IsTargetedSentenceCard', 'IsSentenceCard') &&\n            toggleEle !== null &&\n            !toggleEle.checked) {\n            hybridClick();\n        }\n        else {\n            playAudio('sentence_audio');\n        }\n    }\n    toggleDetailsTagOnKey(e, getOption('keybinds.toggleFrontFullSentenceDisplay'), document.getElementById('full_sentence_front_details'));\n    toggleDetailsTagOnKey(e, getOption('keybinds.toggleHintDisplay'), document.getElementById('hint_details'));\n    toggleDetailsTagOnKey(e, getOption('keybinds.toggleSecondaryDefinitionsDisplay'), document.getElementById('secondary_definition_details'));\n    toggleDetailsTagOnKey(e, getOption('keybinds.toggleAdditionalNotesDisplay'), document.getElementById('additional_notes_details'));\n    toggleDetailsTagOnKey(e, getOption('keybinds.toggleExtraDefinitionsDisplay'), document.getElementById('extra_definitions_details'));\n    toggleDetailsTagOnKey(e, getOption('keybinds.toggleExtraInfoDisplay'), document.getElementById('extra_info_details'));\n}\nexport class GlobalEventManager extends Module {\n    constructor() {\n        super('gEventManager');\n        this.keybindFuncs = {};\n        this.windowResizeFuncs = {};\n        this.windowResizeTimeout = null; // holder for timeout id\n        this.register();\n    }\n    addKeybindFunc(key, func) {\n        this.keybindFuncs[key] = func;\n    }\n    addWindowResizeFunc(key, func) {\n        this.windowResizeFuncs[key] = func;\n    }\n    /**\n     * Sets all .onX functions.\n     * Note: There's no reason not to register early, since the keybindFuncs, windowResizeFuncs, etc.\n     * will be read dynamically anyways\n     */\n    register() {\n        document.onkeyup = (e) => {\n            this.logger.debug(`KeyboardEvent: code=${e.code}`, 0);\n            baseKeybindFunc(e);\n            for (const [key, func] of Object.entries(this.keybindFuncs)) {\n                this.logger.debug(`Running keybind function ${key}`, 1);\n                func(e);\n            }\n        };\n        // window.onresize\n        const delay = 500; // delay after event is \"complete\" to run callback\n        const persist = selectPersistStr();\n        if (persist !== null) {\n            window.onresize = (e) => {\n                // clear the timeout\n                if (this.windowResizeTimeout !== null) {\n                    clearTimeout(this.windowResizeTimeout);\n                }\n                // start timing for event \"completion\"\n                this.windowResizeTimeout = setTimeout(() => {\n                    setWidthCache(persist);\n                    this.logger.debug(`onResizeEvent`, 0);\n                    for (const [key, func] of Object.entries(this.windowResizeFuncs)) {\n                        this.logger.debug(`Running windowResize function ${key}`, 1);\n                        func(e);\n                    }\n                }, delay);\n            };\n        }\n    }\n}\n","import { LOGGER } from './logger';\n// this doesn't have to be a class anymore! it's just another utils section!!\nconst HIRAGANA_CONVERSION_RANGE = { min: 0x3041, max: 0x3096 };\nconst KATAKANA_CONVERSION_RANGE = { min: 0x30a1, max: 0x30f6 };\nconst HIRAGANA_RANGE = { min: 0x3040, max: 0x309f };\nconst KATAKANA_RANGE = { min: 0x30a0, max: 0x30ff };\nconst SMALL_KANA_SET = new Set(Array.from('ぁぃぅぇぉゃゅょゎァィゥェォャュョヮ'));\nconst KATAKANA_SMALL_KA_CODE_POINT = 0x30f5;\nconst KATAKANA_SMALL_KE_CODE_POINT = 0x30f6;\nconst KANA_PROLONGED_SOUND_MARK_CODE_POINT = 0x30fc;\nconst LONG_VOWEL_MARKER_TO_VOWEL = {\n    アナタサカワラヤマハャパバダザガ: 'ア',\n    イニチシキリミヒピビヂジギ: 'イ',\n    ウヌツスクルユムフュプブヅズグ: 'ウ',\n    エネテセケレメヘペベデゼゲ: 'イ',\n    ノトソコヲロヨモホョポボドゾゴ: 'ウ',\n    オ: 'オ', // \"オ\",\n};\nconst EXTENDED_VOWELS = {\n    ア: 'ナタサカワラヤマハャパバダザガ',\n    イ: 'ニチシキリミヒピビヂジギ' + 'ネテセケレメヘペベデゼゲ',\n    ウ: 'ヌツスクルユムフュプブヅズグ' + 'ノトソコヲロヨモホョポボドゾゴ',\n    エ: 'ネテセケレメヘペベデゼゲ',\n    オ: 'ノトソコヲロヨモホョポボドゾゴ',\n};\nconst VOWEL_TO_KANA_MAPPING = new Map([\n    ['a', 'ぁあかがさざただなはばぱまゃやらゎわヵァアカガサザタダナハバパマャヤラヮワヵヷ'],\n    ['i', 'ぃいきぎしじちぢにひびぴみりゐィイキギシジチヂニヒビピミリヰヸ'],\n    ['u', 'ぅうくぐすずっつづぬふぶぷむゅゆるゥウクグスズッツヅヌフブプムュユルヴ'],\n    ['e', 'ぇえけげせぜてでねへべぺめれゑヶェエケゲセゼテデネヘベペメレヱヶヹ'],\n    ['o', 'ぉおこごそぞとどのほぼぽもょよろをォオコゴソゾトドノホボポモョヨロヲヺ'],\n    ['', 'のノ'],\n]);\nconst KANA_TO_VOWEL_MAPPING = (() => {\n    const map = new Map();\n    for (const [vowel, characters] of VOWEL_TO_KANA_MAPPING) {\n        for (const character of characters) {\n            map.set(character, vowel);\n        }\n    }\n    return map;\n})();\n// function name gore :sob:\nexport function convertHiraganaToKatakanaWithLongVowelMarks(reading) {\n    // converts to katakana and changes vowels to extended vowel form\n    const katakana = convertHiraganaToKatakana(reading);\n    let result = [...katakana];\n    for (let i = 1; i < result.length; i++) {\n        if (result[i] in EXTENDED_VOWELS &&\n            EXTENDED_VOWELS[result[i]].includes(result[i - 1])) {\n            result[i] = 'ー';\n        }\n    }\n    return result.join('');\n}\n// shamelessly stolen from Yomichan (getKanaMorae)\n// https://github.com/FooSoft/yomichan/blob/master/ext/js/language/sandbox/japanese-util.js\nexport function getMorae(text) {\n    const morae = [];\n    let i;\n    for (const c of text) {\n        if (SMALL_KANA_SET.has(c) && (i = morae.length) > 0) {\n            morae[i - 1] += c;\n        }\n        else {\n            morae.push(c);\n        }\n    }\n    return morae;\n}\n// shamelessly stolen from Yomichan\n// https://github.com/FooSoft/yomichan/blob/master/ext/js/language/sandbox/japanese-util.js\n// I have no idea what is going on tbh but it seems to work\nfunction isCodePointInRange(codePoint, range) {\n    return codePoint >= range.min && codePoint <= range.max;\n}\nexport function convertHiraganaToKatakana(text) {\n    let result = '';\n    const offset = KATAKANA_CONVERSION_RANGE.min - HIRAGANA_CONVERSION_RANGE.min;\n    for (let char of text) {\n        const codePoint = char.codePointAt(0);\n        if (codePoint !== undefined &&\n            isCodePointInRange(codePoint, HIRAGANA_CONVERSION_RANGE)) {\n            char = String.fromCodePoint(codePoint + offset);\n        }\n        result += char;\n    }\n    return result;\n}\nexport function isKana(c) {\n    let pt = c.codePointAt(0);\n    if (pt === undefined) {\n        return false; // why would this happen?\n    }\n    return isCodePointInRange(pt, HIRAGANA_RANGE) || isCodePointInRange(pt, KATAKANA_RANGE);\n}\n// ー -> katakana\nexport function katakanaRemoveLongVowelMarks(katakana) {\n    let resultArr = [...katakana];\n    let first = null;\n    let second = null;\n    for (const [i, c] of resultArr.entries()) {\n        const pt = c.codePointAt(0);\n        if (pt !== undefined && isCodePointInRange(pt, KATAKANA_RANGE)) {\n            if (first === null) {\n                first = c;\n            }\n            else if (second === null) {\n                second = c;\n            }\n            else {\n                // pushes back\n                first = second;\n                second = c;\n            }\n            if (first !== null && second !== null && second === 'ー') {\n                let found = false;\n                for (const [searchStr, vowel] of Object.entries(LONG_VOWEL_MARKER_TO_VOWEL)) {\n                    if (searchStr.includes(first)) {\n                        resultArr[i] = vowel;\n                        found = true;\n                        break;\n                    }\n                }\n                if (!found) {\n                    LOGGER.debug(`(katakanaRemoveLongVowelMarks) Cannot find replacement: ${first} | ${second}`);\n                }\n            }\n        }\n    }\n    return resultArr.join('');\n}\nfunction getProlongedHiragana(previousCharacter) {\n    switch (KANA_TO_VOWEL_MAPPING.get(previousCharacter)) {\n        case 'a':\n            return 'あ';\n        case 'i':\n            return 'い';\n        case 'u':\n            return 'う';\n        case 'e':\n            return 'え';\n        case 'o':\n            return 'う';\n        default:\n            return null;\n    }\n}\n// shamelessly stolen from Yomichan\n// https://github.com/FooSoft/yomichan/blob/master/ext/js/language/sandbox/japanese-util.js\nexport function convertKatakanaToHiragana(text, keepProlongedSoundMarks = false) {\n    let result = '';\n    const offset = HIRAGANA_CONVERSION_RANGE.min - KATAKANA_CONVERSION_RANGE.min;\n    for (let char of text) {\n        const codePoint = char.codePointAt(0);\n        switch (codePoint) {\n            case KATAKANA_SMALL_KA_CODE_POINT:\n            case KATAKANA_SMALL_KE_CODE_POINT:\n                // No change\n                break;\n            case KANA_PROLONGED_SOUND_MARK_CODE_POINT:\n                if (!keepProlongedSoundMarks && result.length > 0) {\n                    const char2 = getProlongedHiragana(result[result.length - 1]);\n                    if (char2 !== null) {\n                        char = char2;\n                    }\n                }\n                break;\n            default:\n                if (codePoint !== undefined &&\n                    isCodePointInRange(codePoint, KATAKANA_CONVERSION_RANGE)) {\n                    char = String.fromCodePoint(codePoint + offset);\n                }\n                break;\n        }\n        result += char;\n    }\n    return result;\n}\n","import { Module } from '../module';\nimport { convertHiraganaToKatakana, isKana } from '../jpUtils';\nimport { escapeRegExp } from '../utils';\nexport class AutoHighlightWord extends Module {\n    constructor() {\n        super('sm:autoHighlightWord');\n        this.plainReplaceCache = new Set();\n        this.attemptedPlainReplace = false;\n    }\n    // Base code taken from:\n    // https://github.com/MarvNC/JP-Resources#anki-automatically-highlight-in-sentence\n    // side effect: caches in plainReplaceCache\n    findPlainReplace(sentence, searchStrings) {\n        let possibleReplaces = [];\n        for (const searchString of searchStrings) {\n            const min = searchString.isWord ? 1 : 2;\n            possibleReplaces.push(this.shorten(searchString.value, sentence, min));\n            possibleReplaces.push(this.shorten(convertHiraganaToKatakana(searchString.value), sentence, 2));\n        }\n        // find and use longest one that is a substring of the sentence\n        let replaceFilter = possibleReplaces.filter((str) => str && sentence.includes(str));\n        let replace = null;\n        if (replaceFilter.length > 0) {\n            // reduce() errors if array has 0 elements\n            replace = replaceFilter.reduce((a, b) => (a.length > b.length ? a : b));\n        }\n        if (replace === null) {\n            this.logger.debug('findPlainReplace: could not highlight');\n        }\n        else {\n            this.plainReplaceCache.add(replace);\n        }\n        return replace;\n    }\n    // takes an expression and shortens it until it's in the sentence\n    shorten(expression, sentence, minLength) {\n        while (expression.length > minLength && !sentence.includes(expression)) {\n            expression = expression.substring(0, expression.length - 1);\n        }\n        return expression;\n    }\n    isRubySentence(sentence) {\n        return sentence.includes('<ruby>');\n    }\n    /* attempts to highlight the word given the rubyfied sentence */\n    highlightWordRuby(sentenceRuby) {\n        const cache = Array.from(this.plainReplaceCache);\n        let longestSubstr = null;\n        if (cache.length > 0) {\n            longestSubstr = cache.reduce((a, b) => (a.length > b.length ? a : b));\n        }\n        if (longestSubstr === null) {\n            return [sentenceRuby, null];\n        }\n        // ruby format example:\n        // <ruby><rb>端</rb><rt>はじ</rt></ruby>\n        let replaceResult = [];\n        const beforeKanjiRegex = '(<ruby>(<rb>)?)';\n        // \\u3040-\\u30ff should specify hiragana + katakana\n        // this assumes that all kanjis have readings, which may be incorrect\n        const afterKanjiRegex = '((</rb><rt>[\\u3040-\\u30ff]*?)(</rt></ruby>))';\n        const betweenKanjiRegex = `(${beforeKanjiRegex}${afterKanjiRegex})?`;\n        for (let i = 0; i < longestSubstr.length - 1; i++) {\n            const previous = longestSubstr[i];\n            const after = longestSubstr[i + 1];\n            // if first index is kanji\n            if (i === 0 && !isKana(previous)) {\n                replaceResult.push(beforeKanjiRegex);\n            }\n            replaceResult.push(escapeRegExp(previous));\n            if (isKana(previous) && !isKana(after)) {\n                // kana + non-kana\n                replaceResult.push(beforeKanjiRegex);\n            }\n            else if (!isKana(previous) && isKana(after)) {\n                // non-kana + kana\n                replaceResult.push(afterKanjiRegex);\n            }\n            else if (!isKana(previous) && !isKana(after)) {\n                // kana + kana\n                replaceResult.push(betweenKanjiRegex);\n            }\n        }\n        // adds last character\n        if (longestSubstr.length) {\n            const lastChr = longestSubstr[longestSubstr.length - 1];\n            replaceResult.push(lastChr);\n            if (!isKana(escapeRegExp(lastChr))) {\n                replaceResult.push(afterKanjiRegex);\n            }\n        }\n        // searches for:\n        // - the ruby reading\n        // - or regular result (valid if SentenceReading is not filled)\n        // brackets around everything to use $1\n        const replace = `((${replaceResult.join('')})|(${longestSubstr}))`;\n        const replaceRegex = new RegExp(replace, 'g');\n        const matchResult = sentenceRuby.match(replaceRegex);\n        const result = sentenceRuby.replace(replaceRegex, `<b>$1</b>`);\n        this.logger.debug(`highlightWordRuby replace: ${replace}`, 2);\n        this.logger.debug(`highlightWordRuby sentenceRuby: ${sentenceRuby}`, 2);\n        this.logger.debug(`highlightWordRuby result: ${result}`, 2);\n        return [result, matchResult === null ? null : matchResult[0]];\n    }\n    highlightWordPlain(sentence, // can be ruby sentence or plain sentence\n    searchStrings) {\n        let replace = this.findPlainReplace(sentence, searchStrings);\n        let result = sentence;\n        if (replace !== null && replace.length > 0) {\n            result = sentence.replace(new RegExp(`(${escapeRegExp(replace)})`, 'g'), `<b>$1</b>`);\n        }\n        this.logger.debug(`highlightWordPlain sentence: ${sentence}`, 2);\n        this.logger.debug(`highlightWordPlain result: ${result}`, 2);\n        this.logger.debug(`highlightWordPlain replace: ${replace}`, 2);\n        return [result, replace];\n    }\n    /*\n     * Returns with new sentence and found replacement\n     */\n    highlightWord(sentence, // can be ruby sentence or plain sentence\n    searchStrings, plainSentence) {\n        if (this.isRubySentence(sentence) && !this.attemptedPlainReplace) {\n            if (plainSentence === undefined) {\n                this.logger.warn('plainSentence is undefined when trying to highlight ruby sentence');\n            }\n            else {\n                // side effect: caches replace beforehand\n                if (this.plainReplaceCache.size === 0) {\n                    this.logger.debug('attempting to cache beforehand...');\n                    this.findPlainReplace(plainSentence, searchStrings);\n                }\n            }\n            return this.highlightWordRuby(sentence);\n        }\n        return this.highlightWordPlain(sentence, searchStrings);\n    }\n}\n","import { RunnableModule } from '../module';\nimport { checkOptTags } from '../options';\nimport { getFieldValue } from '../fields';\nimport { plainToKanaOnly, getTags, getCardSide } from '../utils';\nimport { compileOpts } from '../consts';\nimport { AutoHighlightWord } from './autoHighlightWord';\nimport { plainToKanjiOnly } from '../utils';\nconst sentenceStyleClasses = [\n    'sentence-unquoted-display-indent',\n    'sentence-unquoted-display-no-indent',\n    'sentence-unquoted-display-right-shifted',\n    'sentence-quoted-display-block',\n    'sentence-quoted-display-flow',\n];\nexport class SentenceParser extends RunnableModule {\n    constructor(id, args) {\n        var _a;\n        super('sentenceParser', id);\n        this.quoteMatches = this.getOption('sentenceParser.quotes.matches');\n        this.autoHighlight = compileOpts['enableModule.sentenceParser.autoHighlight']\n            ? new AutoHighlightWord()\n            : null;\n        this.debugLevel = (_a = args === null || args === void 0 ? void 0 : args.debugLevel) !== null && _a !== void 0 ? _a : 3;\n    }\n    // replaces bolded elements with [...]\n    clozeReplaceBold(sentContents) {\n        // uses an html parser so embedded <b> tags can be taken into account\n        const tempEle = document.createElement('span');\n        tempEle.innerHTML = sentContents;\n        const bTags = Array.from(tempEle.getElementsByTagName('b'));\n        for (const bTag of bTags) {\n            bTag.innerHTML = '[...]';\n        }\n        return tempEle.innerHTML;\n    }\n    getOptSentType(sentType, isAltDisplay) {\n        if (sentType === 'display' && isAltDisplay) {\n            return 'altDisplay';\n        }\n        return sentType;\n    }\n    // returns [quote, strippedSentence, quote] if found\n    // otherwise, returns [\"\", originalSentence, \"\"]\n    checkQuoteAndStrip(sentContents) {\n        // qp is \"quote pair\"\n        for (const qp of this.quoteMatches) {\n            const [i1, i2] = [0, qp.open.length]; // open quote\n            const [j1, j2] = [sentContents.length - qp.close.length, sentContents.length]; // close quote\n            if (sentContents.substring(i1, i2) === qp.open &&\n                sentContents.substring(j1, j2) === qp.close) {\n                return [\n                    sentContents.substring(i1, i2),\n                    sentContents.substring(i2, j1),\n                    sentContents.substring(j1, j2),\n                ];\n            }\n        }\n        return ['', sentContents, ''];\n    }\n    //private isQuoted(sentContents: string): boolean {\n    //  return this.checkQuoteAndStrip(sentContents)[0] !== '';\n    //}\n    preprocessForMulti(sentContents) {\n        // hail mary in hopes that our split doesn't result in invalid HTML caused by:\n        // <br></b><br>\n        return sentContents\n            .replace('<br></b><br>', '</b><br><br>')\n            .replace('<br><br></b>', '</b><br><br>');\n    }\n    attemptParseMulti(sentContents, sentType, noteInfo) {\n        // for some reason, () results in a capture group even in .split()\n        // therefore, ?: to make it a non-capturing group\n        const multiBreak = /<br>(?:<br>)*<br>/;\n        const sentenceStrings = sentContents.split(multiBreak);\n        if (sentenceStrings.length <= 1) {\n            return null;\n        }\n        const result = [];\n        for (const sentStr of sentenceStrings) {\n            // reference: src/macros/utils.html\n            const sentEle = document.createElement('div');\n            const quoteOpen = document.createElement('span');\n            quoteOpen.classList.add('sentence-quote');\n            quoteOpen.classList.add('sentence-quote--open');\n            quoteOpen.innerHTML = compileOpts.autoQuoteOpen;\n            const quoteClose = document.createElement('span');\n            quoteClose.classList.add('sentence-quote');\n            quoteClose.classList.add('sentence-quote--close');\n            quoteClose.innerHTML = compileOpts.autoQuoteClose;\n            const contents = document.createElement('span');\n            contents.classList.add('expression-inner');\n            contents.innerHTML = sentStr;\n            sentEle.appendChild(quoteOpen);\n            sentEle.appendChild(contents);\n            sentEle.appendChild(quoteClose);\n            const sent = {\n                open: sentEle.children[0],\n                contents: sentEle.children[1],\n                close: sentEle.children[2],\n                base: sentEle,\n            };\n            this.processSentence(sent, sentType, noteInfo, true);\n            result.push(sent);\n        }\n        return result;\n    }\n    //private colorQuotes(sent: Sentence) {\n    //  sent.open.classList.add(paIndicator.className);\n    //  sent.close.classList.add(paIndicator.className);\n    //  // the things below are only for the main card type\n    //  if (getCardType() !== 'main') {\n    //    return;\n    //  }\n    //  // removes pa indicator for hover cards / click cards (sentences)\n    //  if (fieldsAnyFilled('IsHoverCard', 'IsClickCard')) {\n    //    let elemsHybrid = document.getElementsByClassName('expression__hybrid');\n    //    for (const e of elemsHybrid) {\n    //      e.classList.add('expression__hybrid--remove-pa-indicator');\n    //    }\n    //  }\n    //  // neither hover & click and is either one of TSC / sentence -> removes flag\n    //  if (\n    //    fieldsAllEmpty('IsHoverCard', 'IsClickCard', 'IsHintCard') &&\n    //    fieldsAnyFilled('IsTargetedSentenceCard', 'IsSentenceCard')\n    //  ) {\n    //    let elemsExpr = document.getElementsByClassName('expression');\n    //    for (const e of elemsExpr) {\n    //      e.classList.add('expression--remove-pa-indicator');\n    //    }\n    //  }\n    //}\n    // note: this function adds css!\n    processQuotes(sent, sentContents, processMode, sentType, isMulti) {\n        let [o, strippedSent, c] = this.checkQuoteAndStrip(sentContents);\n        // strips of any classes that came from the compilation step\n        for (const cls of sentenceStyleClasses) {\n            sent.base.classList.toggle(cls, false);\n        }\n        if (processMode === 'add') {\n            // no quotes are added if the sentence is empty in the first place\n            // this could be a runtime option, but only if there is demand and/or a use case\n            if (o === '' && c === '' && sent.contents.innerHTML.length > 0) {\n                // only adds if there weren't quotes already\n                o = this.getOption('sentenceParser.quotes.quoteOpen');\n                c = this.getOption('sentenceParser.quotes.quoteClose');\n            }\n        }\n        else if (processMode === 'remove') {\n            o = '';\n            c = '';\n        }\n        else {\n            // as-is\n            // nothing to do it seems?\n        }\n        let sentenceStyleClass;\n        const dispMode = this.getQuoteDisplayMode(sentType, o !== '', isMulti, sentType === 'display');\n        this.logger.debug(`${sentType} | ${processMode} -> ${o === '' ? 'unquoted' : 'quoted'} | ${dispMode}`, this.debugLevel);\n        if (dispMode === 'indent') {\n            sentenceStyleClass = 'sentence-unquoted-display-indent';\n        }\n        else if (dispMode === 'no-indent') {\n            sentenceStyleClass = 'sentence-unquoted-display-no-indent';\n        }\n        else if (dispMode === 'right-shifted') {\n            sentenceStyleClass = 'sentence-unquoted-display-right-shifted';\n        }\n        else if (dispMode === 'flow') {\n            sentenceStyleClass = 'sentence-quoted-display-flow';\n        }\n        else {\n            // block\n            sentenceStyleClass = 'sentence-quoted-display-block';\n        }\n        // resets existing class if it exists (if javascript fails, full-sentence is unquoted by default)\n        // TODO: reset all classes?\n        sent.base.classList.toggle('sentence-unquoted-display-no-indent', false);\n        sent.base.classList.toggle(sentenceStyleClass, true);\n        return [o, strippedSent, c];\n    }\n    fixDivList(sent) {\n        // checks that all children are 'div's\n        const arr = Array.from(sent.children);\n        if (arr.length > 0 && arr.every((x) => x.nodeName === 'DIV')) {\n            this.logger.warn(`Following sentence was stripped of div elements: ${sent.innerHTML}`);\n            return arr.map((x) => x.innerHTML).join('<br>');\n        }\n        return sent.innerHTML;\n    }\n    getQuoteProcessMode(optSentType, isMulti, checkTags) {\n        if (isMulti) {\n            return 'as-is'; // we should NOT be messing with quotes at all with multiple sentences\n        }\n        if (checkTags) {\n            const processMode = checkOptTags(getTags(), [\n                ['sentenceParser.display.quotes.processMode.tagOverride.add', 'add'],\n                ['sentenceParser.display.quotes.processMode.tagOverride.remove', 'remove'],\n                ['sentenceParser.display.quotes.processMode.tagOverride.asIs', 'as-is'],\n                ['sentenceParser.display.quotes.processMode.tagOverride.none', 'none'],\n            ]);\n            if (processMode !== undefined) {\n                return processMode;\n            }\n        }\n        return this.getOption(`sentenceParser.${optSentType}.quotes.processMode`);\n    }\n    getQuoteDisplayMode(sentType, isQuoted, isMulti, checkTags) {\n        if (checkTags) {\n            // only true if the sentence type is display\n            let displayMode;\n            if (isQuoted) {\n                displayMode = checkOptTags(getTags(), [\n                    ['sentenceParser.display.quotes.displayMode.quoted.tagOverride.block', 'block'],\n                    ['sentenceParser.display.quotes.displayMode.quoted.tagOverride.flow', 'flow'],\n                ]);\n            }\n            else {\n                displayMode = checkOptTags(getTags(), [\n                    [\n                        'sentenceParser.display.quotes.displayMode.unquoted.tagOverride.indented',\n                        'indented',\n                    ],\n                    [\n                        'sentenceParser.display.quotes.displayMode.unquoted.tagOverride.noIndent',\n                        'no-indent',\n                    ],\n                    [\n                        'sentenceParser.display.quotes.displayMode.unquoted.tagOverride.rightShifted',\n                        'right-shifted',\n                    ],\n                ]);\n            }\n            if (displayMode !== undefined) {\n                return displayMode;\n            }\n        }\n        return this.getOption(`sentenceParser.${isMulti ? 'multi' : sentType}.quotes.displayMode.${isQuoted ? 'quoted' : 'unquoted'}`);\n    }\n    processPeriod(sentContents) {\n        const periods = this.getOption('sentenceParser.removeFinalPeriod.validPeriods');\n        const rxLastPeriod = new RegExp(`[${periods}]$`);\n        const rxPeriods = new RegExp(`[${periods}]`, 'g');\n        // we use regex to remove tags instead of the safer alternative of invoking an HTML parser\n        // since this should be much faster + this is a simple enough case\n        const rxTags = new RegExp(`<.*?>`, 'g');\n        // the last period can be part of an html tag, i.e. `(text)<b>(text)。</b>`\n        // therefore, we strip the tags to search, and then if found, remove the last found period\n        // within the actual sentContents\n        if (rxLastPeriod.test(sentContents.replace(rxTags, ''))) {\n            const results = Array.from(sentContents.matchAll(rxPeriods));\n            if (results.length > 0) {\n                // lastIndexOf only works on strings and not regex it seems?\n                const i = results[results.length - 1].index; // position of last period\n                if (i !== undefined) {\n                    return sentContents.substring(0, i) + sentContents.substring(i + 1);\n                }\n            }\n        }\n        return sentContents;\n    }\n    autoHighlightLog(sentType, replace, word) {\n        if (replace === null) {\n            this.logger.warn(`Could not highlight word in ${sentType}: ${word}. Consider bolding the tested word to remove this warning.`);\n        }\n        else {\n            // was able to bold something\n            this.logger.warn(`Automatically highlighted word in ${sentType}: ${replace}. Consider bolding the tested word to remove this warning.`);\n        }\n    }\n    // not private since it may be used in tooltip builder\n    // isMulti is an internal argument. May be moved to a private function...\n    processSentence(sent, sentType, noteInfo, isMulti = false) {\n        // only valid for sentenceType == 'display' anyways\n        const isAltDisplay = sent.contents.classList.contains('expression-inner--altdisplay');\n        const isClozeDeletion = sent.contents.classList.contains('expression-inner--cloze-deletion');\n        let result = sent.contents.innerHTML;\n        this.logger.debug(`init: \"${result}\"`, 1);\n        // ------------------------------------------------------------------------\n        // attempts to remove the weird list of div thing that can happen\n        if (!isMulti && this.getOption('sentenceParser.fixDivList.enabled')) {\n            result = this.fixDivList(sent.contents);\n        }\n        this.logger.debug(`fixDivList: \"${result}\"`, 1);\n        // ------------------------------------------------------------------------\n        // removes leading and trailing white space (equiv. of strip() in python)\n        result = result.trim();\n        this.logger.debug(`trim: \"${result}\"`, 1);\n        // ------------------------------------------------------------------------\n        // auto highlight\n        if (!isMulti && // we should've already highlighted the word if it's multi\n            result.length > 0 &&\n            !result.match(/<b>/) &&\n            this.autoHighlight !== null &&\n            this.getOption('sentenceParser.autoHighlightWord.enabled')) {\n            const searchStrings = [\n                { value: noteInfo.Word, isWord: true },\n                { value: plainToKanaOnly(noteInfo.WordReading) },\n                { value: noteInfo.WordReadingHiragana },\n            ];\n            let replace;\n            [result, replace] = this.autoHighlight.highlightWord(result, searchStrings, noteInfo.Sentence);\n            this.autoHighlightLog(sentType, replace, noteInfo.Word);\n            this.logger.debug(`autoHighlight: \"${result}\"`, 1);\n        }\n        // ------------------------------------------------------------------------\n        // cloze deletion\n        if (sentType === 'display' && isClozeDeletion) {\n            result = this.clozeReplaceBold(result);\n            this.logger.debug(`clozeReplaceBold: \"${result}\"`, 1);\n        }\n        // ------------------------------------------------------------------------\n        // checks for multi\n        // prepares for multi checking by ensuring that newlines aren't separated with </b>\n        result = this.preprocessForMulti(result);\n        const optSentType = this.getOptSentType(sentType, isAltDisplay);\n        if (!isMulti &&\n            this.getOption(`sentenceParser.${optSentType}.quotes.processMode.searchMulti`)) {\n            const multiSents = this.attemptParseMulti(result, sentType, noteInfo);\n            if (multiSents !== null) {\n                // it was found!\n                // strips of any classes that came from the compilation step\n                for (const cls of sentenceStyleClasses) {\n                    sent.base.classList.toggle(cls, false);\n                }\n                // marks the base sentence as a multi sentence (mostly for optional styling purposes)\n                const multiSentCls = 'multi-sentence';\n                sent.base.classList.toggle(multiSentCls, true);\n                sent.base.innerHTML = ''; // should remove all quotes\n                for (const multiSent of multiSents) {\n                    sent.base.appendChild(multiSent.base);\n                }\n                return;\n            }\n        }\n        // ------------------------------------------------------------------------\n        // deals with quotes\n        const processMode = this.getQuoteProcessMode(optSentType, isMulti, sentType === 'display');\n        let o, c;\n        if (processMode === 'none') {\n            // nothing is done with the quotes\n            o = '';\n            c = '';\n        }\n        else {\n            // process quotes and add the appropriate css\n            [o, result, c] = this.processQuotes(sent, result, processMode, sentType, isMulti);\n            this.logger.debug(`processQuotes: \"${o}\", \"${result}\", \"${c}\"`, 1);\n        }\n        // ------------------------------------------------------------------------\n        // now that quotes are parsed, it's safe to check for period\n        // although realistically, periods don't appear at the end of a quote\n        // or right after a quote anyways?\n        const isQuoted = o.length === 0 ? 'unquoted' : 'quoted';\n        if (this.getOption(`sentenceParser.removeFinalPeriod.${optSentType}.${isQuoted}`)) {\n            result = this.processPeriod(result);\n            this.logger.debug(`processPeriod: \"${result}\"`, 1);\n        }\n        // ------------------------------------------------------------------------\n        // we are done\n        sent.open.innerHTML = o;\n        sent.contents.innerHTML = result;\n        sent.close.innerHTML = c;\n        this.logger.debug(`final: \"${o}${result}${c}\"`, 1);\n    }\n    extractSentenceAndProcess(sentEle, sentenceType) {\n        if (sentEle.innerHTML.trim().length === 0) {\n            return; // nothing to do\n        }\n        if (sentEle.children.length === 3) {\n            const sent = {\n                open: sentEle.children[0],\n                contents: sentEle.children[1],\n                close: sentEle.children[2],\n                base: sentEle,\n            };\n            const noteInfoSentence = {\n                Word: getFieldValue('Word'),\n                WordReading: getFieldValue('WordReading'),\n                WordReadingHiragana: getFieldValue('WordReadingHiragana'),\n                Sentence: getFieldValue('Sentence'),\n            };\n            this.processSentence(sent, sentenceType, noteInfoSentence, false);\n        }\n        else {\n            this.logger.warn(`Invalid sentence format (${sentenceType}): ${sentEle.innerHTML}`);\n        }\n    }\n    processDisplaySentences() {\n        const sentEles = document.querySelectorAll('.expression--sentence');\n        for (const sentEle of sentEles) {\n            this.extractSentenceAndProcess(sentEle, 'display');\n        }\n    }\n    processFullSentence() {\n        const sentEle = document.getElementById('full_sentence');\n        if (sentEle !== null) {\n            this.extractSentenceAndProcess(sentEle, 'fullSent');\n        }\n    }\n    normalizeSentenceCompare(sentence) {\n        // NOTE: \"\\n\" -> \"\" is required for the edge case where the Sentence and SentenceReading\n        // is formatted in divs + newline, i.e.\n        //     <div>じゃあ 捕獲ならいいか？</div>\n        //     <div>リーダー</div>\n        // string.trim() === str.strip() in python\n        return sentence.replace('\\n', '').trim();\n    }\n    compareSentenceReading() {\n        // checks whether Sentence == nofurigana(SentenceReading)\n        const sentence = this.normalizeSentenceCompare(getFieldValue('Sentence'));\n        const sentReading = this.normalizeSentenceCompare(plainToKanjiOnly(getFieldValue('SentenceReading')));\n        // if neither fields have 0 length, and if the Sentence field does not match the SentenceReading field with furigana stripped\n        if (sentReading.length !== 0 && sentence.length !== 0 && sentence !== sentReading) {\n            this.logger.warn(`The Sentence field is not the same as the SentenceReading field. Your sentence might be displayed incorrectly. See <a href=\"https://aquafina-water-bottle.github.io/jp-mining-note-prerelease/faq/#the-sentencereading-field-is-not-updated-is-different-from-the-sentence-field\">here</a> for more info.`, { isHtml: true });\n        }\n    }\n    main() {\n        this.processDisplaySentences();\n        this.processFullSentence();\n        if (getCardSide() === 'back' &&\n            this.getOption('sentenceParser.checkSentenceReadingEqualsSentence')) {\n            this.compareSentenceReading();\n        }\n    }\n}\n","import { Module, RunnableModule } from '../module';\n//import { getOption } from '../options';\nimport { getWordTags, isVerbOrIAdj, plainToKanaOnly, getTags } from '../utils';\nimport { getFieldValue } from '../fields';\nimport { convertHiraganaToKatakana, convertHiraganaToKatakanaWithLongVowelMarks, getMorae, katakanaRemoveLongVowelMarks, } from '../jpUtils';\nconst COLOR_TAGS = {\n    平板: 'heiban',\n    heiban: 'heiban',\n    頭高: 'atamadaka',\n    atamadaka: 'atamadaka',\n    中高: 'nakadaka',\n    nakadaka: 'nakadaka',\n    尾高: 'odaka',\n    odaka: 'odaka',\n    起伏: 'kifuku',\n    kifuku: 'kifuku',\n    'pa-none': 'none',\n};\n// searches for first bolded\n// if no bolded -> returns first item\n//function _getFirstBoldedOrFirstPos(posDataList: readonly PosData[]): PosData | null {\n//  if (posDataList.length === 0) {\n//    return null;\n//  }\n//\n//  for (const posData of posDataList) {\n//    if (posData.isBolded) {\n//      return posData;\n//    }\n//  }\n//\n//  return posDataList[0];\n//}\nfunction _hasBoldedPos(posDataList) {\n    for (const posData of posDataList) {\n        if (posData.isBolded) {\n            return true;\n        }\n    }\n    return false;\n}\nconst ajtWordSeps = /[・、]/g;\nclass PosData {\n    constructor(pos, isBolded = false) {\n        this.allowAutoKifuku = true; // set to false for text format parsing\n        this.separatorAfter = null;\n        this.dictName = null;\n        this.mora = [];\n        // only set when converting PosData -> HTML (buildWordReading)\n        this.paGroup = null;\n        this.pos = pos;\n        this.isBolded = isBolded;\n    }\n}\nclass DispPosData {\n    constructor(dispHTML, dictName = null, paGroup = null) {\n        this.dispHTML = dispHTML;\n        this.dictName = dictName;\n        this.mainPAGroup = paGroup;\n    }\n}\n// ==================\n//  ParsePAPositions\n// ==================\nexport class ParsePAPositions extends Module {\n    constructor(autopa, paPositions, wordReading) {\n        super('sm:parsePAPositions');\n        this.autopa = autopa;\n        this.paPositions = paPositions;\n        this.wordReading = wordReading;\n    }\n    parse() {\n        // ensures the field is usable\n        if (this.paPositions.length === 0) {\n            return null;\n        }\n        // converts to html element for proper parsing\n        const positionsEle = document.createElement('div');\n        positionsEle.innerHTML = this.paPositions;\n        try {\n            if (positionsEle.children.length > 0 &&\n                positionsEle.children[0] !== null &&\n                positionsEle.children[0].nodeName === 'DIV' &&\n                positionsEle.children[0].classList.contains('pa-positions__group')) {\n                return this.parseJPMN(positionsEle);\n            }\n        }\n        catch (error) {\n            // ignore error for now\n            this.logger.debug('Error in calcDispPosDataFromPositions -> calcDispPosDataFromJPMNPositions');\n        }\n        // just search for any digit in the element\n        let digit = this.paPositions.match(/\\d+/);\n        if (digit === null) {\n            return null;\n        }\n        const posData = new PosData(Number(digit));\n        const pitchHTML = this.autopa.buildPitchHTML([posData], this.wordReading);\n        const paGroup = this.autopa.getMainPAGroup([posData], this.autopa.getOption('autoPitchAccent.coloredPitchAccent.multiplePitchesColorAsFirst.paPositions'));\n        return new DispPosData(pitchHTML, 'PAPositions', paGroup);\n    }\n    getDictInfoFromGroup(groupDiv) {\n        var _a;\n        let dictChildren = Array.from(groupDiv.children[1].children);\n        let dictName = (_a = groupDiv.getAttribute('data-details')) !== null && _a !== void 0 ? _a : 'unknown dictionary';\n        return [dictChildren, dictName];\n    }\n    /* searches for a dictionary with a bolded entry. If not found, use the first dictionary */\n    getDictInfo(positionsEle) {\n        // searches for a bolded element\n        for (const groupDiv of positionsEle.children) {\n            for (const liEle of groupDiv.children[1].children) {\n                if (liEle.innerHTML.includes('<b>')) {\n                    return this.getDictInfoFromGroup(groupDiv);\n                }\n            }\n        }\n        // no bolded element was found: uses first element\n        // children.length is guaranteed to be > 0 here!\n        const groupDiv = positionsEle.children[0];\n        return this.getDictInfoFromGroup(groupDiv);\n    }\n    parseJPMN(positionsEle) {\n        // stylized by jpmn standards, walks through\n        // <div class=\"pa-positions__group\" data-details=\"NHK\"> <!-- === groupDiv -->\n        //   <div class=\"pa-positions__dictionary\"><div class=\"pa-positions__dictionary-inner\">NHK</div></div>\n        //   <ol> <!-- === groupDiv.children[1] -->\n        //     <li>\n        //       <span style=\"display: inline;\"><span>[</span><span>1</span><span>]</span></span>\n        //     </li>\n        //   </ol>\n        // </div>\n        // ...\n        const displayMode = this.autopa.getOption('autoPitchAccent.paPositions.displayMode');\n        let posDataList = [];\n        if (displayMode === 'selected-result') {\n            posDataList = this.parseJPMNSingularPos(positionsEle);\n        }\n        else if (displayMode === 'selected-dictionary') {\n            posDataList = this.parseJPMNSingularDict(positionsEle);\n        }\n        else if (displayMode === 'all-results') {\n            posDataList = this.parseJPMNAllDicts(positionsEle);\n        }\n        else {\n            throw Error(`displayMode is invalid: ${displayMode}`);\n        }\n        const pitchHTML = this.autopa.buildPitchHTML(posDataList, this.wordReading);\n        const paGroup = this.autopa.getMainPAGroup(posDataList, this.autopa.getOption(`autoPitchAccent.coloredPitchAccent.multiplePitchesColorAsFirst.paPositions`));\n        return new DispPosData(pitchHTML, null, paGroup);\n    }\n    getPosDataListFromDictChildren(dictChildren, dictName) {\n        let result = [];\n        for (const c of dictChildren) {\n            let digit = c.innerHTML.match(/\\d+/);\n            if (digit === null) {\n                this.logger.debug(`Skipping invalid value? ${c.innerHTML}`);\n                continue;\n            }\n            let bolded = c.innerHTML.includes('<b>');\n            let posData = new PosData(Number(digit), bolded);\n            posData.dictName = dictName;\n            result.push(posData);\n        }\n        return result;\n    }\n    /* attempts to find first bolded. If not found: use first item */\n    parseJPMNSingularPos(positionsEle) {\n        const [dictChildren, dictName] = this.getDictInfo(positionsEle);\n        let firstDigit = null;\n        for (const c of dictChildren) {\n            let digit = c.innerHTML.match(/\\d+/);\n            if (digit === null) {\n                this.logger.debug(`Skipping invalid value? ${c.innerHTML}`);\n                continue;\n            }\n            if (firstDigit === null) {\n                firstDigit = Number(digit);\n            }\n            if (c.innerHTML.includes('<b>')) {\n                const posData = new PosData(Number(digit), true);\n                posData.dictName = dictName;\n                return [posData];\n            }\n        }\n        if (firstDigit === null) {\n            this.logger.warn('firstDigit is null?');\n            return [];\n        }\n        const posData = new PosData(firstDigit, true);\n        posData.dictName = dictName;\n        return [posData];\n    }\n    /*\n     * Attempts to find first dictionary with bolded entry.\n     * If not found, use first dictionary.\n     * Separates PosData from all entries.\n     */\n    parseJPMNSingularDict(positionsEle) {\n        const [dictChildren, dictName] = this.getDictInfo(positionsEle);\n        return this.getPosDataListFromDictChildren(dictChildren, dictName);\n    }\n    /*\n     * Gets PosData from all entries of all dictionaries.\n     */\n    parseJPMNAllDicts(positionsEle) {\n        let result = [];\n        // TODO: should be unique pitches only\n        for (const groupDiv of positionsEle.children) {\n            const [dictChildren, dictName] = this.getDictInfoFromGroup(groupDiv);\n            const dictPosDataList = this.getPosDataListFromDictChildren(dictChildren, dictName);\n            result = result.concat(dictPosDataList);\n        }\n        return result;\n    }\n}\n// =================\n//  ParsePAOverride\n// =================\nexport class ParsePAOverride extends Module {\n    constructor(autopa, paOverride, wordReading) {\n        super('sm:parsePAOverride');\n        this.autopa = autopa;\n        this.paOverride = paOverride;\n        this.wordReading = wordReading;\n    }\n    parse() {\n        let [posDataList, parseMethod] = this.calcPosDataList();\n        if (posDataList.length > 0 && parseMethod !== null) {\n            const pitchHTML = this.autopa.buildPitchHTML(posDataList, this.wordReading);\n            const paGroup = this.autopa.getMainPAGroup(posDataList, this.autopa.getOption(`autoPitchAccent.coloredPitchAccent.multiplePitchesColorAsFirst.paOverride.${parseMethod}`));\n            return new DispPosData(pitchHTML, 'Pitch Accent Override', paGroup);\n            //return new DispPosData(pitchHTML, 'Pitch Accent Override');\n        }\n        // uses whatever is in PAOverride as is without changes\n        // this is to maintain backwards compatability\n        this.logger.warn(`calcPosDataList returned list of 0 length for \"${this.paOverride}\". Using raw text...`);\n        return new DispPosData(this.paOverride, 'Pitch Accent Override (Raw Text)');\n    }\n    /*\n     * supported formats:\n     * - csv integers\n     * - text separated with \"・\" and downstep marked with ＼\n     * - integers allow bolded characters, text does not\n     *    - what the bold does is notably different from the edge case of AJT Word pitch\n     * - for simplicity, formats cannot be mixed in one field!\n     *    - number detected -> attempt to parse as csv numbers\n     *    - number not detected -> attempt to parse as text with \"・\" and \"＼\"\n     *\n     * examples:\n     *     1\n     *     -1\n     *     1, 3, 4, 5\n     *     1,<b>3</b>, 4,5\n     *     じ＼んせい\n     *     ここ＼ろ・こころ＼\n     *\n     * returns list of positions, or empty list if nothing found\n     */\n    calcPosDataList() {\n        var _a;\n        // requires html parser to calculate textContent\n        const overrideEle = document.createElement('div');\n        overrideEle.innerHTML = this.paOverride;\n        const firstInteger = ((_a = overrideEle.textContent) !== null && _a !== void 0 ? _a : '').trim().match(/^[-]?\\d+/);\n        if (firstInteger !== null) {\n            return [this.parseIntCSV(), 'integer'];\n        }\n        else {\n            if (overrideEle.textContent === overrideEle.innerHTML) {\n                return [this.parseTextFormat(), 'text'];\n            }\n            else {\n                this.logger.warn(`Invalid PA format: ${this.paOverride}`);\n            }\n        }\n        return [[], null];\n    }\n    parseIntCSV() {\n        // attempts to get a CSV of integers\n        // this makes many assumptions about the format:\n        // - csv\n        // - spaces removed doesn't affect html\n        // - if bold: per element and not across elements\n        let result = [];\n        const searchHTML = this.paOverride.replace(/\\s+/g, '');\n        const posStrList = searchHTML.split(',');\n        for (const pos of posStrList) {\n            if (pos.includes('<b>')) {\n                let integer = pos.match(/[-]?\\d+/);\n                let posData = new PosData(Number(integer), true);\n                result.push(posData);\n            }\n            else {\n                let posNumber = Number(pos);\n                if (!Number.isNaN(posNumber)) {\n                    let posData = new PosData(Number(pos));\n                    result.push(posData);\n                }\n            }\n        }\n        return result;\n    }\n    parseTextFormat() {\n        let result = [];\n        const separators = this.autopa.getOption('autoPitchAccent.paOverride.separators');\n        const downsteps = this.autopa.getOption('autoPitchAccent.paOverride.downstepMarkers');\n        const heiban = this.autopa.getOption('autoPitchAccent.paOverride.heibanMarkers');\n        const separatorsRegex = RegExp('[' + separators.join('') + ']', 'g');\n        // attempts to separate \"・\"\n        // Bolded text and main pos (colored pitch accent) is not supported in this format.\n        // Therefore, we use the text instead of the HTML\n        const searchText = this.paOverride.replace(/\\s+/g, ''); // remove whitespace\n        const strList = searchText.split(separatorsRegex);\n        const foundSeparators = searchText.match(separatorsRegex);\n        for (const [i, word] of strList.entries()) {\n            // moras here are only used for calculating the position of the downstep\n            let moras = getMorae(word);\n            // checks for where downstep (＼) exists\n            let pos = null;\n            let j = 0;\n            while (j < moras.length) {\n                const mora = moras[j];\n                if (downsteps.includes(mora)) {\n                    if (pos !== null) {\n                        this.logger.warn(`More than one downstep marker used in ${word}`);\n                    }\n                    else {\n                        pos = j;\n                    }\n                    moras.splice(j, 1); // removes the element from the moras list\n                }\n                else {\n                    j++;\n                }\n            }\n            if (heiban.includes(moras[moras.length - 1])) {\n                moras.splice(moras.length - 1, 1);\n                if (pos === null) {\n                    pos = 0;\n                }\n                else {\n                    this.logger.warn(`Cannot use both downstep and heiban markers in ${word}`);\n                    continue;\n                }\n            }\n            // no downstep found: 平板 (0)\n            if (pos === null) {\n                if (this.autopa.getOption('autoPitchAccent.paOverride.heibanMarkerRequired')) {\n                    this.logger.warn(`Heiban marker not found in ${word}`);\n                    continue;\n                }\n                else {\n                    pos = 0;\n                }\n            }\n            // calculates the display moras\n            // differs from the above moras because by removing the downstep marker and\n            // heiban marker, this allows the reading to be searchable within the\n            // AJT word pitch\n            const displayMoras = this.autopa.normalizeReadingGetMoras(moras.join(''));\n            const posData = new PosData(pos);\n            posData.mora = displayMoras;\n            if (foundSeparators !== null && i < foundSeparators.length) {\n                posData.separatorAfter = foundSeparators[i];\n            }\n            posData.allowAutoKifuku = false;\n            result.push(posData);\n        }\n        return result;\n    }\n}\n// ===================\n//  ParseAJTWordPitch\n// ===================\nexport class ParseAJTWordPitch extends Module {\n    constructor(autopa, ajtWordPitch, wordReading, removeNasal) {\n        super('sm:parseAJTWordPitch');\n        this.autopa = autopa;\n        this.ajtWordPitch = ajtWordPitch;\n        this.wordReading = wordReading;\n        this.removeNasal = removeNasal;\n    }\n    getPosDataList() {\n        var _a, _b, _c;\n        let posDataList = [];\n        // textContent to remove all markup (overline, devoiced, bold?)\n        const d = document.createElement('div');\n        d.innerHTML = this.ajtWordPitch;\n        let searchText = (_a = d.textContent) !== null && _a !== void 0 ? _a : '';\n        searchText = searchText.replace(/°/g, ''); // remove all nasal markers\n        searchText = searchText.replace(/&#42780;/g, 'ꜜ'); // normalizes text\n        const searchWords = searchText.split(ajtWordSeps);\n        // raw html to get the pure reading\n        let searchHTML = this.ajtWordPitch;\n        if (searchHTML.includes('<b>')) {\n            this.logger.warn('AJTWordPitch field contains bold. This will be ignored by the parser.');\n            searchHTML = searchHTML.replace(/<b>/g, '').replace(/<\\/b>/g, '');\n        }\n        const searchWordsHTML = searchHTML.split(ajtWordSeps);\n        if (searchWordsHTML.length !== searchWords.length) {\n            throw Error('AJTWordPitch parser lists are of different length. Cannot parse.');\n        }\n        const foundSeparators = (_b = searchText.match(ajtWordSeps)) !== null && _b !== void 0 ? _b : [];\n        const wordReadingKana = plainToKanaOnly(this.wordReading);\n        const normalizedReading = convertHiraganaToKatakana(wordReadingKana);\n        // moras -> look for downstep marker!\n        for (let i = 0; i < searchWords.length; i++) {\n            const w = searchWords[i];\n            let h = searchWordsHTML[i];\n            if (this.removeNasal) {\n                h = this.autopa.removeNasalStr(h);\n            }\n            const searchMora = getMorae(w);\n            // this finds the index of \"ꜜ\"\n            // pos is -1 if not found (which translates to 0)\n            let pos = searchMora.findIndex((x) => x === 'ꜜ');\n            if (pos === -1) {\n                pos = 0;\n            }\n            // saves a few cycles by repeating the logic in removeAJTDownstep\n            let ajtNormalizeSearch = this.autopa.removeAJTDownstep(w);\n            ajtNormalizeSearch = katakanaRemoveLongVowelMarks(ajtNormalizeSearch);\n            let posData = new PosData(pos);\n            posData.mora = this.autopa.getMoraeOfAJTWord(h);\n            if (ajtNormalizeSearch !== normalizedReading) {\n                this.logger.debug(`cannot auto kifuku: ${ajtNormalizeSearch} | ${normalizedReading}`, 2);\n                posData.allowAutoKifuku = false; // can only allow auto kifuku on the same word\n            }\n            // we must use the index operator instead of .at() because Qt5 Ankit doesn't support .at()\n            posData.separatorAfter = (_c = foundSeparators[i]) !== null && _c !== void 0 ? _c : null;\n            posDataList.push(posData);\n        }\n        return posDataList;\n    }\n    parse() {\n        if (this.ajtWordPitch.length === 0) {\n            return null;\n        }\n        let pitchHTML;\n        let paGroup;\n        try {\n            const posDataList = this.getPosDataList();\n            pitchHTML = this.autopa.buildPitchHTML(posDataList);\n            paGroup = this.autopa.getMainPAGroup(posDataList, this.autopa.getOption('autoPitchAccent.coloredPitchAccent.multiplePitchesColorAsFirst.ajtWordPitch'));\n        }\n        catch (error) {\n            if (typeof error === 'object' &&\n                error !== null &&\n                'stack' in error &&\n                typeof error.stack === 'string') {\n                this.logger.errorStack(error.stack);\n            }\n            this.logger.error('Error in generatePitchHTML, using raw AJTWordPitch instead');\n            pitchHTML = this.ajtWordPitch;\n            paGroup = null;\n        }\n        return new DispPosData(pitchHTML, 'AJT Pitch Accent', paGroup);\n    }\n}\nexport class AutoPitchAccent extends RunnableModule {\n    constructor(id, args) {\n        var _a, _b, _c, _d;\n        super('autoPitchAccent', id);\n        this.wordTags = [];\n        this.ajtHTML = null;\n        this.attemptGlobalColor = (_a = args === null || args === void 0 ? void 0 : args.attemptGlobalColor) !== null && _a !== void 0 ? _a : true;\n        this.showTitle = (_b = args === null || args === void 0 ? void 0 : args.showTitle) !== null && _b !== void 0 ? _b : true;\n        this.removeNasal = (_c = args === null || args === void 0 ? void 0 : args.removeNasal) !== null && _c !== void 0 ? _c : false;\n        this.debugLevel = (_d = args === null || args === void 0 ? void 0 : args.debugLevel) !== null && _d !== void 0 ? _d : 3;\n    }\n    getDispPosDataOnEmpty(wordReading) {\n        this.logger.debug('Nothing found.');\n        if (this.getOption('autoPitchAccent.showReadingIfNoPitch')) {\n            let wordReadingKana = plainToKanaOnly(wordReading);\n            return new DispPosData(wordReadingKana, 'WordReading');\n        }\n        return new DispPosData('', 'N/A');\n    }\n    removeNasalStr(str) {\n        if (str.includes('nasal')) {\n            // か行・が行\n            const ka_gyou = 'カキクケコ';\n            const ga_gyou = 'ガギグゲゴ'; // 濁点\n            // 5 is length of the above 2 strings\n            for (let i = 0; i < 5; i++) {\n                str = str.replace(new RegExp(`${ka_gyou[i]}<span class=\"nasal\">(°|&#176;)</span>`, 'g'), ga_gyou[i]);\n            }\n        }\n        if (str.includes('nasal')) {\n            this.logger.warn(`string after removeNasalStr still has nasal class: ${str}`);\n        }\n        return str;\n    }\n    getPAColorTag(tags) {\n        for (const ct of Object.keys(COLOR_TAGS)) {\n            if (tags.includes(ct)) {\n                return COLOR_TAGS[ct];\n            }\n        }\n        return null;\n    }\n    paintDisplay(paGroup) {\n        const wordClass = 'pa-word-highlight-' + paGroup;\n        const sentClass = 'pa-sentence-highlight-' + paGroup;\n        // adds to reading\n        if (this.getOption('autoPitchAccent.coloredPitchAccent.color.wordReadingKanji')) {\n            const readingEle = document.getElementById('dh_reading');\n            readingEle === null || readingEle === void 0 ? void 0 : readingEle.classList.add(wordClass);\n        }\n        if (this.getOption('autoPitchAccent.coloredPitchAccent.color.testedContent')) {\n            // adds to display sentence\n            // .highlight-bold is added to the query to ensure that we are not highlighting\n            // a sentence that wasn't highlighted already.\n            const sentences = document.querySelectorAll('.expression--sentence.highlight-bold');\n            if (sentences !== null) {\n                for (const sent of sentences) {\n                    sent.classList.add(sentClass);\n                }\n            }\n            // adds to display word\n            const words = document.querySelectorAll('.expression--word');\n            if (words !== null) {\n                for (const word of words) {\n                    word.classList.add(wordClass);\n                }\n            }\n        }\n        // full sentence (back side)\n        if (this.getOption('autoPitchAccent.coloredPitchAccent.color.fullSentence')) {\n            const fullSentEle = document.getElementById('full_sentence');\n            fullSentEle === null || fullSentEle === void 0 ? void 0 : fullSentEle.classList.add(sentClass);\n        }\n        if (this.getOption('autoPitchAccent.coloredPitchAccent.color.definitions')) {\n            const defs = document.querySelectorAll('.glossary-text');\n            if (defs !== null) {\n                for (const def of defs) {\n                    // uses setProperty instead to deal with custom dictionary bold / highlights\n                    def.style.setProperty('--highlight-bold-color', `var(--text-${paGroup})`);\n                }\n            }\n        }\n    }\n    /*\n     * Displays the dispPosData on the displayEle\n     * - optionally paints the display with pitch accent colors\n     */\n    useDispPosData(displayEle, dispPosData, tags) {\n        displayEle.innerHTML = dispPosData.dispHTML;\n        if (this.showTitle && dispPosData.dictName !== null) {\n            // TODO check if multiple titles?\n            displayEle.setAttribute('title', dispPosData.dictName);\n        }\n        this.logger.debug(`result dictName: ${dispPosData.dictName}`, this.debugLevel);\n        if (this.getOption('autoPitchAccent.coloredPitchAccent.enabled')) {\n            if (this.attemptGlobalColor) {\n                const paColorTag = this.getPAColorTag(tags);\n                if (paColorTag === 'none') {\n                    // DO NOTHING\n                }\n                else if (paColorTag !== null) {\n                    this.paintDisplay(paColorTag);\n                }\n                else if (dispPosData.mainPAGroup !== null) {\n                    this.paintDisplay(dispPosData.mainPAGroup);\n                }\n            }\n            //if (\n            //  this.getOption('autoPitchAccent.coloredPitchAccent.color.wordReadingPitchKana')\n            //) {\n            //  displayEle.classList.add('pa-word-highlight-pitch-kana');\n            //}\n            if (this.getOption('autoPitchAccent.coloredPitchAccent.color.wordReadingPitchOverline')) {\n                displayEle.classList.add('pa-word-highlight-pitch-overline');\n            }\n        }\n    }\n    /*\n     * replaces all long katakana markers with the respective normal katakana symbol\n     * also removes all ꜜ (remember that we can search for downsteps from the now empty div)\n     */\n    getSearchAJTHTML(ajtHTML) {\n        let result = this.removeAJTDownstep(ajtHTML);\n        // remove bold\n        result = result.replace(/<b>/g, '');\n        result = result.replace(/<\\/b>/g, '');\n        result = this.removeNasalStr(result);\n        result = katakanaRemoveLongVowelMarks(result);\n        return result;\n    }\n    // remove downsteps\n    removeAJTDownstep(str) {\n        return str.replace(/&#42780;/g, '').replace(/ꜜ/g, '');\n    }\n    /*\n     * grabs the raw html split between the ・ characters, if it matches the wordReadingKana\n     * ASSUMPTION: no html element is split between the ・ characters\n     * (apart from <b>, which are ignored)\n     */\n    getAJTWordHTML(wordReadingKana) {\n        var _a;\n        const normalizedReading = convertHiraganaToKatakana(wordReadingKana);\n        if (this.ajtHTML === null || this.ajtHTML.length === 0) {\n            this.logger.debug(`ajtHTML is empty`);\n            return null;\n        }\n        // normalizes the ajt search string\n        const ajtHTMLSearch = this.getSearchAJTHTML(this.ajtHTML);\n        // removes any bold in case it messes with the formatting\n        const resultSearchHTML = this.ajtHTML.replace(/<b>/g, '').replace(/<\\/b>/g, '');\n        // temp used for textContent\n        let temp = document.createElement('div');\n        temp.innerHTML = ajtHTMLSearch;\n        const searchString = (_a = temp.textContent) !== null && _a !== void 0 ? _a : '';\n        const wordSearch = searchString.split(ajtWordSeps);\n        const idx = wordSearch.indexOf(normalizedReading);\n        if (idx === -1) {\n            this.logger.debug(`AJT word: ${normalizedReading} not found among [${wordSearch.join(', ')}]`);\n            return null;\n        }\n        // if found, gets the word\n        let result = null;\n        if (wordSearch.length == 1) {\n            result = resultSearchHTML;\n        }\n        else {\n            const searchArr = resultSearchHTML.split(ajtWordSeps);\n            if (idx >= searchArr.length) {\n                this.logger.warn(`searchArr of length ${searchArr.length} cannot be indexed with ${idx}`);\n                return null;\n            }\n            result = searchArr[idx];\n        }\n        if (this.removeNasal) {\n            result = this.removeNasalStr(result);\n        }\n        return result;\n    }\n    // returns [normalized reading, uses ajt word]\n    getNormalizedReading(wordReadingKana) {\n        if (this.getOption('autoPitchAccent.searchForAJTWord')) {\n            let ajtWordHTML = this.getAJTWordHTML(wordReadingKana);\n            if (ajtWordHTML !== null) {\n                return [ajtWordHTML, true];\n            }\n        }\n        let normalizedReading = '';\n        let readingDisplayMode = this.getOption('autoPitchAccent.readingDisplayMode');\n        if (readingDisplayMode === 'word-reading') {\n            normalizedReading = wordReadingKana;\n        }\n        else if (readingDisplayMode === 'katakana') {\n            normalizedReading = convertHiraganaToKatakana(wordReadingKana);\n        }\n        else if (readingDisplayMode === 'katakana-with-long-vowel-marks') {\n            normalizedReading = convertHiraganaToKatakanaWithLongVowelMarks(wordReadingKana);\n        }\n        else {\n            throw Error(`readingDisplayMode of ${normalizedReading} is invalid.`);\n        }\n        return [normalizedReading, false];\n    }\n    /*\n     * properly handles the overline / downstep / nasal parts that an ajtWordHTML contains\n     */\n    getMoraeOfAJTWord(ajtWordHTML) {\n        let result = [];\n        // temp element to store the flattened version of the ajt word div\n        // and for converting into a list of moras\n        const flattened = document.createElement('div');\n        // temp element to iterate through childnodes of ajt word\n        const temp = document.createElement('div');\n        temp.innerHTML = ajtWordHTML;\n        // removes pitch accent overline and downstep\n        for (const c of temp.childNodes) {\n            if (c.nodeName === 'SPAN' &&\n                c.classList.contains('pitchoverline')) {\n                for (const child of c.childNodes) {\n                    flattened.appendChild(child.cloneNode(true));\n                }\n            }\n            else if (c.nodeName === 'SPAN' &&\n                c.classList.contains('downstep')) {\n                // skips\n            }\n            else {\n                flattened.appendChild(c.cloneNode(true));\n            }\n        }\n        // combines the devoiced character into one mora, if it can\n        // (e.g. 神出鬼没 (しんしゅつきぼつ) only has the 2nd (し) devoiced, instead of (しゅ)\n        // シ<span class=\"pitchoverline\">ン<span class=\"nopron\">シ</span>ュツキボツ</span>\n        if (ajtWordHTML.includes('nopron')) {\n            // crazy regex replace\n            flattened.innerHTML = flattened.innerHTML.replace(/<span class=\"nopron\">(.)<\\/span>([ぁぃぅぇぉゃゅょゎァィゥェォャュョヮ])/g, '<span class=\"nopron\">$1$2</span>');\n        }\n        for (const c of flattened.childNodes) {\n            if (c.nodeName === '#text') {\n                const moras = getMorae(c.data);\n                result = result.concat(moras);\n            }\n            else if (c.nodeName === 'SPAN' &&\n                c.classList.contains('nasal')) {\n                // assumption: there already exists at least one element before\n                // (the nasal marker can't come by itself)\n                result[result.length - 1] =\n                    result[result.length - 1] + c.outerHTML;\n            }\n            else if (c.nodeName === 'SPAN' &&\n                c.classList.contains('nopron')) {\n                // assumption: this is the nopron span\n                result.push(c.outerHTML);\n            }\n            else {\n                throw Error(`Unexpected flattened.childNode: ${c}`);\n            }\n        }\n        return result;\n    }\n    normalizeReadingGetMoras(wordReadingKana) {\n        const [normalizedReading, isAJTWord] = this.getNormalizedReading(wordReadingKana);\n        if (isAJTWord) {\n            return this.getMoraeOfAJTWord(normalizedReading);\n        }\n        let result = getMorae(normalizedReading);\n        return result;\n    }\n    /* returns null if nothing has to be done, otherwise gets paGroup */\n    getMainPAGroup(posDataList, multiplePitchesColorAsFirst) {\n        if (!this.getOption('autoPitchAccent.coloredPitchAccent.enabled')) {\n            return null;\n        }\n        if (posDataList.length > 1 && !multiplePitchesColorAsFirst) {\n            return null;\n        }\n        let firstPAGroup = null;\n        for (const posData of posDataList) {\n            // gets first bolded\n            if (posData.paGroup !== null && firstPAGroup === null) {\n                firstPAGroup = posData.paGroup;\n            }\n            if (posData.isBolded && posData.paGroup !== null) {\n                return posData.paGroup;\n            }\n        }\n        // otherwise gets first non-null\n        return firstPAGroup;\n    }\n    /*\n     * builds the pitch HTML according to the posData list\n     * - recall bold is inverted internally in the css (<b></b> tags will grey out characters!)\n     */\n    buildPitchHTML(posDataList, wordReading) {\n        var _a;\n        let result = [];\n        // cache\n        let hasBoldedPos = _hasBoldedPos(posDataList);\n        // calculates all connectors\n        // all connectors around bolded spans will be bolded themselves\n        let connectors = [];\n        const baseConnector = this.getOption('autoPitchAccent.paPositions.defaultConnector');\n        for (const [i, posData] of posDataList.entries()) {\n            if (i < posDataList.length - 1) {\n                connectors.push((_a = posData.separatorAfter) !== null && _a !== void 0 ? _a : baseConnector);\n            }\n        }\n        if (hasBoldedPos) {\n            for (let i = 0; i < posDataList.length - 1; i++) {\n                const previous = posDataList[i];\n                const after = posDataList[i + 1];\n                if (!previous.isBolded || !after.isBolded) {\n                    // neither are bolded -> bold will be added to both\n                    connectors[i] = `<b>${connectors[i]}</b>`;\n                }\n            }\n        }\n        // cache\n        let readingMora = null;\n        for (const [i, posData] of posDataList.entries()) {\n            // uses the reading for the normal word instead of any special reading\n            if (posData.mora.length === 0) {\n                // generates cached morae\n                if (readingMora === null) {\n                    if (wordReading === undefined) {\n                        throw Error('wordReading is undefined, cannot parse posDataList');\n                    }\n                    const wordReadingKana = plainToKanaOnly(wordReading);\n                    readingMora = this.normalizeReadingGetMoras(wordReadingKana);\n                }\n                posData.mora = Array.from(readingMora); // shallow copy\n            }\n            let wordPitchHTML = this.buildWordReading(posData);\n            if (hasBoldedPos && !posData.isBolded) {\n                wordPitchHTML = `<b>${wordPitchHTML}</b>`;\n            }\n            result.push(wordPitchHTML);\n            if (i < connectors.length) {\n                result.push(connectors[i]);\n            }\n        }\n        return result.join('');\n    }\n    /*\n     * - creates the span to show the pitch accent overline\n     */\n    buildWordReading(posData) {\n        const pos = posData.pos;\n        let result = Array.from(posData.mora); // shallow copy\n        const moraNum = result.length;\n        if (result.length === 0) {\n            this.logger.warn('Reading has 0 mora?');\n            return null;\n        }\n        const kifukuList = this.getOption('autoPitchAccent.paOverride.kifukuOveride');\n        // special case: 0 and length of moras === 1 (nothing needs to be done)\n        // ASSUMPTION: the override kifuku value will NOT be 0 (you are insane if you do that)\n        if (pos === 0 && result.length === 1) {\n            return result[0];\n        }\n        const startOverline = '<span class=\"pitchoverline\">';\n        const stopOverline = `</span>`;\n        const downstep = '<span class=\"downstep\"><span class=\"downstep-inner\">ꜜ</span></span>';\n        let paGroup = null;\n        if (kifukuList.includes(pos)) {\n            if (result.length < 2) {\n                // TODO potentially lift restriction?\n                this.logger.warn('Cannot apply 起伏 on 1 mora word.');\n            }\n            else if (result.length == 2) {\n                // equivalent to pos == 1\n                result.splice(1, 0, stopOverline + downstep); // downstep after first mora\n                result.splice(0, 0, startOverline); // overline starting at the very beginning\n            }\n            else {\n                // equivalent to pos == #moras-1\n                result.splice(-1, 0, stopOverline + downstep); // insert right before last index\n                result.splice(1, 0, startOverline); // insert at index 1\n            }\n            paGroup = 'kifuku';\n        }\n        else if (pos === 0) {\n            result.splice(1, 0, startOverline); // insert at index 1\n            result.push(stopOverline);\n            paGroup = 'heiban';\n        }\n        else if (pos === 1) {\n            // start overline starts at the very beginning\n            result.splice(pos, 0, stopOverline + downstep);\n            result.splice(0, 0, startOverline); // insert at the very beginning\n            paGroup = 'atamadaka';\n            // - ASSUMPTION: we categorize 1 mora long words with a downstep as 尾高,\n            //   e.g. 木 (き＼).\n            // - NOTE: I asked whether 1 mora words with downsteps are 頭高・尾高\n            //   in TMW server and got this response (thanks NotOrange#0654):\n            //    > They are generally considered 尾高. I believe it to be because\n            //    > the definition of 尾高 is when the drop is on a particle rather\n            //    > than another mora of the same word. There are, however, good\n            //    > arguments for categorising them as 頭高 that I'm partial towards.\n            //    > One being that it makes for far fewer exceptions regarding the\n            //    > 平板-ifying effect の often has on 尾高 words that single-mora\n            //    > words are regular exceptions to.\n            if (moraNum === 1) {\n                paGroup = 'odaka';\n            }\n        }\n        else if (pos < 0) {\n            this.logger.warn(`Pitch Accent position (${pos}) is negative.`);\n        }\n        else {\n            if (pos > result.length) {\n                this.logger.warn(`Pitch Accent position (${pos}) is greater than number of moras (${result.length}).`);\n            }\n            // start overline starts over the 2nd mora\n            result.splice(pos, 0, stopOverline + downstep);\n            result.splice(1, 0, startOverline); // insert at index 1\n            if (pos >= moraNum) {\n                paGroup = 'odaka';\n            }\n            else {\n                paGroup = 'nakadaka';\n            }\n        }\n        // override paGroup\n        // TODO custom tags to override even further?\n        if (posData.allowAutoKifuku &&\n            this.getOption('autoPitchAccent.paOverride.detectKifukuFromWordTags') &&\n            pos >= 1 &&\n            isVerbOrIAdj(this.wordTags)) {\n            paGroup = 'kifuku';\n        }\n        posData.paGroup = paGroup; // used for painting the display later\n        const wordInnerHTML = result.join('');\n        const wordSpan = document.createElement('span');\n        wordSpan.innerHTML = wordInnerHTML;\n        if (paGroup !== null) {\n            wordSpan.classList.add(`pa-group-${paGroup}`);\n        }\n        // wraps each pitch as a \"term\", in order to prevent pitch accents wrapping\n        wordSpan.classList.add('pitchterm');\n        if (this.showTitle && posData.dictName !== null) {\n            wordSpan.setAttribute('title', posData.dictName);\n        }\n        return wordSpan.outerHTML;\n    }\n    // main function\n    addPosition(displayEle, noteInfo) {\n        // setting it early to not bubble up this field among all the functions...\n        this.ajtHTML = noteInfo.AJTWordPitch;\n        this.wordTags = getWordTags(noteInfo.YomichanWordTags);\n        let dispPosData = null;\n        // first checks PAOverrideText\n        if (noteInfo.PAOverrideText.length !== 0) {\n            dispPosData = new DispPosData(noteInfo.PAOverrideText, 'Pitch Accent Override Text');\n        }\n        // then checks PAOverride\n        if (dispPosData === null && noteInfo.PAOverride.length !== 0) {\n            const parser = new ParsePAOverride(this, noteInfo.PAOverride, noteInfo.WordReading);\n            dispPosData = parser.parse();\n        }\n        // if still nothing (PAOverrideText, PAOverride), -> PAPositions\n        if (dispPosData === null && noteInfo.PAPositions.length > 0) {\n            const parser = new ParsePAPositions(this, noteInfo.PAPositions, noteInfo.WordReading);\n            dispPosData = parser.parse();\n        }\n        // if still nothing (PAOverrideText, PAOverride, PAPositions) -> AJTWordPitch\n        if (dispPosData === null && noteInfo.AJTWordPitch.length > 0) {\n            const parser = new ParseAJTWordPitch(this, noteInfo.AJTWordPitch, noteInfo.WordReading, this.removeNasal);\n            dispPosData = parser.parse();\n        }\n        // absolutely 0 pitches can be found\n        if (dispPosData === null) {\n            dispPosData = this.getDispPosDataOnEmpty(noteInfo.WordReading);\n        }\n        this.useDispPosData(displayEle, dispPosData, noteInfo.tags);\n        return dispPosData;\n    }\n    main() {\n        const noteInfo = {\n            tags: getTags(),\n            PAOverrideText: getFieldValue('PAOverrideText'),\n            PAOverride: getFieldValue('PAOverride'),\n            PAPositions: getFieldValue('PAPositions'),\n            AJTWordPitch: getFieldValue('AJTWordPitch'),\n            WordReading: getFieldValue('WordReading'),\n            YomichanWordTags: getFieldValue('YomichanWordTags'),\n        };\n        const displayEle = document.getElementById('dh_word_pitch_text');\n        if (displayEle !== null) {\n            displayEle.removeAttribute('title');\n            this.addPosition(displayEle, noteInfo);\n        }\n    }\n}\n","import { Module } from '../module';\nimport { selectPersistStr } from '../spersist';\nimport { throwOnNotFound } from '../utils';\nexport class InfoCircleSetting extends Module {\n    constructor(settingId, persistKey) {\n        super(`sm:infoCircleSetting:${settingId}`);\n        this.infoCircSettings = throwOnNotFound('info_circle_text_settings');\n        this.infoCircSettingsBorder = throwOnNotFound('info_circle_text_settings_border');\n        this.persist = selectPersistStr();\n        this.btn = throwOnNotFound(settingId);\n        this.persistKey = persistKey;\n    }\n    getNextState() {\n        const result = this.getCurrentState();\n        if (result === undefined) {\n            return undefined;\n        }\n        let next = (result + 1) % this.btn.children.length;\n        return next;\n    }\n    getCurrentState() {\n        // find child that isn't hidden\n        if (this.btn.children.length <= 1) {\n            this.logger.warn('Cannot toggle setting with <= 1 children');\n            return undefined;\n        }\n        let result = null;\n        for (let i = 0; i < this.btn.children.length; i++) {\n            const c = this.btn.children[i];\n            if (!c.classList.contains('hidden')) {\n                result = i;\n                break;\n            }\n        }\n        if (result === null) {\n            this.logger.warn('Cannot toggle setting with all hidden children');\n            return undefined;\n        }\n        return result;\n    }\n    toggleDisplay() {\n        // find child that isn't hidden\n        let next = this.getNextState();\n        if (next === undefined) {\n            return undefined;\n        }\n        return this.displayAs(next);\n    }\n    // assumes that one can indeed toggle the display\n    displayAs(next) {\n        // next is now an int\n        let current = next - 1 === -1 ? this.btn.children.length - 1 : next - 1;\n        if (this.persist !== null && this.persistKey !== undefined) {\n            this.persist.set(this.persistKey, `${next}`);\n        }\n        this.btn.children[current].classList.toggle('hidden', true);\n        this.btn.children[next].classList.toggle('hidden', false);\n        return next;\n    }\n    // inits the setting icon to be whatever is stored in persistence (if any)\n    // opt is used to get the default\n    // optional defaultState: if defaultState is undefined, then there are no states\n    initDisplay(defaultState) {\n        this.infoCircSettings.classList.toggle('hidden', false);\n        this.infoCircSettingsBorder.classList.toggle('hidden', false);\n        this.btn.classList.toggle('hidden', false);\n        if (defaultState === undefined) {\n            this.btn.children[0].classList.toggle('hidden', false);\n            return undefined;\n        }\n        let state = defaultState;\n        // checks persistence\n        if (this.persist !== null) {\n            if (this.persistKey !== undefined && defaultState !== undefined) {\n                if (!this.persist.has(this.persistKey)) {\n                    this.persist.set(this.persistKey, `${defaultState}`);\n                }\n                state = Number(this.persist.get(this.persistKey));\n            }\n        }\n        else {\n            this.logger.warn('Persistence is not available. Using default state...');\n        }\n        // state is exactly what child should be visible\n        this.btn.children[state].classList.toggle('hidden', false);\n        return state;\n    }\n}\n","import { Module, RunnableModule } from '../module';\n//import { ImgBlur } from \"./imgBlur\"\nimport { translatorStrs } from '../consts';\nimport { checkOptTags, getOption } from '../options';\nimport { arrContainsAnyOf, getCardSide, getTags, isMobile, popupMenuMessage, } from '../utils';\nimport { fieldIsFilled } from '../fields';\nimport { InfoCircleSetting } from './infoCircleSetting';\nimport { adjustElements } from '../reflow';\n/*\n * BackImgBlurController\n * ImgBlur\n * BackImgStylizer\n *\n * ImgStylizer\n */\nconst clsNoDefinition = 'glossary-primary-definition--no-definition';\nconst clsBlurFilterInit = 'img-blur-filter-init';\nconst clsBlurFilter = 'img-blur-filter';\nconst clsBlurFilterDisable = 'img-blur-filter-disable';\nconst clsImgClick = 'img-clickable';\nconst clsRightImg = 'dh-right__img';\nconst clsWordImgBoxHasImg = 'def-header--has-img';\nconst clsWordImgBoxNoImg = 'def-header--no-img';\nconst clsWordImgBoxTextImg = 'def-header--text-img'; // if it's text only, *has-img is still added!\nconst clsShowEye = 'dh-right__show-eye';\nconst settingId = 'info_circle_text_settings_img_blur_toggle';\nconst persistKey = 'jpmn-img-blur';\n// TODO? this is probably better implemented within HTML/css\n// like how the info circle settings work\nconst EYE_PATH_RAW = 'M12 9a3 3 0 0 0-3 3 3 3 0 0 0 3 3 3 3 0 0 0 3-3 3 3 0 0 0-3-3m0 8a5 5 0 0 1-5-5 5 5 0 0 1 5-5 5 5 0 0 1 5 5 5 5 0 0 1-5 5m0-12.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5Z';\nconst EYE_OFF_PATH_RAW = 'M11.83 9 15 12.16V12a3 3 0 0 0-3-3h-.17m-4.3.8 1.55 1.55c-.05.21-.08.42-.08.65a3 3 0 0 0 3 3c.22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53a5 5 0 0 1-5-5c0-.79.2-1.53.53-2.2M2 4.27l2.28 2.28.45.45C3.08 8.3 1.78 10 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.43.42L19.73 22 21 20.73 3.27 3M12 7a5 5 0 0 1 5 5c0 .64-.13 1.26-.36 1.82l2.93 2.93c1.5-1.25 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-4 .7l2.17 2.15C10.74 7.13 11.35 7 12 7Z';\nclass BackImgBlurController extends Module {\n    constructor(backImgStylizer, imgBlur, imgEle) {\n        super('sm:backImgBlurController');\n        this.dhImgBlur = document.getElementById('dh_img_container_blur_wrapper');\n        this.imgEye = document.getElementById('img_svg_eye');\n        this.imgCurrentlyBlurred = false;\n        this.backImgStylizer = backImgStylizer;\n        this.imgBlur = imgBlur;\n        this.imgEle = imgEle;\n    }\n    initImageBlur() {\n        const state = this.imgBlur.setting.getCurrentState();\n        if (state !== undefined) {\n            this.setImageBlurToState(state, true);\n        }\n        this.imgEye.onclick = () => {\n            if (this.imgCurrentlyBlurred) {\n                // should be blurred -> not blurred\n                this.removeImgBlur();\n            }\n            else {\n                // not blurred -> should be blurred\n                this.addImgBlur();\n            }\n        };\n    }\n    // shows / hides the picture eye entirely\n    hidePictureEye() {\n        this.dhImgBlur.classList.toggle(clsShowEye, false);\n    }\n    showPictureEye() {\n        this.dhImgBlur.classList.toggle(clsShowEye, true);\n    }\n    // toggles the visibile state of the eye\n    pictureEyeBlur() {\n        this.imgEye.children[0].setAttributeNS(null, 'd', EYE_OFF_PATH_RAW);\n    }\n    pictureEyeNoBlur() {\n        this.imgEye.children[0].setAttributeNS(null, 'd', EYE_PATH_RAW);\n    }\n    setImageBlurToState(state, init = false) {\n        if (state === 0) {\n            // ??? -> never blurred\n            this.removeImgBlur();\n            if (!this.imgBlur.cardIsMarked()) {\n                // removes if necessary (non-marked image forced to be blurred -> no longer forced)\n                // recall that the picture eye is always shown on marked cards\n                this.hidePictureEye();\n            }\n        }\n        else if (state === 1) {\n            // ??? -> blur only if marked\n            if (!this.imgBlur.cardIsMarked()) {\n                // NOTE: can reach here on init as well\n                this.removeImgBlur();\n                this.hidePictureEye();\n            }\n            else if (!this.imgCurrentlyBlurred && this.imgBlur.cardIsMarked()) {\n                this.addImgBlur(init);\n            }\n        }\n        else if (state === 2) {\n            // ??? -> always blurred\n            this.addImgBlur(init);\n        }\n        else {\n            this.logger.warn(`Invalid image blur state: ${state}`);\n        }\n    }\n    addImgBlur(init = false) {\n        // removes disable filter\n        this.dhImgBlur.classList.toggle(clsBlurFilterDisable, false);\n        // adds blur, prevents animation from playing on init\n        if (init) {\n            this.dhImgBlur.classList.toggle(clsBlurFilterInit, true);\n        }\n        else {\n            this.dhImgBlur.classList.toggle(clsBlurFilter, true);\n        }\n        this.backImgStylizer.removeClickToZoom(this.imgEle);\n        this.showPictureEye();\n        this.pictureEyeBlur();\n        this.imgCurrentlyBlurred = true;\n    }\n    removeImgBlur() {\n        // adds disable filter\n        this.dhImgBlur.classList.toggle(clsBlurFilterDisable, true);\n        // removes blur filter\n        this.dhImgBlur.classList.toggle(clsBlurFilterInit, false);\n        this.dhImgBlur.classList.toggle(clsBlurFilter, false);\n        this.backImgStylizer.addClickToZoom(this.imgEle, { addClickClass: true });\n        this.pictureEyeNoBlur();\n        this.imgCurrentlyBlurred = false;\n    }\n}\nclass ImgBlur extends Module {\n    constructor() {\n        super('sm:imgBlur');\n        this.setting = new InfoCircleSetting(settingId, persistKey);\n        this.controller = null;\n    }\n    setController(controller) {\n        this.controller = controller;\n    }\n    cardIsMarked() {\n        return arrContainsAnyOf(getTags(), getOption('imgStylizer.mainImage.blur.tags'));\n    }\n    displaySetting() {\n        // internally, states are represented as numbers\n        const defaultStateMap = {\n            never: 0,\n            'only-tagged': 1,\n            always: 2,\n        };\n        const defaultStateStr = getOption('imgStylizer.mainImage.blur.startState');\n        let defaultState = 0;\n        if (defaultStateStr in defaultStateMap) {\n            defaultState = defaultStateMap[defaultStateStr];\n        }\n        // init\n        this.setting.initDisplay(defaultState);\n        // toggle state\n        this.setting.btn.onclick = () => {\n            var _a;\n            const newState = this.setting.getNextState();\n            if (newState === 0) {\n                popupMenuMessage('No images will be blurred.');\n            }\n            else if (newState === 1) {\n                popupMenuMessage('Tagged images will be blurred.');\n            }\n            else if (newState === 2) {\n                popupMenuMessage('All images will be blurred.');\n            }\n            else {\n                // 2\n                this.logger.warn(`Invalid image blur state: ${newState}`);\n                return;\n            }\n            this.setting.displayAs(newState);\n            if (this.controller !== null) {\n                (_a = this.controller) === null || _a === void 0 ? void 0 : _a.setImageBlurToState(newState);\n            }\n        };\n    }\n}\nclass BackImgStylizer extends Module {\n    constructor(imgBlur, globalEventManager) {\n        super('sm:backImgStylizer');\n        //private readonly cardTags = TAGS_LIST;\n        // these shouldn't ever be null...\n        // TODO rename def-header? \"header\" makes 0 sense here lol\n        // \"word box\" makes more sense?\n        this.dhRight = document.getElementById('dh_right');\n        this.dhLeft = document.getElementById('dh_left');\n        this.dhLeftAudioBtns = document.getElementById('dh_left_audio_buttons');\n        this.modal = document.getElementById('modal');\n        this.modalImg = document.getElementById('bigimg');\n        this.floatImgRight = document.getElementById('primary_definition_right_img');\n        this.floatImgLeft = document.getElementById('primary_definition_left_img');\n        this.primaryDefRawText = document.getElementById('primary_definition_raw_text');\n        this.primaryDefBlockquote = document.getElementById('primary_definition');\n        this.wordImgBox = document.getElementById('def_header');\n        this.dhImgContainer = document.getElementById('dh_img_container');\n        this.imgBlur = imgBlur;\n        this.globalEventManager = globalEventManager;\n    }\n    getDisplayImg() {\n        if (!fieldIsFilled('Picture')) {\n            return null;\n        }\n        const imgList = Array.from(this.dhImgContainer.getElementsByTagName('img'));\n        if (imgList && imgList.length > 0) {\n            if (imgList.length >= 2) {\n                this.logger.warn('There are more than 2 images in the Picture field. Use the PrimaryDefinitionPicture field if you wish to add more than one image.');\n            }\n            return imgList[0];\n        }\n        return null;\n    }\n    attemptAddImageFromTags() {\n        // perhaps move to arguments?\n        // for now, image stylizer will remain specifically for one card\n        if (fieldIsFilled('Picture')) {\n            // don't do anything if there's already something in the Picture field\n            return null;\n        }\n        const tagToImgList = getOption('imgStylizer.setMainImageFromTags');\n        for (const tagToImg of tagToImgList) {\n            const tag = tagToImg.tag;\n            if (getTags().includes(tag)) {\n                //if (arrContainsAnyOf(TAGS_LIST, tags)) {\n                const fileName = tagToImg.fileName;\n                const newImg = document.createElement('img');\n                newImg.src = fileName;\n                this.dhImgContainer.appendChild(newImg);\n                this.wordImgBox.classList.toggle(clsWordImgBoxHasImg, true);\n                this.wordImgBox.classList.toggle(clsWordImgBoxNoImg, false);\n                //this.dhLeftAudioBtns.classList.toggle(clsAudioBtnsLeft, true);\n                return newImg;\n            }\n        }\n        return null;\n    }\n    adjustForNoImg() {\n        if (fieldIsFilled('Picture')) {\n            // text only field!\n            this.wordImgBox.classList.toggle(clsWordImgBoxTextImg, true);\n        }\n        else {\n            // completely empty\n            //this.wordImgBox.classList.toggle(clsWordImgBoxNoImg, true);\n            // the above should already be done by templates\n        }\n    }\n    addClickToZoom(ele, args) {\n        let imgEle = ele;\n        if (args !== undefined) {\n            if (args.imgEle !== undefined) {\n                imgEle = args.imgEle;\n            }\n            if (args.addClickClass) {\n                // defaults to false\n                imgEle.classList.toggle(clsImgClick, true);\n            }\n        }\n        // we assume that ele is HTMLImageElement if there's no custom imgEle in the args\n        ele.onclick = () => {\n            this.modal.style.display = 'block';\n            this.modalImg.src = imgEle.src;\n        };\n    }\n    removeClickToZoom(ele) {\n        this.dhImgContainer.classList.toggle(clsImgClick, false);\n        ele.onclick = () => null;\n    }\n    setCanBlur(imgEle) {\n        if (this.imgBlur === null) {\n            return; // nothing to do!\n        }\n        const controller = new BackImgBlurController(this, this.imgBlur, imgEle);\n        this.imgBlur.setController(controller);\n        controller.initImageBlur();\n    }\n    getStylizeMode(modeType) {\n        let defaultMode = getOption(`imgStylizer.glossary.primaryDef.mode.${modeType}`);\n        const stylizeMode = checkOptTags(getTags(), [\n            [`imgStylizer.glossary.primaryDef.mode.${modeType}.tagOverride.float`, 'float'],\n            [\n                `imgStylizer.glossary.primaryDef.mode.${modeType}.tagOverride.collapse`,\n                'collapse',\n            ],\n            [`imgStylizer.glossary.primaryDef.mode.${modeType}.tagOverride.none`, 'none'],\n            ['imgStylizer.glossary.primaryDef.mode.general.tagOverride.float', 'float'],\n            ['imgStylizer.glossary.primaryDef.mode.general.tagOverride.collapse', 'collapse'],\n            ['imgStylizer.glossary.primaryDef.mode.general.tagOverride.none', 'none'],\n        ]);\n        if (stylizeMode === undefined) {\n            return defaultMode;\n        }\n        return stylizeMode;\n    }\n    createImgContainer(imgName) {\n        // creating this programmically:\n        // <span class=\"glossary__image-container\">\n        //   <a class=\"glossary__image-hover-text\" href='javascript:;'</a>\n        //   <img class=\"glossary__image-hover-media\" src=\"${imgName}\">\n        // </span>\n        const defSpan = document.createElement('span');\n        defSpan.classList.add('glossary__image-container');\n        const defAnc = document.createElement('a');\n        defAnc.classList.add('glossary__image-hover-text');\n        defAnc.href = 'javascript:;';\n        defAnc.textContent = translatorStrs['image-hover-text'];\n        defAnc.setAttribute('data-suppress-link-hover', 'true');\n        const defImg = document.createElement('img');\n        defImg.classList.add('glossary__image-hover-media');\n        defImg.setAttribute('data-jpmn-processed', 'true');\n        defImg.src = imgName;\n        this.addClickToZoom(defImg);\n        this.addClickToZoom(defAnc, { imgEle: defImg });\n        defSpan.appendChild(defAnc);\n        defSpan.appendChild(defImg);\n        if (isMobile()) {\n            // always hidden on mobile, must tap text to see image\n            //defImg.classList.toggle(\"hidden\", true); // this doesn't work?\n            defImg.style.display = 'none';\n        }\n        return defSpan;\n    }\n    // force data-jpmn-processed for all yomichan images, i.e. do not process it any further\n    setImgProcessed(ele) {\n        const imgTags = Array.from(ele.getElementsByTagName('img'));\n        for (const imgEle of imgTags) {\n            if (imgEle.src.includes('yomichan_dictionary_media')) {\n                imgEle.setAttribute('data-jpmn-processed', 'true');\n            }\n        }\n    }\n    // ASSUMPTION: after running this, all yomichan img tags elements will be one of the following:\n    // - contain the `data-jpmn-processed` attribute\n    // - moved away from the search element, and into the float div\n    convertYomichanImgs(searchEle, mode) {\n        var _a, _b, _c, _d, _e;\n        const anchorTags = searchEle.getElementsByTagName('a');\n        for (const atag of Array.from(anchorTags)) {\n            const imgFileName = atag.getAttribute('href');\n            if (imgFileName &&\n                imgFileName.substring(0, 25) === 'yomichan_dictionary_media' &&\n                !atag.getAttribute('data-jpmn-processed') // not processed yet\n            ) {\n                this.logger.debug(`Converting yomichan image ${imgFileName} (mode=${mode})...`);\n                if (mode === 'float') {\n                    const imgEle = document.createElement('img');\n                    imgEle.src = imgFileName;\n                    this.floatImgRight.appendChild(imgEle.cloneNode(true));\n                    this.floatImgLeft.appendChild(imgEle); // moves element away\n                    (_a = atag.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(atag);\n                }\n                else if (mode === 'collapse') {\n                    const fragment = this.createImgContainer(imgFileName);\n                    (_b = atag.parentNode) === null || _b === void 0 ? void 0 : _b.replaceChild(fragment, atag);\n                }\n                else if (mode === \"match-yomichan\") {\n                    // to determine whether a dictionary is exported as collapsed or not, check the first span\n                    // x.children[0].style.display\n                    if (((_d = (_c = atag.children[0]) === null || _c === void 0 ? void 0 : _c.style) === null || _d === void 0 ? void 0 : _d.display) === \"none\") { // collapse\n                        const fragment = this.createImgContainer(imgFileName);\n                        (_e = atag.parentNode) === null || _e === void 0 ? void 0 : _e.replaceChild(fragment, atag);\n                    }\n                    else { // don't process\n                        this.setImgProcessed(atag);\n                    }\n                }\n                else {\n                    this.setImgProcessed(atag);\n                }\n                atag.setAttribute('data-jpmn-processed', 'true');\n            }\n        }\n    }\n    stylizeDictionaryGlossaryPics() {\n        // finds the list elements containing the dictionary, and exports as is\n        const dictsOverride = getOption('imgStylizer.glossary.dictsOverride.mode.yomichan');\n        for (const [name, mode] of Object.entries(dictsOverride)) {\n            // TODO: proper escaping?\n            for (const dictEle of Array.from(document.querySelectorAll(`ol li[data-details=\"${name}\"]`))) {\n                this.convertYomichanImgs(dictEle, mode); // sorry typescript gods\n            }\n        }\n    }\n    stylizePrimaryDefGlossaryPics() {\n        var _a;\n        const stylizeModeUser = this.getStylizeMode('user');\n        const stylizeModeYomichan = this.getStylizeMode('yomichan');\n        this.convertYomichanImgs(this.primaryDefRawText, stylizeModeYomichan);\n        // looks for user inserted images\n        if (stylizeModeUser !== 'none' && stylizeModeUser !== 'match-yomichan') {\n            const imgTags = Array.from(this.primaryDefRawText.getElementsByTagName('img'));\n            for (const imgEle of imgTags) {\n                if (imgEle.getAttribute('data-jpmn-processed') || // already converted\n                    imgEle.getAttribute('data-do-not-convert') // does not require converting\n                ) {\n                    continue;\n                }\n                this.logger.debug(`Converting user-inserted image ${imgEle.src} with mode ${stylizeModeUser}...`);\n                if (stylizeModeUser === 'collapse') {\n                    const fragment = this.createImgContainer(imgEle.src);\n                    (_a = imgEle.parentNode) === null || _a === void 0 ? void 0 : _a.replaceChild(fragment, imgEle);\n                }\n                else {\n                    this.floatImgRight.appendChild(imgEle.cloneNode(true));\n                    this.floatImgLeft.appendChild(imgEle); // moves element away\n                }\n            }\n        }\n    }\n    stylizeOtherGlossaryPics() {\n        const textNotPrimary = '.glossary-text--raw-text:not(.glossary-text--raw-text-primary)';\n        const searchEles = Array.from(document.querySelectorAll(textNotPrimary));\n        for (const searchEle of searchEles) {\n            this.convertYomichanImgs(searchEle, 'collapse');\n        }\n    }\n    getFloatImgPos() {\n        let defaultPos = getOption('imgStylizer.glossary.floatImg.position');\n        const floatImgPos = checkOptTags(getTags(), [\n            ['imgStylizer.glossary.floatImg.overrideTags.bottom', 'bottom'],\n            ['imgStylizer.glossary.floatImg.overrideTags.top', 'top'],\n            ['imgStylizer.glossary.floatImg.overrideTags.right', 'right'],\n        ]);\n        if (floatImgPos === undefined) {\n            return defaultPos;\n        }\n        return floatImgPos;\n    }\n    /* sets position, and make clickable to zoom */\n    stylizeFloatImg() {\n        if (this.floatImgRight.innerHTML.length === 0) {\n            this.logger.debug('PrimaryDefinitionPicture is empty. Nothing has to be done.', 2);\n            return;\n        }\n        let floatImgPos = this.getFloatImgPos();\n        // Overrides because if there is no text, and there is no override,\n        // then the image will not show at all. There's no reason why an image\n        // should be placed on the right if there's no definition anyways.\n        if (floatImgPos === 'right' &&\n            this.primaryDefBlockquote.classList.contains(clsNoDefinition)) {\n            floatImgPos = 'top';\n        }\n        this.logger.debug(`float image position: ${floatImgPos}`);\n        // resets default\n        if (floatImgPos === 'bottom') {\n            this.primaryDefBlockquote.classList.add('glossary-blockquote--picture-below');\n        }\n        else if (floatImgPos === 'top') {\n            this.primaryDefBlockquote.classList.add('glossary-blockquote--picture-above');\n        }\n        else if (floatImgPos === 'right') {\n            this.primaryDefBlockquote.classList.toggle('glossary-primary-definition--auto-no-lenience', false);\n        }\n        const imgList = Array.from(this.floatImgRight.getElementsByTagName('img')).concat(Array.from(this.floatImgLeft.getElementsByTagName('img')));\n        for (const imgEle of imgList) {\n            this.addClickToZoom(imgEle, { addClickClass: true });\n        }\n    }\n    modalInit() {\n        // close the modal upon click\n        this.modal.onclick = () => {\n            this.modalImg.classList.add('modal-img__zoom-out');\n            this.modal.classList.add('modal-img__zoom-out');\n            setTimeout(() => {\n                this.modal.style.display = 'none';\n                this.modalImg.className = 'modal-img';\n                this.modal.className = 'modal';\n            }, 200);\n        };\n    }\n    main() {\n        let imgEle = this.getDisplayImg();\n        if (imgEle === null) {\n            imgEle = this.attemptAddImageFromTags();\n        }\n        adjustElements(imgEle, this.dhLeft, this.dhRight);\n        this.globalEventManager.addWindowResizeFunc('adjustElements', (e) => {\n            adjustElements(imgEle, this.dhLeft, this.dhRight);\n        });\n        if (imgEle === null) {\n            this.adjustForNoImg();\n        }\n        else {\n            this.addClickToZoom(imgEle, { addClickClass: true });\n            imgEle.classList.add(clsRightImg);\n            if (getOption('imgStylizer.mainImage.blur.enabled')) {\n                this.setCanBlur(imgEle);\n            }\n        }\n        this.modalInit();\n        this.stylizeDictionaryGlossaryPics();\n        if (getOption('imgStylizer.glossary.primaryDef.enabled')) {\n            this.stylizePrimaryDefGlossaryPics();\n        }\n        if (getOption('imgStylizer.glossary.other.enabled')) {\n            this.stylizeOtherGlossaryPics();\n        }\n        if (getOption('imgStylizer.glossary.floatImg.enabled')) {\n            this.stylizeFloatImg();\n        }\n    }\n}\nexport class ImgStylizer extends RunnableModule {\n    constructor(globalEventManager) {\n        super('imgStylizer');\n        this.globalEventManager = globalEventManager;\n    }\n    // public interface to get image element\n    getDisplayImg() {\n        const dhImgContainer = document.getElementById('dh_img_container');\n        if (dhImgContainer === null) {\n            return null;\n        }\n        const imgEleList = dhImgContainer.getElementsByTagName('img');\n        if (!imgEleList) {\n            return;\n        }\n        return imgEleList[0];\n    }\n    main() {\n        let imgBlur = null;\n        if (getOption('imgStylizer.mainImage.blur.enabled')) {\n            imgBlur = new ImgBlur();\n            imgBlur.displaySetting();\n        }\n        // almost all the logic of this module is only done on the back side of the card anyways\n        if (getCardSide() === 'back') {\n            const backStylizer = new BackImgStylizer(imgBlur, this.globalEventManager);\n            backStylizer.main();\n        }\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { selectPersistObj } from './spersist';\nconst getQueryCacheKey = 'ankiConnectUtils.getQueryCacheKey';\nconst getCardInfoCacheKey = 'ankiConnectUtils.getCardInfoCacheKey';\n// https://github.com/FooSoft/anki-connect#javascript\nexport function invoke(action, params = {}) {\n    //console.log(`invoke(${action}, ${JSON.stringify(params)}`);\n    let version = 6;\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('error', () => reject('AnkiConnect failed to issue request.'));\n        xhr.addEventListener('load', () => {\n            try {\n                const response = JSON.parse(xhr.responseText);\n                if (Object.getOwnPropertyNames(response).length != 2) {\n                    throw 'response has an unexpected number of fields';\n                }\n                if (!response.hasOwnProperty('error')) {\n                    throw 'response is missing required error field';\n                }\n                if (!response.hasOwnProperty('result')) {\n                    throw 'response is missing required result field';\n                }\n                if (response.error) {\n                    throw response.error;\n                }\n                resolve(response.result);\n            }\n            catch (e) {\n                reject(e);\n            }\n        });\n        xhr.open('POST', 'http://127.0.0.1:8765');\n        xhr.send(JSON.stringify({ action, version, params }));\n    });\n}\n/* Escapes the string to be used in Anki-Connect queries */\nexport function escapeQueryStr(s) {\n    return s.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"');\n}\nexport function constructFindCardsAction(query) {\n    return {\n        action: 'findCards',\n        version: 6,\n        params: {\n            query: query,\n        },\n    };\n}\n/* expects that persist can store objects */\nexport function getQueryCache(persistObj, query) {\n    const key = `${getQueryCacheKey}.${query}`;\n    if (persistObj.has(key)) {\n        return persistObj.get(key);\n    }\n    return null;\n}\n/* expects that persist can store objects */\nexport function setQueryCache(persistObj, query, queryResult) {\n    const key = `${getQueryCacheKey}.${query}`;\n    persistObj.set(key, queryResult);\n}\n/* expects that persist can store objects */\nexport function queryAnki(persistObj, query, readCache, writeCache) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (readCache && persistObj !== null) {\n            const cache = getQueryCache(persistObj, query);\n            if (cache !== null) {\n                return cache;\n            }\n        }\n        const result = (yield invoke('findCards', { query: query }));\n        if (writeCache && persistObj !== null) {\n            setQueryCache(persistObj, query, result);\n        }\n        return result;\n    });\n}\n/* expects that persist can store objects */\nexport function setCardInfoCache(persist, cardID, cardInfo) {\n    const key = `${getCardInfoCacheKey}.${cardID}`;\n    persist.set(key, cardInfo);\n}\n/* expects that persist can store objects */\nexport function getCardInfoCache(persist, cardID) {\n    const key = `${getCardInfoCacheKey}.${cardID}`;\n    if (persist.has(key)) {\n        return persist.get(key);\n    }\n    return null;\n}\nexport function cardsInfo(cardIDs, readCache = true, writeCache = true) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const result = {};\n        if (readCache) {\n            const persist = selectPersistObj();\n            if (persist !== null) {\n                for (const id of cardIDs) {\n                    const cache = getCardInfoCache(persist, id);\n                    if (cache !== null) {\n                        result[id] = cache;\n                    }\n                }\n            }\n        }\n        // gets all not originally cached\n        const searchIDs = [];\n        for (const id of cardIDs) {\n            if (!(id in result)) {\n                searchIDs.push(id);\n            }\n        }\n        const cardsInfoResult = (yield invoke('cardsInfo', { cards: searchIDs }));\n        for (let i = 0; i < searchIDs.length; i++) {\n            const id = searchIDs[i];\n            const cardInfo = cardsInfoResult[i];\n            result[id] = cardInfo;\n        }\n        if (writeCache) {\n            const persist = selectPersistObj();\n            if (persist !== null) {\n                for (let i = 0; i < searchIDs.length; i++) {\n                    const id = searchIDs[i];\n                    const cardInfo = cardsInfoResult[i];\n                    setCardInfoCache(persist, id, cardInfo);\n                }\n            }\n        }\n        return result;\n    });\n}\n/* equivalent of cardsInfo() except it simply uses the cache instead */\nexport function cardIDsToCardsInfo(cardIDs, cardsInfoResult) {\n    const result = [];\n    for (const id of cardIDs) {\n        if (!(id in cardsInfoResult)) {\n            throw Error('id not in cardsInfoResult: ${id}');\n        }\n        result.push(cardsInfoResult[id]);\n    }\n    return result;\n}\nexport class QueryBuilder {\n    constructor() {\n        this.segments = [];\n    }\n    addSegment(segment, negate = false) {\n        if (segment.length > 0) {\n            const resultSegment = `${negate ? '-' : ''}(${segment})`;\n            this.segments.push(resultSegment);\n        }\n        return this;\n    }\n    build() {\n        return this.segments.join(' ');\n    }\n    clone() {\n        const qb = new QueryBuilder();\n        qb.segments = Array.from(this.segments);\n        return qb;\n    }\n}\n","import { compileOpts } from '../consts';\nimport { Module } from '../module';\nimport { AutoPitchAccent, } from './autoPitchAccent';\nimport { SentenceParser } from './sentenceParser';\nimport { invoke, escapeQueryStr, QueryBuilder } from '../ankiConnectUtils';\nimport { plainToRuby } from '../utils';\nexport class TooltipCardDivBuilder {\n    constructor(tooltips) {\n        this.wordDiv = null;\n        this.mainPAGroup = null;\n        this.sentDiv = null;\n        this.isNew = false;\n        this.tooltips = tooltips;\n    }\n    addWordDiv(div) {\n        this.wordDiv = div;\n        return this;\n    }\n    addSentDiv(div) {\n        this.sentDiv = div;\n        return this;\n    }\n    createWordDiv(noteInfo, character = null, cardId = null) {\n        [this.wordDiv, this.mainPAGroup] = this.tooltips.buildWordDiv(noteInfo, character, cardId);\n        return this;\n    }\n    createSentDiv(noteInfo) {\n        this.sentDiv = this.tooltips.buildSentDiv(noteInfo);\n        return this;\n    }\n    /* greys out the card */\n    setNew() {\n        this.isNew = true;\n    }\n    build() {\n        var _a, _b, _c;\n        const cardDiv = document.createElement('div');\n        cardDiv.classList.add('hover-tooltip__card');\n        if (this.wordDiv === null && this.sentDiv === null) {\n            throw Error('Cannot make a card with both empty wordDiv and sentDiv');\n        }\n        if (this.mainPAGroup) {\n            // here because tooltips shouldn't store this info\n            // TODO refactor this? feels hacky to have this here...\n            // highlights the kanji\n            if (this.tooltips.autoPA.getOption('autoPitchAccent.coloredPitchAccent.color.wordReadingKanji')) {\n                const wordClass = 'pa-sentence-highlight-' + this.mainPAGroup; // sentence so it only highlights bold\n                (_a = this.wordDiv) === null || _a === void 0 ? void 0 : _a.classList.add(wordClass);\n            }\n            // highlights the sentence\n            if (this.tooltips.autoPA.getOption('autoPitchAccent.coloredPitchAccent.color.fullSentence') &&\n                this.tooltips.getOption('tooltips.highlightWordInSentence')) {\n                (_b = this.sentDiv) === null || _b === void 0 ? void 0 : _b.classList.add(`pa-sentence-highlight-${this.mainPAGroup}`);\n            }\n        }\n        if (this.tooltips.getOption('tooltips.highlightWordInSentence')) {\n            (_c = this.sentDiv) === null || _c === void 0 ? void 0 : _c.classList.add('highlight-bold');\n        }\n        if (this.wordDiv !== null) {\n            cardDiv.appendChild(this.wordDiv);\n        }\n        if (this.sentDiv !== null) {\n            cardDiv.appendChild(this.sentDiv);\n        }\n        if (this.sentDiv !== null && this.wordDiv === null) {\n            cardDiv.classList.add('hover-tooltip__card--sentence-only');\n        }\n        if (this.isNew) {\n            cardDiv.classList.add('hover-tooltip__card--new');\n        }\n        if (this.tooltips.getOption('tooltips.displayPitchAccentOnHoverOnly')) {\n            cardDiv.classList.add('hover-tooltip__card-div--hover');\n        }\n        return cardDiv;\n    }\n}\nexport class TooltipBuilder {\n    constructor(tooltips) {\n        this.hoverText = null;\n        this.onEmptyText = null;\n        this.cardDivs = [];\n        this.tooltips = tooltips;\n    }\n    addCardDiv(cardDiv) {\n        //console.log(cardDiv)\n        if (this.cardDivs.length > 0) {\n            cardDiv.classList.add('hover-tooltip--not-first');\n        }\n        this.cardDivs.push(cardDiv);\n    }\n    addSeparator() {\n        const sepDiv = document.createElement('div');\n        sepDiv.classList.add('hover-tooltip__card');\n        sepDiv.classList.add('hover-tooltip__card--separator');\n        this.cardDivs.push(sepDiv);\n    }\n    // what text should be hovered over\n    addHoverText(text) {\n        this.hoverText = text;\n    }\n    addOnEmptyText(text) {\n        this.onEmptyText = text;\n    }\n    // TODO rename this entire class?\n    // what is the tooltip vs hover text?\n    buildTooltipOnly() {\n        /*\n         * <span class=\"hover-tooltip\"> ... </span>\n         *\n         */\n        const tooltipSpan = document.createElement('span');\n        tooltipSpan.classList.add('hover-tooltip');\n        //tooltipSpan.classList.add(\"hover-tooltip--kanji-hover\");\n        for (const cardDiv of this.cardDivs) {\n            tooltipSpan.appendChild(cardDiv);\n        }\n        // 0 length checks\n        if (tooltipSpan.children.length === 0) {\n            if (this.onEmptyText === null) {\n                throw Error('Empty tooltip, but no empty text was specified');\n            }\n            if (typeof this.onEmptyText === 'string') {\n                tooltipSpan.textContent = this.onEmptyText;\n            }\n            else {\n                tooltipSpan.appendChild(this.onEmptyText);\n            }\n        }\n        return tooltipSpan;\n    }\n    build() {\n        /*\n         * <span class=\"hover-wrapper\">\n         *   <span class=\"hover-text\"> (kanji) </span>\n         *   <span class=\"hover-tooltip-wrapper\">\n         *     <span class=\"hover-tooltip\"> ... </span>\n         *   </span>\n         * </span>\n         *\n         */\n        if (this.hoverText === null) {\n            throw Error('No hover text found, cannot build tooltip');\n        }\n        const tooltipWrapperSpan = document.createElement('span');\n        tooltipWrapperSpan.classList.add('hover-tooltip-wrapper');\n        const wrapper = document.createElement('span');\n        wrapper.classList.add('hover-wrapper');\n        const hoverText = document.createElement('span');\n        hoverText.classList.add('hover-text');\n        if (typeof this.hoverText === 'string') {\n            hoverText.textContent = this.hoverText;\n        }\n        else {\n            hoverText.appendChild(this.hoverText);\n        }\n        tooltipWrapperSpan.appendChild(this.buildTooltipOnly());\n        wrapper.appendChild(hoverText);\n        wrapper.appendChild(tooltipWrapperSpan);\n        return wrapper;\n    }\n}\nexport class Tooltips extends Module {\n    constructor() {\n        super('sm:tooltips');\n        const paArgs = {\n            attemptGlobalColor: false,\n            showTitle: false,\n            removeNasal: true,\n            debugLevel: 2,\n        };\n        this.autoPA = new AutoPitchAccent('tb:autoPitchAccent', paArgs);\n        this.autoPA.overrideOptions(this.getOption('tooltips.overrideOptions.autoPitchAccent'));\n        this.sentParser = new SentenceParser('tb:sentenceParser', { debugLevel: 2 });\n        this.sentParser.overrideOptions(this.getOption('tooltips.overrideOptions.sentenceParser'));\n    }\n    newCardBuilder() {\n        return new TooltipCardDivBuilder(this);\n    }\n    newBuilder() {\n        return new TooltipBuilder(this);\n    }\n    buildWordDiv(noteInfo, character, cardId = null) {\n        var _a;\n        const wordDiv = document.createElement('div');\n        wordDiv.classList.add('hover-tooltip__word-div');\n        let wordReadingRuby = plainToRuby(noteInfo.WordReading);\n        if (character !== null) {\n            wordReadingRuby = wordReadingRuby.replace(new RegExp(character, 'g'), `<b>${character}</b>`);\n        }\n        const wordEle = document.createElement('span');\n        wordEle.innerHTML = wordReadingRuby;\n        wordEle.classList.add('hover-tooltip__word-span');\n        if (cardId !== null) {\n            wordEle.setAttribute('data-cid', cardId.toString());\n        }\n        wordDiv.appendChild(wordEle);\n        let mainPAGroup = null;\n        if (this.getOption('tooltips.displayPitchAccent')) {\n            const displayEle = document.createElement('span');\n            displayEle.classList.add('hover-tooltip__pitch-accent');\n            const dispPosData = this.autoPA.addPosition(displayEle, noteInfo);\n            mainPAGroup = (_a = dispPosData === null || dispPosData === void 0 ? void 0 : dispPosData.mainPAGroup) !== null && _a !== void 0 ? _a : null;\n            wordDiv.appendChild(displayEle);\n        }\n        return [wordDiv, mainPAGroup];\n    }\n    buildSentDiv(noteInfo) {\n        // sentEle is the base, containing open/contents/close\n        const sentEle = document.createElement('div');\n        sentEle.classList.add('hover-tooltip__sent-div');\n        sentEle.classList.add('left-align-quote');\n        const sentenceOpen = document.createElement('span');\n        sentenceOpen.innerHTML = compileOpts.autoQuoteOpen;\n        const sentenceContents = document.createElement('span');\n        sentenceContents.innerHTML = noteInfo.Sentence;\n        const sentenceClose = document.createElement('span');\n        sentenceClose.innerHTML = compileOpts.autoQuoteClose;\n        sentEle.appendChild(sentenceOpen);\n        sentEle.appendChild(sentenceContents);\n        sentEle.appendChild(sentenceClose);\n        const sent = {\n            open: sentEle.children[0],\n            contents: sentEle.children[1],\n            close: sentEle.children[2],\n            base: sentEle,\n        };\n        this.sentParser.processSentence(sent, 'fullSent', noteInfo);\n        return sentEle;\n    }\n    /* queries any card that isn't this current card */\n    getCardBaseQuery(Key) {\n        // TODO generalize / don't hardcode?\n        const noteName = 'JP Mining Note';\n        const cardTypeName = 'Mining Card';\n        const key = escapeQueryStr(Key);\n        return `-\"Key:${key}\" \"note:${noteName}\" \"card:${cardTypeName}\"`;\n    }\n    getQuery(type) {\n        const base = this.getOption(`tooltips.query.${type}.base`);\n        const removed = this.getOption(`tooltips.query.${type}.removed`);\n        // function exists because a query of () or -() is not valid!\n        const qb = new QueryBuilder().addSegment(base).addSegment(removed, true);\n        return qb;\n    }\n    getQueryBuilderGroup() {\n        const qpNew = this.getQuery('new');\n        const qpNonNew = this.getQuery('nonNew');\n        return {\n            'nonNew.default': qpNonNew,\n            'new.default': qpNew,\n        };\n    }\n    /* goes through the HTML to search for data-cid, and then adds a guiBrowse\n       call to view that cid (if it exists) */\n    addBrowseOnClick(parentEle) {\n        // ASSUMPTION: ankiconnect is active here since the tooltip can only be built\n        // when ankiconnect exists (to search for other cards)\n        for (const ele of parentEle.querySelectorAll('[data-cid]')) {\n            let cid = ele.getAttribute('data-cid');\n            if (cid !== null) {\n                ele.onclick = () => {\n                    invoke('guiBrowse', { query: `cid:${cid}` });\n                };\n                ele.classList.add('hover-tooltip__word-div--clickable');\n            }\n        }\n    }\n    // transforms CardInfo into something useful for the tooltip builder\n    // boldSentKanji: null => do not replace, string => remove existing bold and only bold that specified kanji\n    cardInfoToNoteInfoTooltipBuilder(cardInfo, boldSentKanji = null, cardId = null) {\n        let resultSent = cardInfo.fields.Sentence.value;\n        if (boldSentKanji !== null) {\n            if (!resultSent.includes(boldSentKanji)) {\n                throw Error(`Cannot use boldSentKanji ${boldSentKanji} when kanji does not exist in sentence: ${resultSent}`);\n            }\n            resultSent = resultSent.replace(/<b>|<\\/b>/g, '');\n            const rx = new RegExp(boldSentKanji, 'g');\n            if (cardId === null) {\n                resultSent = resultSent.replace(rx, `<b>${boldSentKanji}</b>`);\n            }\n            else {\n                // the extra span is so auto-highlight detection properly works (it currently is a regex search on <b>)\n                resultSent = resultSent.replace(rx, `<b><span data-cid=\"${cardId}\">${boldSentKanji}</span></b>`);\n            }\n        }\n        return {\n            AJTWordPitch: cardInfo.fields.AJTWordPitch.value,\n            PAOverride: cardInfo.fields.PAOverride.value,\n            PAOverrideText: cardInfo.fields.PAOverrideText.value,\n            PAPositions: cardInfo.fields.PAPositions.value,\n            Sentence: resultSent,\n            Word: cardInfo.fields.Word.value,\n            WordReading: cardInfo.fields.WordReading.value,\n            WordReadingHiragana: cardInfo.fields.WordReading.value,\n            YomichanWordTags: cardInfo.fields.YomichanWordTags.value,\n            tags: [],\n        };\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { RunnableAsyncModule } from '../module';\nimport { getOption } from '../options';\nimport { selectPersistObj, selectPersistStr } from '../spersist';\nimport { plainToRuby, getCardKey, filterCards } from '../utils';\nimport { getFieldValue, cacheFieldValue } from '../fields';\nimport { Tooltips } from './tooltips';\nimport { constructFindCardsAction, escapeQueryStr, getQueryCache, setQueryCache, invoke, cardsInfo, cardIDsToCardsInfo, } from '../ankiConnectUtils';\nimport { translatorStrs } from '../consts';\nexport class KanjiHover extends RunnableAsyncModule {\n    constructor(cardCache, mobilePopup) {\n        super('kanjiHover');\n        this.persist = selectPersistStr();\n        this.persistObj = selectPersistObj();\n        this.noteInfo = {\n            WordReading: getFieldValue('WordReading'),\n            WordReadingRubyHTML: plainToRuby(getFieldValue('WordReading')),\n            Key: getFieldValue('Key'),\n        };\n        this.tooltips = new Tooltips();\n        this.tooltips.overrideOptions(getOption('kanjiHover.overrideOptions.tooltips'));\n        this.cardWordReadingResultKey = `KanjiHover.cardWordReadingResultKey.${getCardKey()}`;\n        this.cardHoverHTMLCacheKey = `KanjiHover.cardHoverHTMLCacheKey.${getCardKey()}`;\n        this.mobilePopup = mobilePopup;\n        this.wordReadingEle = document.getElementById('dh_reading');\n        this.cardCache = cardCache;\n        // ran synchronously, so fields will 100% be cached\n        const cacheFields = ['Key', 'Word', 'WordReading'];\n        for (const f of cacheFields) {\n            cacheFieldValue(f);\n        }\n    }\n    wordReadingKanjis(noteInfo) {\n        let kanjiSet = new Set(); // set of kanjis that requires api calls\n        // regex shamelessly stolen from cade's kanji hover:\n        // https://github.com/cademcniven/Kanji-Hover/blob/main/_kanjiHover.js\n        const regex = /([\\u4E00-\\u9FAF])(?![^<]*>|[^<>]*<\\/g)/g;\n        const matches = noteInfo.WordReading.matchAll(regex);\n        for (const match of matches) {\n            for (const kanji of match) {\n                kanjiSet.add(kanji);\n            }\n        }\n        return kanjiSet;\n    }\n    // TODO combine this with word indicators via tooltip builder at some point?\n    cardQueries(noteInfo, kanjis) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO how to run this across other notes / cards?\n            const baseQuery = this.tooltips.getCardBaseQuery(getFieldValue('Key'));\n            let kanjiToQueryCategory = {};\n            let queryResults = {};\n            // TODO when combining, this can be a lambda\n            for (const kanji of kanjis) {\n                const wordReading = escapeQueryStr(noteInfo.WordReading);\n                const wordQuery = `-\"WordReading:${wordReading}\" Word:*${kanji}*`;\n                // should be mutually exclusive from the above\n                const sentQuery = `-\"WordReading:${wordReading}\" -Word:*${kanji}* Sentence:*${kanji}*`;\n                const queryGroup = this.tooltips.getQueryBuilderGroup();\n                const queries = {\n                    'word.nonNew.default': '',\n                    'word.new.default': '',\n                    'sent.nonNew.default': '',\n                    'sent.new.default': '',\n                };\n                for (const [key, qb] of Object.entries(queryGroup)) {\n                    qb.addSegment(baseQuery);\n                    const qbSent = qb.clone();\n                    qb.addSegment(wordQuery);\n                    queries[`word.${key}`] = qb.build();\n                    qbSent.addSegment(sentQuery);\n                    queries[`sent.${key}`] = qbSent.build();\n                }\n                kanjiToQueryCategory[kanji] = queries;\n            }\n            for (const [kanji, queryCategory] of Object.entries(kanjiToQueryCategory)) {\n                queryResults[kanji] = {\n                    'word.nonNew.default': [-1],\n                    'word.new.default': [-1],\n                    'sent.nonNew.default': [-1],\n                    'sent.new.default': [-1],\n                };\n                // checks cache\n                if (this.useCache) {\n                    for (const [queryKey, query] of Object.entries(queryCategory)) {\n                        if (this.persistObj !== null) {\n                            const cache = getQueryCache(this.persistObj, query);\n                            if (cache !== null) {\n                                queryResults[kanji][queryKey] = cache;\n                            }\n                        }\n                    }\n                }\n            }\n            // gets actions for queries\n            // these two arrays should be the same length, as they map query key <-> query\n            let queriesFlattened = [];\n            let kanjisFlattened = [];\n            let categoriesFlattened = [];\n            let actions = [];\n            // any remaining results == [-1] will actually be queried\n            for (const [kanji, queryCategory] of Object.entries(queryResults)) {\n                for (const [categoryID, queryResult] of Object.entries(queryCategory)) {\n                    if (queryResult.length === 1 && queryResult[0] === -1) {\n                        const query = kanjiToQueryCategory[kanji][categoryID];\n                        queriesFlattened.push(query);\n                        kanjisFlattened.push(kanji);\n                        categoriesFlattened.push(categoryID);\n                        const action = constructFindCardsAction(query);\n                        actions.push(action);\n                    }\n                }\n            }\n            const multiResults = (yield invoke('multi', { actions: actions }));\n            for (let i = 0; i < multiResults.length; i++) {\n                const query = queriesFlattened[i];\n                const kanji = kanjisFlattened[i];\n                const categoryID = categoriesFlattened[i];\n                const queryResult = multiResults[i].result;\n                if (this.persistObj !== null) {\n                    setQueryCache(this.persistObj, query, queryResult);\n                }\n                queryResults[kanji][categoryID] = queryResult;\n            }\n            return queryResults;\n        });\n    }\n    // TODO move this into tooltip builder maybe?\n    sortByTimeCreated(kanjiQueryResults) {\n        const maxNonNewOldest = this.getOption('tooltips.categoryMax.nonNew.oldest');\n        const maxNonNewNewest = this.getOption('tooltips.categoryMax.nonNew.newest');\n        const maxNewOldest = this.getOption('tooltips.categoryMax.new.oldest');\n        const maxNewNewest = this.getOption('tooltips.categoryMax.new.newest');\n        const kanjiToFilteredCardIDs = {};\n        for (const [kanji, queryResult] of Object.entries(kanjiQueryResults)) {\n            const [nonNewResultIds, newResultIds] = filterCards([queryResult['word.nonNew.default'], queryResult['sent.nonNew.default']], [queryResult['word.new.default'], queryResult['sent.new.default']], maxNonNewOldest, maxNonNewNewest, maxNewOldest, maxNewNewest);\n            kanjiToFilteredCardIDs[kanji] = {\n                'word.nonNew': nonNewResultIds[0],\n                'sent.nonNew': nonNewResultIds[1],\n                'word.new': newResultIds[0],\n                'sent.new': newResultIds[1],\n            };\n        }\n        return kanjiToFilteredCardIDs;\n    }\n    getCardInfo(kanjiToFilteredCardIDs) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // extracts the card ids and just attempts to get it\n            const cardIDs = new Set();\n            const result = {};\n            for (const filteredCardIDs of Object.values(kanjiToFilteredCardIDs)) {\n                // there's no set union?\n                // there's also no easy way to add all elements from an iterable to a set???\n                // therefore, you just go to for-loop through all the values???????\n                const ids = [\n                    ...filteredCardIDs['word.nonNew'],\n                    ...filteredCardIDs['word.new'],\n                    ...filteredCardIDs['sent.nonNew'],\n                    ...filteredCardIDs['sent.new'],\n                ];\n                for (const id of ids) {\n                    cardIDs.add(id);\n                }\n            }\n            const cardIDsArray = [...cardIDs]; // convert set to array\n            const cardsInfoResult = yield cardsInfo(cardIDsArray, this.useCache);\n            for (const [kanji, filteredCardIDs] of Object.entries(kanjiToFilteredCardIDs)) {\n                result[kanji] = {\n                    'word.nonNew': cardIDsToCardsInfo(filteredCardIDs['word.nonNew'], cardsInfoResult),\n                    'word.new': cardIDsToCardsInfo(filteredCardIDs['word.new'], cardsInfoResult),\n                    'sent.nonNew': cardIDsToCardsInfo(filteredCardIDs['sent.nonNew'], cardsInfoResult),\n                    'sent.new': cardIDsToCardsInfo(filteredCardIDs['sent.new'], cardsInfoResult),\n                };\n            }\n            return result;\n        });\n    }\n    buildTooltips(kanjiToFilteredCardIDs, kanjiToHover) {\n        for (const [kanji, filteredCardsInfo] of Object.entries(kanjiToFilteredCardIDs)) {\n            kanjiToHover[kanji] = this.buildTooltip(filteredCardsInfo, kanji);\n        }\n    }\n    // helper function for buildTooltip\n    // not in tooltips.ts because kanji and isSentCard arguments\n    addCardsInfoToTooltip(cardsInfo, kanji, tooltipBuilder, isSentCard, isNew) {\n        for (const cardInfo of cardsInfo) {\n            const cardBuilder = this.tooltips.newCardBuilder();\n            if (isSentCard) {\n                // removes existing bold & adds bold to kanji in sentence\n                const noteInfoTTB = this.tooltips.cardInfoToNoteInfoTooltipBuilder(cardInfo, kanji, cardInfo.cardId);\n                cardBuilder.createSentDiv(noteInfoTTB);\n            }\n            else {\n                const noteInfoTTB = this.tooltips.cardInfoToNoteInfoTooltipBuilder(cardInfo);\n                cardBuilder.createWordDiv(noteInfoTTB, kanji, cardInfo.cardId);\n                cardBuilder.createSentDiv(noteInfoTTB);\n            }\n            if (isNew) {\n                cardBuilder.setNew();\n            }\n            tooltipBuilder.addCardDiv(cardBuilder.build());\n        }\n    }\n    buildTooltip(filteredCardsInfo, kanji) {\n        const tooltipBuilder = this.tooltips.newBuilder();\n        const wordLen = filteredCardsInfo['word.nonNew'].length + filteredCardsInfo['word.new'].length;\n        const sentLen = filteredCardsInfo['sent.nonNew'].length + filteredCardsInfo['sent.new'].length;\n        this.addCardsInfoToTooltip(filteredCardsInfo['word.nonNew'], kanji, tooltipBuilder, false, false);\n        this.addCardsInfoToTooltip(filteredCardsInfo['word.new'], kanji, tooltipBuilder, false, true);\n        if (wordLen > 0 && sentLen > 0) {\n            tooltipBuilder.addSeparator();\n        }\n        // TODO: show number of sentences / words not shown...\n        if (this.getOption(\"kanjiHover.searchSentences\")) {\n            this.addCardsInfoToTooltip(filteredCardsInfo['sent.nonNew'], kanji, tooltipBuilder, true, false);\n            this.addCardsInfoToTooltip(filteredCardsInfo['sent.new'], kanji, tooltipBuilder, true, true);\n        }\n        tooltipBuilder.addHoverText(kanji);\n        tooltipBuilder.addOnEmptyText(translatorStrs['kanji-not-found']);\n        return tooltipBuilder.build().outerHTML;\n    }\n    getKanjisToHover(noteInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Nothing is cached in this function directly, caching happens in\n            // the ankiConnectUtils queries / cardsInfo\n            let kanjiSet = this.wordReadingKanjis(noteInfo);\n            // maps a kanji to the full hover HTML (the html containing the kanji + the full popup)\n            let kanjiToHover = {};\n            // searches the remaining kanjis in kanjiSet\n            const queryResults = yield this.cardQueries(noteInfo, Array.from(kanjiSet));\n            let kanjiToFilteredCardIDs = this.sortByTimeCreated(queryResults);\n            const kanjiToFilteredCardInfo = yield this.getCardInfo(kanjiToFilteredCardIDs);\n            this.buildTooltips(kanjiToFilteredCardInfo, kanjiToHover);\n            return kanjiToHover;\n        });\n    }\n    getWordReadingResult(kanjiToHoverHTML, wordReadingRubyHTML) {\n        let resultHTML = wordReadingRubyHTML;\n        if (Object.keys(kanjiToHoverHTML).length > 0) {\n            // an empty object seems to replace every empty space\n            const re = new RegExp(Object.keys(kanjiToHoverHTML).join('|'), 'gi');\n            resultHTML = wordReadingRubyHTML.replace(re, function (matched) {\n                return `<span data-kanji-hover=\"${matched}\">${kanjiToHoverHTML[matched]}</span>`;\n            });\n        }\n        return resultHTML;\n    }\n    // attempts to get things without cache\n    populateTooltips() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.wordReadingEle === null) {\n                this.logger.debug('Cannot run kanji hover due to null wordReadingEle');\n                return;\n            }\n            this.logger.debug(`Running on ${getCardKey()}...`);\n            // gets popup for each kanji character and cache\n            let kanjiToHoverHTML = yield this.getKanjisToHover(this.noteInfo);\n            this.displayResultFromKanjiToHoverHTML(kanjiToHoverHTML, this.wordReadingEle);\n            this.logger.debug(`Finished running on ${getCardKey()}...`);\n        });\n    }\n    /**\n     * - Caches all results\n     * - Displays results, whether it's via cache or not\n     */\n    displayResultFromKanjiToHoverHTML(kanjiToHoverHTML, wordReadingEle) {\n        var _a, _b;\n        (_a = this.persist) === null || _a === void 0 ? void 0 : _a.set(this.cardHoverHTMLCacheKey, JSON.stringify(kanjiToHoverHTML));\n        // this technically can be optimized depending on mobile or not, but imo\n        // it's safer to save this on both pc/mobile display\n        let resultHTML = this.getWordReadingResult(kanjiToHoverHTML, this.noteInfo.WordReadingRubyHTML);\n        (_b = this.persist) === null || _b === void 0 ? void 0 : _b.set(this.cardWordReadingResultKey, resultHTML); // caches final result per card\n        // mobilePopup is not null <=> bp < combinePicture <=> should display mobile\n        if (this.mobilePopup !== null) {\n            this.mobilePopup.setupKanjiHover(kanjiToHoverHTML, wordReadingEle, this.noteInfo.WordReadingRubyHTML);\n        }\n        else {\n            // display normally\n            wordReadingEle.innerHTML = resultHTML;\n            this.tooltips.addBrowseOnClick(wordReadingEle);\n        }\n    }\n    displayCachedResult(persist, wordReadingEle) {\n        this.logger.debug('Using cached card');\n        // mobilePopup is not null <=> bp < combinePicture <=> should display mobile\n        if (this.mobilePopup !== null) {\n            const kanjiToHoverHTML = JSON.parse(persist.get(this.cardHoverHTMLCacheKey));\n            this.mobilePopup.setupKanjiHover(kanjiToHoverHTML, wordReadingEle, this.noteInfo.WordReadingRubyHTML);\n            // TODO addBrowseOnClick on mobile?\n        }\n        else {\n            // display normally\n            const resultHTML = persist.get(this.cardWordReadingResultKey);\n            wordReadingEle.innerHTML = resultHTML;\n            this.tooltips.addBrowseOnClick(wordReadingEle);\n        }\n    }\n    main() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            // checks for all caches first\n            if (this.useCache && this.wordReadingEle !== null) {\n                // checks for standard persist first, to allow refreshing to stick for the session\n                if (this.persist !== null && this.persist.has(this.cardWordReadingResultKey)) {\n                    this.displayCachedResult(this.persist, this.wordReadingEle);\n                    return;\n                }\n                // then checks card cache\n                if ((_a = this.cardCache) === null || _a === void 0 ? void 0 : _a.shouldUse()) {\n                    // checks for CardCache field first\n                    const kanjiHoverData = this.cardCache.getKanjiHoverData();\n                    if (kanjiHoverData) {\n                        // format said data into kanjiToHoverHTML\n                        const kanjiToHoverHTML = {};\n                        for (const child of kanjiHoverData.children) {\n                            const kanji = child.getAttribute('data-cache-kanji');\n                            const hoverHTML = child.innerHTML;\n                            if (kanji !== null) {\n                                kanjiToHoverHTML[kanji] = hoverHTML;\n                            }\n                        }\n                        this.logger.debug('Using CardCache');\n                        this.displayResultFromKanjiToHoverHTML(kanjiToHoverHTML, this.wordReadingEle);\n                        return;\n                    }\n                }\n            }\n            // only now do we need anki-connect, if no cache was found\n            if (!this.getOption('enableAnkiconnectFeatures')) {\n                return;\n            }\n            // only activates on hover (there's no reason currently to have it activate any other way)\n            if (this.wordReadingEle !== null) {\n                this.wordReadingEle.onmouseover = () => {\n                    // replaces the function with a null function to avoid calling this function\n                    if (this.wordReadingEle !== null) {\n                        this.wordReadingEle.onmouseover = function () { };\n                    }\n                    this.populateTooltips();\n                };\n            }\n        });\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { escapeQueryStr, invoke } from './ankiConnectUtils';\nimport { getFieldValue } from './fields';\nimport { LOGGER } from './logger';\nimport { getOption } from './options';\nimport { selectPersistAny } from './spersist';\nimport { isAndroid } from './utils';\nconst cardIsNewKey = 'isNew.cardIsNewKey';\nfunction cardIsNewAndroid() {\n    // TODO: Make this work?\n    //const jsApi = {\"version\" : \"0.0.1\",\n    //  \"Aquafina-water-bottle\" : \"17107540+Aquafina-water-bottle@users.noreply.github.com\"};\n    //if (typeof globalThis.AnkiDroidJS === \"undefined\" || globalThis.AnkiDroidJS.init === \"undefined\") {\n    //  LOGGER.warn(\"android undefined\");\n    //  return false;\n    //}\n    //const apiStatus = globalThis.AnkiDroidJS.init(JSON.stringify(jsApi));\n    //const api = JSON.parse(apiStatus);\n    //if (api['ankiGetCardType']) {\n    //  const cardType = globalThis.AnkiDroidJS.ankiGetCardType();\n    //  LOGGER.warn(\"cardType \" + cardType);\n    //  return (cardType === 0); // 0 means new\n    //}\n    //LOGGER.warn(\"android getcardtype undefined\");\n    //LOGGER.warn(apiStatus);\n    return false;\n}\nexport function cardIsNew(cardSide) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (isAndroid()) {\n            return cardIsNewAndroid();\n        }\n        if (!getOption('enableAnkiconnectFeatures')) {\n            return false; // we don't know without ankiconnect!\n        }\n        const spersist = selectPersistAny();\n        const key = escapeQueryStr(getFieldValue('Key'));\n        const sent = escapeQueryStr(getFieldValue('Sentence'));\n        const cacheKey = `${cardIsNewKey}.${key}.${sent}`;\n        // only attempts to query if:\n        // - not stored in cache yet\n        // - stored in cache, but is front side + new\n        // assumptions:\n        // - the order always goes from front -> back. It is impossible for a card to be new\n        //   at the front but not new on the back, and visa versa.\n        // - If cached, the back side never has to be queried because getting the new status\n        //   is always done at the front side of the card\n        if (spersist === null || spersist === void 0 ? void 0 : spersist.has(cacheKey)) {\n            const cacheVal = spersist.get(cacheKey);\n            if (!cacheVal) {\n                return cacheVal;\n            }\n            if (cardSide === 'back') {\n                return cacheVal;\n            }\n        }\n        LOGGER.debug('Testing for new card...', 2);\n        // TODO generalize / don't hardcode?\n        const noteName = 'JP Mining Note';\n        const cardTypeName = 'Mining Card';\n        const query = `is:new \"Key:${key}\" \"Sentence:${sent}\" \"note:${noteName}\" \"card:${cardTypeName}\"`;\n        const result = yield invoke('findCards', { query: query });\n        const isNew = Array.isArray(result) && result.length > 0;\n        LOGGER.debug(`is new: ${isNew}, query: ${query}, result: ${result}`, 1);\n        spersist === null || spersist === void 0 ? void 0 : spersist.set(cacheKey, isNew ? 'true' : '');\n        //CACHE.get(\"isNewCardCache\", cacheKey, isNew);\n        //this.isNewCardLocalCache = isNew;\n        return isNew;\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { RunnableAsyncModule } from '../module';\nimport { getOption } from '../options';\nimport { filterCards, getTags, getCardKey, getCardSide } from '../utils';\nimport { getFieldValue, cacheFieldValue } from '../fields';\nimport { Tooltips, } from './tooltips';\nimport { selectPersistAny, selectPersistObj } from '../spersist';\nimport { getQueryCache, constructFindCardsAction, invoke, setQueryCache, cardsInfo, cardIDsToCardsInfo, escapeQueryStr, } from '../ankiConnectUtils';\nimport { cardIsNew } from '../isNew';\nconst wordIndicatorCardCacheKey = 'WordIndicators.wordIndicatorCardCacheKey';\nconst wordIndicatorsCardResultCacheKey = 'WordIndicators.wordIndicatorsCardResultCacheKey';\nconst clsMainWord = 'dh-left__similar-words-indicators-main-word';\nexport class WordIndicator {\n    constructor(label, baseIndicatorQuery, wordInds, indicatorEle, infoCircIndicatorEle) {\n        this.label = label;\n        this.baseIndicatorQuery = baseIndicatorQuery;\n        this.wordInds = wordInds;\n        this.indicatorEle = indicatorEle;\n        this.infoCircIndicatorEle = infoCircIndicatorEle;\n        this.cacheKey = `${wordIndicatorCardCacheKey}.${label}.${getCardKey()}`;\n    }\n    getQueryResults() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const baseQuery = this.wordInds.tooltips.getCardBaseQuery(getFieldValue('Key'));\n            // TODO!\n            const queries = {\n                'nonNew.default': '',\n                'new.default': '',\n            };\n            const queryGroup = this.wordInds.tooltips.getQueryBuilderGroup();\n            // qb == query builder\n            for (const [key, qb] of Object.entries(queryGroup)) {\n                qb.addSegment(baseQuery);\n                qb.addSegment('-WordReadingHiragana:');\n                qb.addSegment(this.baseIndicatorQuery);\n                queries[`${key}`] = qb.build();\n            }\n            const queryResults = {\n                'nonNew.default': [-1],\n                'new.default': [-1],\n            };\n            // checks cache\n            if (this.wordInds.useCache) {\n                for (const [queryKey, query] of Object.entries(queries)) {\n                    if (this.wordInds.persistObj !== null) {\n                        const cache = getQueryCache(this.wordInds.persistObj, query);\n                        if (cache !== null) {\n                            queryResults[queryKey] = cache;\n                        }\n                    }\n                }\n            }\n            // gets actions for queries\n            // these two arrays should be the same length, as they map query key <-> query\n            let queriesFlattened = [];\n            let categoriesFlattened = [];\n            let actions = [];\n            // any remaining results == [-1] will actually be queried\n            for (const [categoryID, queryResult] of Object.entries(queryResults)) {\n                if (queryResult.length === 1 && queryResult[0] === -1) {\n                    const query = queries[categoryID];\n                    queriesFlattened.push(query);\n                    categoriesFlattened.push(categoryID);\n                    const action = constructFindCardsAction(query);\n                    actions.push(action);\n                }\n            }\n            const multiResults = (yield invoke('multi', { actions: actions }));\n            for (let i = 0; i < multiResults.length; i++) {\n                const query = queriesFlattened[i];\n                const categoryID = categoriesFlattened[i];\n                const queryResult = multiResults[i].result;\n                if (this.wordInds.persistObj !== null) {\n                    setQueryCache(this.wordInds.persistObj, query, queryResult);\n                }\n                queryResults[categoryID] = queryResult;\n            }\n            return queryResults;\n        });\n    }\n    sortByTimeCreated(queryResults) {\n        const maxNonNewOldest = this.wordInds.tooltips.getOption('tooltips.categoryMax.nonNew.oldest');\n        const maxNonNewNewest = this.wordInds.tooltips.getOption('tooltips.categoryMax.nonNew.newest');\n        const maxNewOldest = this.wordInds.tooltips.getOption('tooltips.categoryMax.new.oldest');\n        const maxNewNewest = this.wordInds.tooltips.getOption('tooltips.categoryMax.new.newest');\n        const [nonNewResultIds, newResultIds] = filterCards([queryResults['nonNew.default'], []], [queryResults['new.default'], []], maxNonNewOldest, maxNonNewNewest, maxNewOldest, maxNewNewest);\n        const filteredCardIDs = {\n            nonNew: nonNewResultIds[0],\n            new: newResultIds[0],\n        };\n        return filteredCardIDs;\n    }\n    getCardInfo(filteredCardIDs) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const cardIDs = new Set();\n            // there's no set union?\n            // there's also no easy way to add all elements from an iterable to a set???\n            // therefore, you just go to for-loop through all the values???????\n            const ids = [...filteredCardIDs['nonNew'], ...filteredCardIDs['new']];\n            for (const id of ids) {\n                cardIDs.add(id);\n            }\n            // convert set to array\n            const cardIDsArray = [...cardIDs];\n            const cardsInfoResult = yield cardsInfo(cardIDsArray, this.wordInds.useCache);\n            const result = {\n                nonNew: cardIDsToCardsInfo(filteredCardIDs['nonNew'], cardsInfoResult),\n                new: cardIDsToCardsInfo(filteredCardIDs['new'], cardsInfoResult),\n            };\n            return result;\n        });\n    }\n    // adds this to the tooltip because the tooltip covers up the current word\n    addCurrentCardToTooltip(tooltipBuilder) {\n        // NOTE: These are all cached in the WordIndicators constructor by default\n        const currentCardInfo = {\n            AJTWordPitch: getFieldValue('AJTWordPitch'),\n            PAOverride: getFieldValue('PAOverride'),\n            PAOverrideText: getFieldValue('PAOverrideText'),\n            PAPositions: getFieldValue('PAPositions'),\n            Sentence: getFieldValue('Sentence'),\n            Word: getFieldValue('Word'),\n            WordReading: getFieldValue('WordReading'),\n            WordReadingHiragana: getFieldValue('WordReadingHiragana'),\n            YomichanWordTags: getFieldValue('YomichanWordTags'),\n            tags: getTags(),\n        };\n        const currentCardBuilder = this.wordInds.tooltips.newCardBuilder();\n        currentCardBuilder.createWordDiv(currentCardInfo);\n        const mainCardDiv = currentCardBuilder.build();\n        mainCardDiv.classList.add(clsMainWord);\n        tooltipBuilder.addCardDiv(mainCardDiv);\n    }\n    addCardsInfoToTooltip(cardsInfo, tooltipBuilder, isNew) {\n        for (const cardInfo of cardsInfo) {\n            const cardBuilder = this.wordInds.tooltips.newCardBuilder();\n            const noteInfoTTB = this.wordInds.tooltips.cardInfoToNoteInfoTooltipBuilder(cardInfo);\n            cardBuilder.createWordDiv(noteInfoTTB, null, cardInfo.cardId);\n            cardBuilder.createSentDiv(noteInfoTTB);\n            if (isNew) {\n                cardBuilder.setNew();\n            }\n            tooltipBuilder.addCardDiv(cardBuilder.build());\n        }\n    }\n    buildTooltip(filteredCardsInfo) {\n        const tooltipBuilder = this.wordInds.tooltips.newBuilder();\n        this.addCurrentCardToTooltip(tooltipBuilder);\n        this.addCardsInfoToTooltip(filteredCardsInfo['nonNew'], tooltipBuilder, false);\n        this.addCardsInfoToTooltip(filteredCardsInfo['new'], tooltipBuilder, true);\n        return tooltipBuilder.buildTooltipOnly().innerHTML;\n    }\n    // this is only expected to be called at the backside of the card\n    display() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            // doesn't use isCached() function, because useCache is false on refresh\n            if (!((_a = this.wordInds.persist) === null || _a === void 0 ? void 0 : _a.has(this.cacheKey))) {\n                this.wordInds.logger.debug(`${this.label} -> nothing cached?`);\n                return;\n            }\n            const tooltipHTML = (_b = this.wordInds.persist) === null || _b === void 0 ? void 0 : _b.get(this.cacheKey);\n            // tooltipHTML can actually be an empty string, to store the fact that nothing has to be shown\n            if (tooltipHTML.length === 0) {\n                this.wordInds.logger.debug(`${this.label} -> empty`);\n                return;\n            }\n            this.wordInds.logger.debug(`${this.label} -> displaying...`);\n            // mobilePopup is not null <=> bp < combinePicture <=> should display mobile\n            if (this.wordInds.mobilePopup !== null) {\n                this.wordInds.mobilePopup.setupWordIndicator(this, this.wordInds.infoCircIndicatorsGroupEle, tooltipHTML);\n            }\n            else {\n                // elements are gotten in the constructor of WordIndicators, so these cannot\n                // accidentally grab the wrong element\n                const indicatorEle = this.indicatorEle;\n                const dhLeftEle = this.wordInds.dhLeftEle;\n                if (indicatorEle === null || dhLeftEle === null) {\n                    this.wordInds.logger.warn(`Cannot display indicator: ${this.label}`);\n                    return;\n                }\n                // TODO document structure of element?\n                indicatorEle.children[1].children[0].innerHTML = tooltipHTML;\n                indicatorEle.classList.toggle('dh-left__similar-words-indicator--visible', true);\n                if (yield cardIsNew('back')) {\n                    indicatorEle.classList.toggle('dh-left__similar-words-indicator--new', true);\n                }\n                this.wordInds.tooltips.addBrowseOnClick(indicatorEle);\n            }\n        });\n    }\n    isCached() {\n        var _a;\n        return this.wordInds.useCache && ((_a = this.wordInds.persist) === null || _a === void 0 ? void 0 : _a.has(this.cacheKey));\n    }\n    getTooltipHTML() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            // resets on refresh\n            const indicatorEle = document.getElementById(this.label);\n            indicatorEle === null || indicatorEle === void 0 ? void 0 : indicatorEle.classList.toggle('dh-left__similar-words-indicator--visible', false);\n            // gets cache if exists\n            // this section is before the mutex in case this was called\n            // on the back side of the card while the front side is still running\n            if (this.isCached()) {\n                this.wordInds.logger.debug('Has cached indicator');\n                return (_b = (_a = this.wordInds.persist) === null || _a === void 0 ? void 0 : _a.get(this.cacheKey)) !== null && _b !== void 0 ? _b : '';\n            }\n            this.wordInds.logger.debug(`Running ${this.label}`);\n            const queryResults = yield this.getQueryResults();\n            // checks if there are any results in the first place\n            // doesn't work properly with hidden entries! can show an empty indicator\n            // I find the normal for-loop version easier to read than the reduce() w/ accumulate method\n            //let sum = 0;\n            //for (const item of Object.values(queryResults)) {\n            //  sum += item.length;\n            //}\n            // only checks non-hidden entries\n            // TODO how to deal with hidden entries?\n            const sum = queryResults['new.default'].length + queryResults['nonNew.default'].length;\n            if (sum === 0) {\n                // this part is already cached because queries are cached!\n                // i.e. there's no need to write to the cache here\n                // caches empty html\n                if (this.wordInds.persist !== null) {\n                    this.wordInds.persist.set(this.cacheKey, '');\n                }\n                this.wordInds.logger.debug(`Finished running ${this.label}: nothing found`);\n                return '';\n            }\n            let filteredCardIds = this.sortByTimeCreated(queryResults);\n            const filteredCardInfo = yield this.getCardInfo(filteredCardIds);\n            const tooltipHTML = this.buildTooltip(filteredCardInfo);\n            return tooltipHTML;\n        });\n    }\n}\nexport class WordIndicators extends RunnableAsyncModule {\n    constructor(cardCache, mobilePopup) {\n        super('wordIndicators');\n        this.persist = selectPersistAny();\n        this.persistObj = selectPersistObj();\n        // elements gotten here for safety from async calls\n        this.indicatorEleSameWord = document.getElementById('same_word_indicator');\n        this.indicatorEleSameKanji = document.getElementById('same_kanji_indicator');\n        this.indicatorEleSameReading = document.getElementById('same_reading_indicator');\n        this.infoCircIndicatorsGroupEle = document.getElementById('ic_similar_words_indicators');\n        this.infoCircIndicatorEleSameWord = document.getElementById('ic_same_word_indicator');\n        this.infoCircIndicatorEleSameKanji = document.getElementById('ic_same_kanji_indicator');\n        this.infoCircIndicatorEleSameReading = document.getElementById('ic_same_reading_indicator');\n        this.dhLeftEle = document.getElementById('dh_left');\n        // caches here for safety from async calls\n        this.cardSide = getCardSide();\n        this.tooltips = new Tooltips();\n        this.tooltips.overrideOptions(getOption('wordIndicators.overrideOptions.tooltips'));\n        this.mobilePopup = mobilePopup;\n        this.cardCache = cardCache;\n        // ran synchronously, so fields will 100% be cached\n        const cacheFields = [\n            'Key',\n            'AJTWordPitch',\n            'PAOverride',\n            'PAOverrideText',\n            'PAPositions',\n            'Sentence',\n            'Word',\n            'WordReading',\n            'WordReadingHiragana',\n            'YomichanWordTags',\n        ];\n        for (const f of cacheFields) {\n            cacheFieldValue(f);\n        }\n    }\n    getIndicators() {\n        // ASSUMPTION: if safe, then should be backside of card -> this.indicatorEle* and this.dhLeftEle\n        // are all non-null!\n        const word = escapeQueryStr(getFieldValue('Word'));\n        const wordReadingHiragana = escapeQueryStr(getFieldValue('WordReadingHiragana'));\n        const baseWordQuery = `\"Word:${word}\"  \"WordReadingHiragana:${wordReadingHiragana}\"`;\n        const baseKanjiQuery = `\"Word:${word}\" -\"WordReadingHiragana:${wordReadingHiragana}\"`;\n        const baseReadingQuery = `-\"Word:${word}\"  \"WordReadingHiragana:${wordReadingHiragana}\"`;\n        return [\n            new WordIndicator('same_word_indicator', baseWordQuery, this, this.indicatorEleSameWord, this.infoCircIndicatorEleSameWord),\n            new WordIndicator('same_kanji_indicator', baseKanjiQuery, this, this.indicatorEleSameKanji, this.infoCircIndicatorEleSameKanji),\n            new WordIndicator('same_reading_indicator', baseReadingQuery, this, this.indicatorEleSameReading, this.infoCircIndicatorEleSameReading),\n        ];\n    }\n    displayIndicatorsFromCache(persistObj, indicators, cardResultsCacheKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.cardSide === 'back') {\n                if (persistObj !== null && persistObj.has(cardResultsCacheKey)) {\n                    this.logger.debug('Displaying results from cache');\n                    yield persistObj.get(cardResultsCacheKey); // so it's no longer a promise\n                    for (const indicator of indicators) {\n                        indicator.display();\n                    }\n                }\n                else {\n                    this.logger.warn('cannot persist or results are not cached');\n                }\n            }\n        });\n    }\n    main() {\n        var _a, _b, _c;\n        return __awaiter(this, void 0, void 0, function* () {\n            // not a constant in the global scope due to cache.ts erroring on import step\n            // getCardKey is guaranteed to be cached by its usage in the constructor\n            const cardResultsCacheKey = `${wordIndicatorsCardResultCacheKey}.${getCardKey()}`;\n            const persistObj = selectPersistObj();\n            if (this.useCache && this.persist !== null) {\n                // standard cache\n                if (persistObj === null || persistObj === void 0 ? void 0 : persistObj.has(cardResultsCacheKey)) {\n                    const indicators = this.getIndicators();\n                    yield this.displayIndicatorsFromCache(persistObj, indicators, cardResultsCacheKey);\n                    return;\n                }\n                // checks for CardCache field\n                // if it exists, the calculation at the front side will also be skipped here\n                if ((_a = this.cardCache) === null || _a === void 0 ? void 0 : _a.shouldUse()) {\n                    const wordIndsData = this.cardCache.getWordIndsData();\n                    if (wordIndsData) {\n                        this.logger.debug('Using CardCache');\n                        const indicators = this.getIndicators();\n                        for (const indicator of indicators) {\n                            const tooltipHTML = (_c = (_b = wordIndsData.querySelector(`[data-cache-label=\"${indicator.label}\"]`)) === null || _b === void 0 ? void 0 : _b.innerHTML) !== null && _c !== void 0 ? _c : '';\n                            if (tooltipHTML !== null && this.cardSide === 'back') {\n                                this.persist.set(indicator.cacheKey, tooltipHTML);\n                                indicator.display();\n                            }\n                        }\n                        return;\n                    }\n                }\n            }\n            const getResultFront = this.getOption('wordIndicators.getResultsFront');\n            if (!getResultFront && this.cardSide === 'front') {\n                return;\n            }\n            // starts to properly calculate the results here, AKA uses anki-connect\n            if (!this.getOption('enableAnkiconnectFeatures')) {\n                return;\n            }\n            // if getResultFront, this code will always fire regardless of side\n            if (getResultFront || (!getResultFront && this.cardSide === 'back')) {\n                const indicators = this.getIndicators();\n                if (persistObj === null) {\n                    // abort because this will probably be too expensive...\n                    this.logger.warn('cannot persist, will not get results...');\n                    return;\n                }\n                if (this.useCache && persistObj.has(cardResultsCacheKey)) {\n                    this.logger.debug('no reason to get results: already queued');\n                }\n                else {\n                    // global variable to store whether the indicators have gotten the results or not\n                    let getResults = () => __awaiter(this, void 0, void 0, function* () {\n                        // these should run very quickly if something is cached (as it immediately returns)\n                        for (const indicator of indicators) {\n                            // ASSUMPTION: this actually awaits for the result!\n                            const tooltipHTML = yield indicator.getTooltipHTML();\n                            // caches\n                            if (this.persist !== null) {\n                                this.persist.set(indicator.cacheKey, tooltipHTML);\n                                this.logger.debug(`${indicator.label}: cached result of length ${tooltipHTML.length}`);\n                            }\n                        }\n                        return true;\n                    });\n                    persistObj.set(cardResultsCacheKey, getResults());\n                }\n                yield this.displayIndicatorsFromCache(persistObj, indicators, cardResultsCacheKey);\n            }\n        });\n    }\n}\n","import { translatorStrs } from '../consts';\nimport { RunnableModule } from '../module';\nimport { getOption } from '../options';\nimport { fieldsAllEmpty, fieldsAnyFilled } from '../fields';\nexport class FreqUtils extends RunnableModule {\n    constructor() {\n        super('freqUtils');\n        this.freqDisplay = document.getElementById('frequencies_display');\n        this.freqOverflow = document.getElementById('frequencies_overflow');\n        this.freqOverflowText = document.getElementById('frequencies_overflow_tooltip');\n    }\n    summary() {\n        // by default, the HTML shows the summary\n        // this function only serves to set it to unknown if it's a default value\n        if (this.freqDisplay === null) {\n            return;\n        }\n        const ele = this.freqDisplay.querySelector(`.frequencies__group[data-details=\"summary\"] > .frequencies__number > .frequencies__number-inner`);\n        if (ele === null) {\n            return;\n        }\n        const defaultValues = getOption('freqUtils.summary.defaultValues');\n        if (defaultValues.includes(ele.innerHTML)) {\n            ele.innerHTML = `<span data-is-unknown=\"true\">${translatorStrs['unknown-frequency']}<span class=\"unknown-freq-number\">${ele.innerHTML}</span></span>`;\n        }\n    }\n    list() {\n        if (this.freqDisplay === null ||\n            this.freqOverflow === null ||\n            this.freqOverflowText === null) {\n            return;\n        }\n        const maxFreqCount = getOption('freqUtils.list.max');\n        const overflowCount = getOption('freqUtils.list.overflow');\n        const collapseFreqCount = maxFreqCount + overflowCount;\n        const showSummaryMode = getOption('freqUtils.list.showSummaryMode');\n        if (showSummaryMode === 'never' ||\n            (showSummaryMode === 'if-frequencies-empty' &&\n                this.freqOverflowText.children.length !== 0)) {\n            // only thing inside should be the summary stuff\n            this.freqDisplay.innerHTML = '';\n        }\n        if (this.freqOverflowText.children.length <= collapseFreqCount ||\n            maxFreqCount === -1) {\n            // moves all from overflow -> frequencies\n            // this if statement is required in order for the overflowCount variable to work!\n            for (let i = this.freqOverflowText.children.length - 1; i >= 0; i--) {\n                let child = this.freqOverflowText.children[i];\n                this.freqDisplay.prepend(child);\n            }\n        }\n        else {\n            // only moves a limited amount of frequencies over\n            let child = this.freqOverflowText.firstElementChild;\n            while (child !== null && this.freqDisplay.children.length < maxFreqCount) {\n                this.freqDisplay.prepend(child);\n                child = this.freqOverflowText.firstElementChild;\n            }\n        }\n        if (this.freqOverflowText.children.length === 0) {\n            this.freqOverflow.classList.toggle('hidden', true);\n        }\n    }\n    main() {\n        const displayMode = getOption('freqUtils.displayMode');\n        if (displayMode === 'list' || displayMode === 'list-all') {\n            // list-all is deprecated\n            this.list();\n        }\n        else if (fieldsAllEmpty('FrequencySort') &&\n            fieldsAnyFilled('FrequenciesStylized')) {\n            this.list(); // this should ideally never happen\n        }\n        else {\n            this.summary();\n        }\n    }\n}\n","import { RunnableModule } from '../module';\nimport { isAndroid, isMobile } from '../utils';\nimport { fieldsAnyFilled } from '../fields';\nexport class MobileUtils extends RunnableModule {\n    constructor() {\n        super('mobileUtils');\n    }\n    main() {\n        var _a;\n        if (!isMobile()) {\n            return;\n        }\n        // removes the hover effect for mobile displays only\n        if (fieldsAnyFilled('IsClickCard')) {\n            (_a = document\n                .getElementById('display')) === null || _a === void 0 ? void 0 : _a.classList.toggle('expression__hybrid--click-hover-effect', false);\n        }\n        if (isAndroid()) {\n            const textBenderDef = document.querySelector(`.glossary__external-links a[data-details=\"yomichan-textbender-definition\"]`);\n            if (textBenderDef) {\n                // grabs all bolded text in the definition, if it exists\n                let boldText = '';\n                for (const boldTextEle of document.querySelectorAll(`#primary_definition_raw_text b`)) {\n                    boldText += boldTextEle.textContent;\n                }\n                if (boldText.length > 0) {\n                    // bold text was actually found\n                    textBenderDef.href = `textbender://x?x=${boldText}`;\n                }\n            }\n        }\n    }\n}\n","/**\n * controls the display of the mobile popup (bottom half of the screen)\n */\nimport { Module } from './module';\nexport class MobilePopup extends Module {\n    constructor() {\n        super(...arguments);\n        this.ele = document.getElementById('mobile_popup');\n        this.textEle = document.getElementById('mobile_popup_text');\n        //private readonly titleEle = document.getElementById('mobile_popup_title') as HTMLElement | null;\n        //private readonly titleTextEle = document.getElementById('mobile_popup_title_text') as HTMLElement | null;\n        this.titleCloseEle = document.getElementById('mobile_popup_title_close');\n        this.wrapperEle = document.getElementById('mobile_popup_wrapper');\n        this.mainEle = document.querySelector('.card-main');\n        this.wordIndsGroupEle = null;\n        this.kanjiEles = null;\n    }\n    // gets the actual tooltip contents, since the current output is\n    getKanjiHoverTooltip(hoverHTML) {\n        // TODO cache?\n        // NOTE: this is highly dependent on the output of the kanji hover popup!\n        var _a;\n        // temporary element to do html parsing on\n        const temp = document.createElement('span');\n        temp.innerHTML = hoverHTML;\n        const contents = temp.querySelector('.hover-tooltip-wrapper > .hover-tooltip');\n        return (_a = contents === null || contents === void 0 ? void 0 : contents.innerHTML) !== null && _a !== void 0 ? _a : '';\n    }\n    resetSelectionIndicators() {\n        var _a;\n        const eles = (_a = this.wordIndsGroupEle) === null || _a === void 0 ? void 0 : _a.querySelectorAll('.card-description__word-indicator');\n        if (eles !== undefined) {\n            for (const ele of eles) {\n                // remove any highlight, if exists\n                ele.classList.toggle('card-description__word-indicator--selected', false);\n            }\n        }\n        if (this.kanjiEles !== null) {\n            for (const ele of this.kanjiEles) {\n                ele.classList.toggle('dh-left__reading--kanji-selected', false);\n            }\n        }\n    }\n    adjustCardHeight(mainEle, popupEle, wrapperEle) {\n        // adjusts the card height so the user can scroll up to the top of the popup window\n        // ASSUMPTION: this function is ran AFTER the text is set\n        // forces a reflow, but this is not ran in card initialization, so this is a safe performance hit\n        const wrapperHeight = wrapperEle.offsetHeight;\n        const popupHeight = popupEle.offsetHeight;\n        mainEle.style.marginBottom = `calc(${wrapperHeight / 2 + popupHeight / 2}px + 2vh)`; // 2vh is for any additional padding\n    }\n    resetCardHeight(mainEle) {\n        mainEle.style.removeProperty('margin-bottom');\n    }\n    setupWordIndicator(ind, groupEle, tooltipHTML) {\n        // ASSUMPTION: this function is only called if tooltipHTML has actual content in it (len > 0)\n        this.wordIndsGroupEle = groupEle;\n        const indEle = ind.infoCircIndicatorEle; // shorthand\n        if (indEle === null || groupEle === null) {\n            this.logger.warn(`Cannot display indicator: ${ind.label}`);\n            return;\n        }\n        indEle.classList.toggle('hidden', false);\n        indEle.onclick = () => {\n            var _a;\n            this.resetSelectionIndicators();\n            if (this.ele === null ||\n                this.wrapperEle === null ||\n                this.mainEle === null ||\n                this.textEle === null) {\n                return;\n            }\n            const previousIndLabel = (_a = this.ele\n                .querySelector('[data-word-indicator-search]')) === null || _a === void 0 ? void 0 : _a.getAttribute('data-word-indicator-search');\n            const baseEle = document.createElement('div');\n            const label = ind.label;\n            baseEle.setAttribute('data-word-indicator-search', label);\n            if (this.wrapperEle.classList.contains('hidden') ||\n                (previousIndLabel !== null && previousIndLabel !== label)) {\n                // hidden -> shown\n                baseEle.innerHTML = tooltipHTML;\n                this.wrapperEle.classList.toggle('hidden', false);\n                // show tooltip\n                this.textEle.innerHTML = '';\n                this.textEle.appendChild(baseEle);\n                this.adjustCardHeight(this.mainEle, this.ele, this.wrapperEle);\n                // visually select\n                indEle.classList.toggle('card-description__word-indicator--selected', true);\n            }\n            else {\n                // shown -> hidden\n                this.wrapperEle.classList.toggle('hidden', true);\n                this.resetCardHeight(this.mainEle);\n            }\n        };\n    }\n    setupKanjiHover(kanjiToHoverHTML, wordReadingEle, wordReadingRubyHTML) {\n        if (Object.keys(kanjiToHoverHTML).length > 0) {\n            const re = new RegExp(Object.keys(kanjiToHoverHTML).join('|'), 'gi');\n            const resultHTML = wordReadingRubyHTML.replace(re, function (matched) {\n                return `<span data-kanji-hover=\"${matched}\">${matched}</span>`;\n            });\n            wordReadingEle.innerHTML = resultHTML;\n        }\n        // onclick listeners to show popup\n        const kanjiEles = wordReadingEle.querySelectorAll('span[data-kanji-hover]');\n        this.kanjiEles = Array.from(kanjiEles);\n        for (const kanjiEle of kanjiEles) {\n            kanjiEle.onclick = () => {\n                var _a;\n                this.resetSelectionIndicators();\n                if (this.ele === null ||\n                    this.wrapperEle === null ||\n                    this.mainEle === null ||\n                    this.textEle === null) {\n                    this.logger.warn(`Cannot display kanji for kanji hover`);\n                    return;\n                }\n                const previousKanji = (_a = this.ele\n                    .querySelector('[data-kanji-search]')) === null || _a === void 0 ? void 0 : _a.getAttribute('data-kanji-search');\n                const baseEle = document.createElement('div');\n                const kanji = kanjiEle.getAttribute('data-kanji-hover');\n                baseEle.setAttribute('data-kanji-search', kanji !== null && kanji !== void 0 ? kanji : '');\n                // TODO generalize this, i.e. X button, etc.\n                if (this.wrapperEle.classList.contains('hidden') ||\n                    (previousKanji !== null && previousKanji !== kanji)) {\n                    // hidden -> shown\n                    if (kanji !== null && kanji in kanjiToHoverHTML) {\n                        baseEle.innerHTML = this.getKanjiHoverTooltip(kanjiToHoverHTML[kanji]);\n                    }\n                    this.wrapperEle.classList.toggle('hidden', false);\n                    // shows text\n                    this.textEle.innerHTML = '';\n                    this.textEle.appendChild(baseEle);\n                    this.adjustCardHeight(this.mainEle, this.ele, this.wrapperEle);\n                    // visually select\n                    kanjiEle.classList.toggle('dh-left__reading--kanji-selected', true);\n                }\n                else {\n                    // shown -> hidden\n                    this.wrapperEle.classList.toggle('hidden', true);\n                    this.resetCardHeight(this.mainEle);\n                }\n            };\n        }\n        if (this.titleCloseEle !== null) {\n            this.titleCloseEle.onclick = () => {\n                var _a;\n                // shown -> hidden\n                this.resetSelectionIndicators();\n                (_a = this.wrapperEle) === null || _a === void 0 ? void 0 : _a.classList.toggle('hidden', true);\n                if (this.mainEle !== null) {\n                    this.resetCardHeight(this.mainEle);\n                }\n            };\n        }\n    }\n}\n","import { invoke } from '../ankiConnectUtils';\nimport { compileOpts } from '../consts';\nimport { RunnableModule } from '../module';\nimport { getOption } from '../options';\nimport { getViewportWidth } from '../reflow';\nimport { getCardSide, isMobile, popupMenuMessage, getTags } from '../utils';\nconst infoCircFrozen = 'info-circle--frozen';\nconst infoCircTogglable = 'info-circle-svg-wrapper--togglable';\nconst infoCircWrapperTogglable = 'info-circle-svg-wrapper--hoverable';\nconst infoCircHoverColor = 'info-circle--hover-color';\nconst infoCircZoomOut = 'info-circle-text-wrapper--zoom-out';\nexport class InfoCircleUtils extends RunnableModule {\n    constructor() {\n        super('infoCircleUtils');\n        this.infoCirc = document.getElementById('info_circle');\n        this.infoCircWrapper = document.getElementById('info_circle_wrapper');\n        this.infoCircTextWrapper = document.getElementById('info_circle_text_wrapper');\n        this.infoCircTags = document.getElementById('info_circle_text_tags');\n        this.infoCircTagsText = document.getElementById('info_circle_text_tags_text');\n        this.enableAnkiconnectFeatures = getOption('enableAnkiconnectFeatures');\n    }\n    partitionTags() {\n        // partitions tags into two different groups: data tags and media tags\n        // data tags are greyed out and shown at the very end, where media tags are shown\n        // at the beginning\n        const dataTags = [];\n        const mediaTags = [];\n        const possibleDataTags = new Set(getOption('infoCircleUtils.dataTags'));\n        for (const tag of getTags()) {\n            if (possibleDataTags.has(tag)) {\n                dataTags.push(tag);\n            }\n            else {\n                mediaTags.push(tag);\n            }\n        }\n        return [dataTags, mediaTags];\n    }\n    createTagEle(tag, grey) {\n        const tagEle = document.createElement('span');\n        tagEle.innerText = tag;\n        if (this.enableAnkiconnectFeatures) {\n            tagEle.onclick = () => {\n                invoke('guiBrowse', { query: `tag:${tag}` });\n            };\n        }\n        tagEle.setAttribute('data-tag-value', tag);\n        tagEle.classList.add('info-circle-tag');\n        if (grey) {\n            tagEle.classList.add('info-circle-tag--grey');\n        }\n        return tagEle;\n    }\n    // clicks on the info circle to freeze the popup (good for debugging and all)\n    setToggleClick() {\n        var _a;\n        if (this.infoCircWrapper === null ||\n            this.infoCirc === null ||\n            this.infoCircTextWrapper === null) {\n            return;\n        }\n        const _isMobile = isMobile();\n        const vwMobile = getViewportWidth() < compileOpts['breakpoints.width.combinePicture'];\n        // functions to toggle the info circle through clicks\n        const freeze = () => {\n            var _a;\n            (_a = this.infoCirc) === null || _a === void 0 ? void 0 : _a.classList.add(infoCircFrozen);\n            if (!vwMobile) {\n                popupMenuMessage(`Info circle tooltip locked.`, true);\n            }\n        };\n        const unfreeze = () => {\n            var _a;\n            (_a = this.infoCirc) === null || _a === void 0 ? void 0 : _a.classList.remove(infoCircFrozen);\n            if (!vwMobile) {\n                popupMenuMessage(`Info circle tooltip unlocked.`, true);\n            }\n        };\n        if (vwMobile) {\n            // disables when clicking on background\n            this.infoCircTextWrapper.onclick = (e) => {\n                var _a;\n                if (e.target === e.currentTarget) {\n                    (_a = this.infoCirc) === null || _a === void 0 ? void 0 : _a.classList.add(infoCircZoomOut);\n                    setTimeout(() => {\n                        var _a;\n                        (_a = this.infoCirc) === null || _a === void 0 ? void 0 : _a.classList.remove(infoCircZoomOut);\n                        unfreeze();\n                    }, 200);\n                }\n            };\n        }\n        if (!_isMobile) {\n            // touch display\n            (_a = this.infoCircWrapper) === null || _a === void 0 ? void 0 : _a.classList.toggle(infoCircTogglable, true);\n        }\n        // can toggle on pc and mobile\n        this.infoCircWrapper.onclick = () => {\n            if (this.infoCircWrapper === null || this.infoCirc === null) {\n                return;\n            }\n            if (this.infoCirc.classList.contains(infoCircFrozen)) {\n                unfreeze();\n            }\n            else {\n                freeze();\n            }\n        };\n    }\n    main() {\n        //const isHoverable = getOption('infoCircleUtils.isHoverable');\n        //const togglableLockEnabled = getOption('infoCircleUtils.togglableLock.enabled');\n        var _a, _b, _c;\n        const [dataTags, mediaTags] = this.partitionTags();\n        if (this.infoCircTags !== null && this.infoCircTagsText !== null) {\n            const showTagsMode = getOption('infoCircleUtils.showTagsMode');\n            if (showTagsMode === 'always' ||\n                (showTagsMode === 'back' && getCardSide() === 'back')) {\n                for (const tag of mediaTags) {\n                    const tagEle = this.createTagEle(tag, false);\n                    this.infoCircTagsText.appendChild(tagEle);\n                }\n                for (const tag of dataTags) {\n                    const tagEle = this.createTagEle(tag, true);\n                    this.infoCircTagsText.appendChild(tagEle);\n                }\n                this.infoCircTags.classList.toggle('hidden', false);\n            }\n        }\n        // not ran in the above loop to avoid coloring the info circle on the front side\n        if (getCardSide() === 'back' && getTags().includes('leech')) {\n            this.logger.leech(false);\n        }\n        this.setToggleClick();\n        if (isMobile()) {\n            // makes the info circle NOT hoverable to display\n            (_a = this.infoCircWrapper) === null || _a === void 0 ? void 0 : _a.classList.toggle(infoCircWrapperTogglable, false);\n            (_b = this.infoCirc) === null || _b === void 0 ? void 0 : _b.classList.toggle(infoCircHoverColor, false);\n        }\n        if (getViewportWidth() < compileOpts['breakpoints.width.combinePicture'] &&\n            getOption('infoCircleUtils.mobileDialog')) {\n            (_c = document\n                .getElementById('jpmn')) === null || _c === void 0 ? void 0 : _c.classList.toggle('js-info-circle-tooltip-use-dialog', true);\n        }\n    }\n}\n","import { RunnableModule } from '../module';\nconst className = 'fix-ruby-positioning';\nexport class FixRubyPositioning extends RunnableModule {\n    constructor() {\n        super('fixRubyPositioning');\n    }\n    addClassToEle(id) {\n        const ele = document.getElementById(id);\n        if (ele !== null) {\n            ele.classList.toggle(className, true);\n        }\n    }\n    main() {\n        this.addClassToEle('def_header');\n        this.addClassToEle('full_sentence');\n        this.addClassToEle('full_sentence_front');\n        const expressions = document.querySelectorAll('.expression');\n        if (expressions !== null) {\n            for (const e of expressions) {\n                e.classList.add(className);\n            }\n        }\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { escapeQueryStr, invoke } from '../ankiConnectUtils';\nimport { getFieldValue } from '../fields';\nimport { RunnableAsyncModule } from '../module';\nimport { getOption } from '../options';\nimport { selectPersistStr } from '../spersist';\nimport { getModelName, getCardTypeName } from '../utils';\nexport class CheckDuplicateKey extends RunnableAsyncModule {\n    constructor() {\n        super('checkDuplicateKey');\n        // cache beforehand\n        this.key = getFieldValue('Key');\n        this.cardTypeName = getCardTypeName();\n        this.noteName = getModelName();\n    }\n    main() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!getOption('enableAnkiconnectFeatures')) {\n                return;\n            }\n            const cacheKey = `checkDuplicateKey.${this.key}`;\n            const persist = selectPersistStr();\n            if (persist !== null && persist.has(cacheKey)) {\n                this.logger.debug('Key is unique (cached result).');\n                return;\n            }\n            // queries to check\n            this.logger.debug('Checking if key is unique...');\n            const keyText = escapeQueryStr(this.key);\n            const queryStr = `\"Key:${keyText}\" \"card:${this.cardTypeName}\" \"note:${this.noteName}\"`;\n            const result = (yield invoke('findCards', { query: queryStr }));\n            if (result.length === 0) {\n                this.logger.warn(`Cannot find own card. If you renamed your note, certain features will be missing. See <a href=\"https://aquafina-water-bottle.github.io/jp-mining-note-prerelease/faq/#warning-cannot-find-own-card\">here</a> for more info`, { isHtml: true });\n            }\n            else if (result.length === 1) {\n                persist === null || persist === void 0 ? void 0 : persist.set(cacheKey, 'true');\n                this.logger.debug('Key is unique.');\n            }\n            else if (result.length === 2) {\n                this.logger.warn('Duplicate key found. Please change the Key field value.');\n            }\n        });\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Module } from '../module';\nimport { getOption } from '../options';\nimport { popupMenuMessage } from '../utils';\nexport class AsyncManager extends Module {\n    constructor() {\n        super('sm:asyncManager');\n        //private modules: AsyncModuleInfo[] = [];\n        this.modules = [];\n    }\n    addFunction(func) {\n        // wraps function with temporary module to run\n        // what am I looking at here\n        const funcModule = {\n            setUseCache: (_) => { },\n            run: () => new Promise((resolve) => {\n                func(), resolve(void 0);\n            }),\n        };\n        this.modules.push(funcModule);\n    }\n    addModule(mod) {\n        this.modules.push(mod);\n    }\n    runModules(refresh = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const mod of this.modules) {\n                // runs them in order, mostly bypassing the default asynchronous behavior\n                mod.setUseCache(!refresh);\n                yield mod.run();\n            }\n            if (refresh) {\n                popupMenuMessage('Card successfully refreshed!');\n            }\n        });\n    }\n    // this function can be ran with the refresh button!\n    // note that runModules() can be run multiple times asynchronously.\n    // Each module has to implement all the necessary safeguards for this.\n    runModulesDelay() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const delay = getOption('asyncManager.initialDelay');\n            if (delay === 0) {\n                this.runModules();\n            }\n            else {\n                // THIS IS A HACK because document.onload cannot be overwritten\n                // so instead, we delay it by some amount of time instead to 'mimic'\n                // the document being loaded before running these.\n                setTimeout(() => {\n                    this.runModules();\n                }, delay);\n            }\n        });\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { cardIsNew } from '../isNew';\nimport { RunnableModule } from '../module';\nimport { checkOptTags, getOption } from '../options';\nimport { getTags } from '../utils';\n// TODO: These names are pretty horrible and don't really describe what they're supposed to do...\n//\n// optionId: the name used in runtime options\n// eleId: the details element, or the blockquote element if primary definition\n// entryId: internal ID used for definitionStorage\n// buttonId: the label element ID\n// inputId: the input element ID\n// checkboxTextId: a hidden div in the primary definition, used to store and show multiple definitions.\nconst ENTRIES = [\n    {\n        optionId: 'primaryDefinition',\n        eleId: 'primary_definition',\n        entryId: 'primary-definition',\n        buttonId: 'folder_tab_button_primary_def',\n        inputId: 'folder_tab_input_primary_def',\n        checkboxTextId: 'folder_tab_text_primary_def', // this doesn't exist!\n    },\n    {\n        optionId: 'secondaryDefinition',\n        eleId: 'secondary_definition_details',\n        entryId: 'secondary-definition',\n        buttonId: 'folder_tab_button_secondary_def',\n        inputId: 'folder_tab_input_secondary_def',\n        checkboxTextId: 'folder_tab_text_secondary_def',\n    },\n    {\n        optionId: 'additionalNotes',\n        eleId: 'additional_notes_details',\n        entryId: 'additional-notes',\n        buttonId: 'folder_tab_button_additional_notes',\n        inputId: 'folder_tab_input_additional_notes',\n        checkboxTextId: 'folder_tab_text_additional_notes',\n    },\n    {\n        optionId: 'extraDefinitions',\n        eleId: 'extra_definitions_details',\n        entryId: 'extra-definitions',\n        buttonId: 'folder_tab_button_extra_def',\n        inputId: 'folder_tab_input_extra_def',\n        checkboxTextId: 'folder_tab_text_extra_def',\n    },\n    {\n        optionId: 'extraInfo',\n        eleId: 'extra_info_details',\n        entryId: 'extra-info',\n        buttonId: 'folder_tab_button_extra_info',\n        inputId: 'folder_tab_input_extra_info',\n        checkboxTextId: 'folder_tab_text_extra_info',\n    },\n];\nconst smallDotPath = 'M 12,14 C 11.45,14 10.979333,13.804 10.588,13.412 10.196,13.020667 10,12.55 10,12 10,11.45 10.196,10.979 10.588,10.587 10.979333,10.195667 11.45,10 12,10 c 0.55,0 1.021,0.195667 1.413,0.587 C 13.804333,10.979 14,11.45 14,12 14,12.55 13.804333,13.020667 13.413,13.412 13.021,13.804 12.55,14 12,14 Z';\nfunction openDetailsTag(ele) {\n    ele.setAttribute('open', 'true');\n}\nexport class Blockquotes extends RunnableModule {\n    constructor() {\n        super('blockquotes');\n        // we store the actual HTML element instead of the raw HTML because the raw html string\n        // will NOT preserve javascript event handlers\n        this.definitionStorage = {};\n        this.availableEntries = [];\n        //private currentEntryId: EntryId = 'primary-definition';\n        this.showDotWhenEmpty = getOption('blockquotes.folderTab.showDotWhenEmpty');\n        this.folderTabMode = getOption('blockquotes.folderTab.mode');\n        this.linkedEntries = null;\n    }\n    // toggleValue <=> do not show entry\n    // NOTE: This does not actually \"click\" the entry. It just toggles the text under the main definition.\n    clickEntry(entry, inputEle, toggleValue = undefined) {\n        var _a;\n        if (entry.entryId === 'primary-definition') {\n            // exception to maintain html format\n            (_a = document\n                .getElementById('primary_definition_wrapper')) === null || _a === void 0 ? void 0 : _a.classList.toggle('hidden', toggleValue !== null && toggleValue !== void 0 ? toggleValue : inputEle.checked);\n        }\n        else {\n            // standard\n            const checkboxTextEle = document.getElementById(entry.checkboxTextId);\n            if (checkboxTextEle === null) {\n                // shouldn't happen\n                return;\n            }\n            checkboxTextEle.classList.toggle('hidden', toggleValue !== null && toggleValue !== void 0 ? toggleValue : inputEle.checked);\n        }\n    }\n    selectEntry(entry, eles) {\n        var _a, _b;\n        if (this.folderTabMode === 'unique') {\n            // clears out current text\n            eles.primaryDefBlockquoteEle.innerHTML = '';\n            const c = this.definitionStorage[entry.entryId];\n            if (c) {\n                eles.primaryDefBlockquoteEle.appendChild(c);\n            }\n        }\n        else { // multiple or linked\n            const mainInputEle = document.getElementById(entry.inputId);\n            if (mainInputEle === null) {\n                // shouldn't happen\n                return;\n            }\n            if (this.folderTabMode === 'multiple') {\n                this.clickEntry(entry, mainInputEle);\n            }\n            else { // mode === linked\n                // ASSUMPTION: we maintain the status that all linked entries within a group must be checked together.\n                if (mainInputEle.checked) {\n                    return; // nothing to do, it's already selected\n                }\n                // The user is now selecting a different group.\n                // Iterate through once, and disable and enable as necessary.\n                const linkedEntries = (_a = this.linkedEntries) === null || _a === void 0 ? void 0 : _a[entry.entryId];\n                for (const e of ENTRIES) {\n                    const inputEle = document.getElementById(e.inputId);\n                    if (inputEle === null) {\n                        // shouldn't happen\n                        continue;\n                    }\n                    const isLinkedEntry = (_b = linkedEntries === null || linkedEntries === void 0 ? void 0 : linkedEntries.has(e.entryId)) !== null && _b !== void 0 ? _b : false;\n                    // a bit of a hack to ensure that the current button can no longer be pressed\n                    if (!inputEle.getAttribute(\"data-permanently-disabled\")) {\n                        this.clickEntry(e, inputEle, !isLinkedEntry);\n                        inputEle.disabled = isLinkedEntry; // disables re-toggling the current entry\n                        inputEle.checked = isLinkedEntry;\n                    }\n                }\n            }\n        }\n    }\n    setDisabled(entry) {\n        const inputEle = document.getElementById(entry.inputId);\n        if (inputEle !== null) {\n            this.logger.debug(`setting ${entry.entryId} to disabled...`);\n            inputEle.disabled = true;\n            inputEle.setAttribute(\"data-permanently-disabled\", \"true\");\n        }\n        if (this.showDotWhenEmpty) {\n            const buttonEle = document.getElementById(entry.buttonId);\n            if (buttonEle) {\n                // svg -> path\n                buttonEle.children[0].children[0].setAttribute('d', smallDotPath);\n            }\n        }\n    }\n    // TODO: ensure that folder tabs are shown when PrimaryDefinition is empty? (external links)\n    populateFolderTab() {\n        var _a, _b, _c;\n        const primaryDefBlockquoteEle = document.getElementById('primary_definition');\n        if (!primaryDefBlockquoteEle) {\n            return; // something is null for some reason\n        }\n        // in case we ever need to pass in elements\n        const eles = {\n            primaryDefBlockquoteEle: primaryDefBlockquoteEle,\n        };\n        // calculates linked elements\n        // ASSUMPTION: the input is always correct. No error checking will be done for speed purposes.\n        if (this.folderTabMode === \"linked\") {\n            const linkedEntries = {};\n            const linkedElesSpecifier = getOption(\"blockquotes.folderTab.linkedTabs\");\n            for (const specifierGroup of linkedElesSpecifier.split(\"-\")) {\n                const entriesGroup = new Set();\n                for (const c of specifierGroup) {\n                    entriesGroup.add(ENTRIES[Number(c) - 1].entryId);\n                }\n                // removes the line indicating what the text is unless it's part of a group of > 1 elements\n                // ASSUMPTION: each group must have 1 or more numbers\n                (_a = document.getElementById((ENTRIES[Number(specifierGroup[0]) - 1]).checkboxTextId)) === null || _a === void 0 ? void 0 : _a.classList.toggle(\"primary-def-folder-tab-text--hide\");\n                for (const entryId of entriesGroup) { // ASSUMPTION: no deepcopy is fine\n                    linkedEntries[entryId] = entriesGroup;\n                }\n            }\n            this.linkedEntries = linkedEntries;\n        }\n        for (const entry of ENTRIES) {\n            // must be ran before the setDisabled block below, to ensure everything is properly a checkbox\n            if (this.folderTabMode === 'multiple' || this.folderTabMode === 'linked') {\n                const inputEle = document.getElementById(entry.inputId);\n                if (inputEle !== null) {\n                    inputEle.type = 'checkbox';\n                }\n            }\n            // this works since in the templates, the element is not assigned an id if greyed out / not shown\n            const ele = document.getElementById(entry.eleId);\n            if (ele === null) {\n                this.setDisabled(entry);\n                continue;\n            }\n            // exception for extra info since it's implemented differently in the templates\n            if (entry.entryId === 'extra-info' &&\n                ((_b = document\n                    .getElementById('extra_info_outer_display')) === null || _b === void 0 ? void 0 : _b.classList.contains('outer-display2'))) {\n                this.setDisabled(entry);\n                continue;\n            }\n            // loads definitionStorage\n            const blockquoteEle = ele.querySelector('.glossary-blockquote');\n            if (blockquoteEle !== null) {\n                this.definitionStorage[entry.entryId] = blockquoteEle.children[0];\n            }\n            else if (entry.entryId === 'primary-definition') {\n                // special case: primary_definition is itself a blockquote\n                this.definitionStorage[entry.entryId] = ele.children[0];\n                if (ele.classList.contains('hidden')) {\n                    this.setDisabled(entry);\n                    continue; // is not actually available\n                }\n            }\n            else {\n                this.logger.debug(`Cannot set glossary-blockquote from ${entry.eleId}`);\n                return;\n            }\n            if (this.folderTabMode === 'multiple' || this.folderTabMode === 'linked') {\n                // loads into the text divs beforehand\n                const checkboxTextEle = document.getElementById(entry.checkboxTextId);\n                const c = this.definitionStorage[entry.entryId];\n                if (entry.entryId !== 'primary-definition' && checkboxTextEle !== null && c) {\n                    checkboxTextEle.appendChild(c);\n                }\n            }\n            this.availableEntries.push(entry);\n            const buttonEle = document.getElementById(entry.buttonId);\n            if (buttonEle) {\n                buttonEle.onclick = () => {\n                    this.selectEntry(entry, eles);\n                };\n            }\n        }\n        // hard codes current left/right buttons\n        if (this.availableEntries.length > 0) {\n            // edge case: when nothing is shown in the primary definition,\n            // but others are available\n            const primaryDefEle = document.getElementById(ENTRIES[0].eleId);\n            primaryDefEle === null || primaryDefEle === void 0 ? void 0 : primaryDefEle.classList.toggle('glossary-primary-definition--folder-tab', true);\n            primaryDefEle === null || primaryDefEle === void 0 ? void 0 : primaryDefEle.classList.toggle('hidden', false); // shows regardless\n            // hard code selecting the primary definition\n            this.selectEntry(this.availableEntries[0], eles);\n            const firstInputEle = document.getElementById(this.availableEntries[0].inputId);\n            if (firstInputEle !== null) {\n                firstInputEle.checked = true; // so it's visually checked\n            }\n        }\n        else {\n            // horrible edge case: no tabs to show\n            (_c = document\n                .getElementById('dh_left')) === null || _c === void 0 ? void 0 : _c.classList.toggle('dh-left--no-folder-tabs', true);\n        }\n        if (this.showDotWhenEmpty) {\n            const blockquotesEle = document.getElementById('folder_tab');\n            blockquotesEle === null || blockquotesEle === void 0 ? void 0 : blockquotesEle.classList.toggle('folder-tab--show-when-empty', true);\n        }\n    }\n    openBlockquotes(mode) {\n        if (getOption('blockquotes.folderTab.enabled')) {\n            if (this.folderTabMode === 'multiple' || this.folderTabMode === 'linked') {\n                // AND check number\n                for (const entry of ENTRIES) {\n                    if (getOption(`blockquotes.${mode}.${entry.optionId}`)) {\n                        const buttonEle = document.getElementById(entry.buttonId);\n                        const inputEle = document.getElementById(entry.inputId);\n                        // inputEle is used to check if it was already open\n                        if (buttonEle !== null && inputEle !== null && !inputEle.checked) {\n                            buttonEle.click();\n                        }\n                    }\n                }\n            }\n            else {\n                // TODO check number\n                for (const entry of ENTRIES) {\n                    if (getOption(`blockquotes.${mode}.${entry.optionId}`)) {\n                        this.logger.warn(`Cannot open ${entry.optionId} by default if blockquotes.folderTab.mode is not 'multiple' or 'linked'`);\n                    }\n                }\n            }\n        }\n        else {\n            // default\n            for (const entry of ENTRIES) {\n                if (getOption(`blockquotes.${mode}.${entry.optionId}`)) {\n                    const ele = document.getElementById(entry.eleId);\n                    // check for nodeName to handle primaryDef edge case\n                    // TODO what if primary definition does have a details tag?\n                    if (ele !== null && ele.nodeName === 'DETAILS') {\n                        openDetailsTag(ele);\n                    }\n                }\n            }\n        }\n    }\n    attemptOpenBlockquotesNew() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (yield cardIsNew('back')) {\n                this.openBlockquotes('openOnNew');\n            }\n        });\n    }\n    getParseFirstLineMode(modeType) {\n        let defaultMode = getOption(`blockquotes.simplifyDefinitions.hideFirstLineMode`);\n        if (modeType !== null) {\n            const lineMode = checkOptTags(getTags(), [\n                [\n                    `blockquotes.simplifyDefinitions.tagOverride.${modeType}.hideFirstLine`,\n                    'first-line',\n                ],\n                [`blockquotes.simplifyDefinitions.tagOverride.${modeType}.showFirstLine`, 'show'],\n            ]);\n            if (lineMode !== undefined) {\n                return lineMode;\n            }\n        }\n        return defaultMode;\n    }\n    // hides the first line (or parts of it)\n    parseFirstLine(eleId, lineMode, dictsOverride) {\n        var _a;\n        const ele = document.getElementById(eleId);\n        if (ele === null) {\n            return;\n        }\n        for (const liEle of ele.querySelectorAll('ol li[data-details]')) {\n            const dictName = liEle.getAttribute('data-details');\n            // attempts to get dictsOverride[dictName], fallsback to lineMode\n            const dictMode = dictName === null ? lineMode : (_a = dictsOverride[dictName]) !== null && _a !== void 0 ? _a : lineMode;\n            if (dictMode === 'first-line') {\n                ele.classList.add('glossary-blockquote--hide-first-line');\n            }\n            else if (dictMode === 'tags') {\n                ele.classList.add('glossary-blockquote--hide-tags');\n            }\n            else if (dictMode === 'extra-text') {\n                ele.classList.add('glossary-blockquote--hide-extra-text');\n            }\n            else if (dictMode === 'show') {\n                ele.classList.add('glossary-blockquote--show');\n            } // \"none\" is ignored\n        }\n    }\n    // hides the list numbers if necessary\n    attemptHideList(removeListMode) {\n        const ele = document.getElementById('primary_definition');\n        if (ele === null) {\n            return;\n        }\n        if (removeListMode === 'always') {\n            ele.classList.add('glossary-blockquote--hide-list-numbers');\n        }\n        if (removeListMode === 'on-singular') {\n            const eleText = document.getElementById('primary_definition_raw_text');\n            const len = eleText === null || eleText === void 0 ? void 0 : eleText.querySelectorAll('ol > li').length;\n            if (len && len == 1) {\n                // found only one li element\n                ele.classList.add('glossary-blockquote--hide-list-numbers');\n            }\n        }\n    }\n    parseFirstLines() {\n        const dictsOverride = getOption('blockquotes.simplifyDefinitions.dictsOverride.hideFirstLineMode');\n        if (getOption('blockquotes.simplifyDefinitions.primaryDefinition.enabled')) {\n            this.parseFirstLine('primary_definition', this.getParseFirstLineMode('primaryDefinition'), dictsOverride);\n        }\n        if (getOption('blockquotes.simplifyDefinitions.secondaryDefinition.enabled')) {\n            this.parseFirstLine('secondary_definition_details', this.getParseFirstLineMode('secondaryDefinition'), dictsOverride);\n        }\n        if (getOption('blockquotes.simplifyDefinitions.extraDefinitions.enabled')) {\n            this.parseFirstLine('extra_definitions_details', this.getParseFirstLineMode(null), dictsOverride);\n        }\n        const removeListMode = getOption('blockquotes.simplifyDefinitions.removeListMode');\n        if (removeListMode !== 'never') {\n            this.attemptHideList(removeListMode);\n        }\n    }\n    main() {\n        // only ran on back side, according to main.ts\n        if (getOption('blockquotes.hideEmpty')) {\n            for (const ele of document.querySelectorAll('.glossary-details--grey')) {\n                ele.classList.add('hidden');\n            }\n        }\n        // note that the default options specifically disables this on non-mobile devices! (VW >= 620)\n        if (getOption('blockquotes.folderTab.enabled')) {\n            // ASSUMPTION: if this is enabled, then we never collapse the primary definition.\n            this.populateFolderTab();\n        }\n        else if (getOption('blockquotes.collapsePrimaryDefinition')) {\n            const wrapper = document.getElementById('primary_definition_details_wrapper');\n            if (wrapper !== null) {\n                wrapper.classList.toggle('primary-def-open', false);\n            }\n            const defDetails = document.getElementById('primary_definition_details');\n            if (defDetails !== null) {\n                if (defDetails.hasAttribute('open')) {\n                    defDetails.removeAttribute('open');\n                }\n            }\n        }\n        if (getOption('blockquotes.simplifyDefinitions.enabled')) {\n            this.parseFirstLines();\n        }\n        if (getOption('blockquotes.open.enabled')) {\n            this.openBlockquotes('open');\n        }\n        if (getOption('blockquotes.openOnNew.enabled')) {\n            this.attemptOpenBlockquotesNew();\n        }\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { RunnableModule } from '../module';\nimport { getCardKey, popupMenuMessage } from '../utils';\nimport { refreshAdjustElements } from '../reflow';\nimport { InfoCircleSetting } from './infoCircleSetting';\nimport { selectPersistAny } from '../spersist';\nconst settingId = 'info_circle_text_settings_refresh_card';\nexport class RefreshCard extends RunnableModule {\n    constructor() {\n        super('refreshCard');\n        this.setting = new InfoCircleSetting(settingId);\n        this.persist = selectPersistAny();\n        this.imgStylizer = null;\n        this.asyncManager = null;\n    }\n    addImgStylizer(imgStylizer) {\n        this.imgStylizer = imgStylizer;\n    }\n    addAsyncManager(asyncManager) {\n        this.asyncManager = asyncManager;\n    }\n    refreshCard() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const refreshMutex = 'jpmn-asyncManager-refresh-mutex' + getCardKey();\n            if (this.persist === null) {\n                this.logger.warn('Persistence is not available. Refreshing the card will not check whether the async processes are currently running.');\n            }\n            else if (this.persist.has(refreshMutex)) {\n                // TODO why does this message never show?\n                popupMenuMessage('Async processes are already running. Card cannot be refreshed.');\n                return;\n            }\n            else {\n                this.persist.set(refreshMutex, 'running');\n            }\n            if (this.imgStylizer !== null) {\n                refreshAdjustElements(this.imgStylizer);\n            }\n            yield ((_a = this.asyncManager) === null || _a === void 0 ? void 0 : _a.runModules(true));\n            if (this.persist !== null) {\n                this.persist.pop(refreshMutex);\n            }\n        });\n    }\n    main() {\n        this.setting.initDisplay();\n        this.setting.btn.onclick = () => {\n            this.refreshCard();\n        };\n    }\n}\n","import { Module } from '../module';\nimport { getFieldValueEle } from '../fields';\nimport { getOption } from '../options';\nexport class CardCache extends Module {\n    constructor() {\n        super('sm:cardCache');\n        this.cardCacheEle = getFieldValueEle('CardCache');\n    }\n    shouldUse() {\n        return (getOption('cardCache.enabled') && this.cardCacheEle !== null && !this.isExpired());\n    }\n    getWordIndsData() {\n        var _a;\n        return (_a = this.cardCacheEle) === null || _a === void 0 ? void 0 : _a.querySelector(`[data-cache-type=\"word-indicators\"]`);\n    }\n    getKanjiHoverData() {\n        var _a;\n        return (_a = this.cardCacheEle) === null || _a === void 0 ? void 0 : _a.querySelector(`[data-cache-type=\"kanji-hover\"]`);\n    }\n    isExpired() {\n        var _a, _b, _c, _d;\n        const writeTimeStr = (_b = (_a = this.cardCacheEle) === null || _a === void 0 ? void 0 : _a.querySelector(`[data-cache-write-time]`)) === null || _b === void 0 ? void 0 : _b.getAttribute('data-cache-write-time');\n        const expiryDurationStr = (_d = (_c = this.cardCacheEle) === null || _c === void 0 ? void 0 : _c.querySelector(`[data-cache-expires]`)) === null || _d === void 0 ? void 0 : _d.getAttribute('data-cache-expires');\n        if (!writeTimeStr || !expiryDurationStr) {\n            // skip if any are null/undefined\n            return;\n        }\n        const writeTime = Number(writeTimeStr);\n        const expiryDurationDays = Number(expiryDurationStr);\n        // 24/1 hour/day\n        // 60/1 -> minute/hour\n        // 60/1 -> second/minute\n        // 1000/1 -> ms/s\n        const expiryDuration = expiryDurationDays * 1000 * 60 * 60 * 24; // milliseconds\n        // caching expired result is likely not worth it here\n        const isExpired = expiryDuration + writeTime < Date.now();\n        return isExpired;\n    }\n}\n","import { LOGGER } from './logger';\nimport { compileOpts } from './consts';\nimport { addOnShownHook, BASE_DOCS_URL, playAudio, isMobile, } from './utils';\nimport { fieldsAllFilled, fieldsAllEmpty } from './fields';\nimport { getOption } from './options';\n//import { newKeybinds } from './modules/keybinds';\nimport { MainCardUtils } from './modules/mainCardUtils';\nimport { SentenceParser } from './modules/sentenceParser';\nimport { AutoPitchAccent } from './modules/autoPitchAccent';\nimport { ImgStylizer } from './modules/imgStylizer';\nimport { KanjiHover } from './modules/kanjiHover';\nimport { WordIndicators } from './modules/wordIndicators';\nimport { FreqUtils } from './modules/freqUtils';\nimport { MobileUtils } from './modules/mobileUtils';\nimport { MobilePopup } from './mobilePopup';\nimport { InfoCircleUtils } from './modules/infoCircleUtils';\nimport { FixRubyPositioning } from './modules/fixRubyPositioning';\nimport { CheckDuplicateKey } from './modules/checkDuplicateKey';\nimport { AsyncManager } from './modules/asyncManager';\nimport { Blockquotes } from './modules/blockquotes';\nimport { RefreshCard } from './modules/refreshCard';\nimport { cardIsNew } from './isNew';\nimport { getViewportWidth } from './reflow';\nimport { CardCache } from './modules/cardCache';\nimport { GlobalEventManager } from './globalEventManager';\nexport function main(cardSide, cardType, noteType) {\n    // ==========================================================================\n    // = error handling =\n    // ==========================================================================\n    // on any javascript error: log it\n    window.onerror = function (msg, url, lineNo, columnNo, error) {\n        var _a;\n        LOGGER.errorStack((_a = error === null || error === void 0 ? void 0 : error.stack) !== null && _a !== void 0 ? _a : 'Unknown runtime error', `${msg}`, url, lineNo, columnNo);\n    };\n    // https://stackoverflow.com/a/55178672\n    window.onunhandledrejection = function (errorEvent) {\n        if (errorEvent.reason === 'AnkiConnect failed to issue request.') {\n            let reason = errorEvent.reason +\n                ` Click <a href=\"${BASE_DOCS_URL}/#error-ankiconnect-failed-to-issue-request\">here</a> for basic troubleshooting.`;\n            LOGGER.error('Javascript handler error: ' + reason);\n        }\n        else {\n            LOGGER.error('Javascript handler error: ' + errorEvent.reason);\n        }\n    };\n    // ==========================================================================\n    // = audio playing =\n    // ==========================================================================\n    // Checks for mobile because at least on Android, audio playback won't work unless\n    // onShownHook is used. It'll pretty much freeze the card if attempted...\n    function playAudioFunc(func, id) {\n        if (isMobile()) {\n            addOnShownHook(() => {\n                func(id);\n            });\n        }\n        else {\n            // Ideally, we would want to play the function\n            func(id);\n        }\n    }\n    if (cardSide === 'front') {\n        playAudioFunc(playAudio, 'pa_silence_audio');\n    }\n    else {\n        // back side\n        // NOTE: this is definitely a bit of a hack, because the first audio still attempts to play\n        // immediately after the card load, meaning the word audio maybe repeated.\n        const audioPlaybackMode = getOption('audioPlaybackMode');\n        if (audioPlaybackMode == 'sentence') {\n            playAudioFunc(playAudio, 'sentence_audio');\n        }\n        else if (audioPlaybackMode == 'word') {\n            playAudioFunc(playAudio, 'word_audio');\n        }\n    }\n    // ==========================================================================\n    // = sanity checks =\n    // ==========================================================================\n    LOGGER.debug(`JPMN(${cardType}, ${cardSide}, ${noteType})`);\n    const optsScript = document.getElementById('jpmn_options_script');\n    if (optsScript) {\n        optsScript.onerror = () => {\n            LOGGER.warn('Options file not found. Did you place the options file in the media directory?');\n        };\n    }\n    if (!compileOpts['hardcodedRuntimeOptions'] &&\n        window.JPMNOptions === undefined) {\n        LOGGER.warn('JPMNOptions was not defined in the options file. Was there an error? ' +\n            `Click <a href=\"{BASE_DOCS_URL}/faq/#warning-jpmnopts-was-not-defined-in-the-options-file-was-there-an-error\">here</a> for basic troubleshooting.`, { isHtml: true });\n    }\n    if (fieldsAllFilled('IsHoverCard', 'IsClickCard')) {\n        LOGGER.warn('Both `IsHoverCard` and `IsClickCard` are filled. At most one should be filled at once.');\n    }\n    if (fieldsAllEmpty('SentenceReading') && fieldsAllFilled('Sentence')) {\n        LOGGER.warn('SentenceReading is not filled out. Using Sentence field instead.');\n    }\n    if (fieldsAllEmpty('Sentence') && fieldsAllFilled('SentenceReading')) {\n        LOGGER.warn('`SentenceReading` is filled out, but the `Sentence` field is not. Is this a mistake?');\n    }\n    // ==========================================================================\n    // = run modules =\n    // ==========================================================================\n    // don't think there's an automatic way to properly tree-shake without\n    // copying/pasting code unfortunately\n    // attempting to store and read things from an array doesn't seem to work!\n    const refreshCard = new RefreshCard();\n    const globalEventManager = new GlobalEventManager();\n    //newKeybinds();\n    if (cardType === 'main') {\n        new MainCardUtils(globalEventManager).run();\n    }\n    if (compileOpts['enableModule.sentenceParser']) {\n        new SentenceParser().run();\n    }\n    if (cardSide === 'back') {\n        if (compileOpts['enableModule.autoPitchAccent']) {\n            new AutoPitchAccent().run();\n        }\n    }\n    // right after auto pitch accent to prevent even more unnecessary reflow changes\n    // potentially caused by modules below\n    if (compileOpts['enableModule.imgStylizer']) {\n        const imgStylizer = new ImgStylizer(globalEventManager);\n        imgStylizer.run();\n        refreshCard.addImgStylizer(imgStylizer);\n    }\n    if (cardSide === 'back') {\n        if (compileOpts['enableModule.freqUtils']) {\n            new FreqUtils().run();\n        }\n        // very last to ensure that definitions are properly populated\n        if (compileOpts['enableModule.blockquotes']) {\n            new Blockquotes().run();\n        }\n    }\n    // depends on sentenceParser, for textbender sentence\n    if (compileOpts['enableModule.mobileUtils']) {\n        new MobileUtils().run();\n    }\n    let mobilePopup = null;\n    if (compileOpts['enableModule.mobilePopup'] &&\n        getViewportWidth() < compileOpts['breakpoints.width.combinePicture']) {\n        mobilePopup = new MobilePopup('mobilePopup');\n    }\n    if (compileOpts['enableModule.infoCircleUtils']) {\n        new InfoCircleUtils().run();\n    }\n    if (compileOpts['enableModule.fixRubyPositioning']) {\n        new FixRubyPositioning().run();\n    }\n    const asyncManager = new AsyncManager();\n    refreshCard.addAsyncManager(asyncManager);\n    refreshCard.run();\n    if (cardSide === 'front') {\n        // only necessary to cache at the front side\n        // the backside will call cardIsNew() as normal\n        const cardIsNewFuncWrapper = () => {\n            cardIsNew(cardSide);\n        };\n        asyncManager.addFunction(cardIsNewFuncWrapper);\n    }\n    const cardCache = new CardCache();\n    if (compileOpts['enableModule.kanjiHover']) {\n        asyncManager.addModule(new KanjiHover(cardCache, mobilePopup));\n    }\n    if (compileOpts['enableModule.wordIndicators']) {\n        asyncManager.addModule(new WordIndicators(cardCache, mobilePopup));\n    }\n    if (cardSide === 'back' && compileOpts['enableModule.checkDuplicateKey']) {\n        // only necessary at the back to avoid distractions at the front\n        asyncManager.addModule(new CheckDuplicateKey());\n    }\n    addOnShownHook(() => {\n        asyncManager.runModulesDelay();\n    });\n    LOGGER.debug('Success! End of main() reached.');\n}\n","import { main } from '../../main';\nmain('back', 'pa_sent', 'jp-mining-note');\n"],"names":["compileOpts","runtimeOpts","fieldFilledCache","fieldIsFilled","field","cachedValue","undefined","x","document","getElementById","LOGGER","warn","innerHTML","length","fieldsAllFilled","fields","fieldsAnyFilled","fieldsAllEmpty","fieldValueCache","cacheFieldValue","value","getFieldValue","cacheValue","_tagsList","getTags","tags","split","ALL_VERB_OR_IADJ_TAGS","Set","_cardKey","getCardKey","popupMenuMessage","message","isHTML","popupMenu","popupMessageDiv","createElement","textContent","classList","add","appendChild","setTimeout","removeChild","debug","isMobile","documentElement","contains","isAndroid","escapeRegExp","str","replace","getCardType","_a","getCardSide","_plainToX","filter","plainToRuby","plainToKanaOnly","throwOnNotFound","id","result","Error","filterCardsReduce1","aMaxFirst","aMaxLast","bMaxFirst","bMaxLast","aArrLen","bArrLen","flip","filterCardsReduce2","tempTotal","limit","filterCards","a","b","aMaxFirstOG","aMaxLastOG","bMaxFirstOG","bMaxLastOG","totalLimits","aRes","bRes","i","aArr","Array","from","sort","bArr","push","slice","hybridClick","toggleEle","checked","addOnShownHook","callback","success","window","onShownHook","isArray","playAudio","thisArg","this","_arguments","generator","ele","querySelector","click","P","Promise","resolve","reject","fulfilled","step","next","e","rejected","done","then","apply","_persistenceKey","SPersistSessionStorage","constructor","isAvailable","globalThis","sessionStorage","has","key","getItem","get","set","setItem","pop","item","removeItem","onlyStoresStrings","getType","SPersistObj","obj","storage","persistObjs","selectPersist","types","t","selectPersistStr","selectPersistObj","selectPersistAny","console","log","_SPersist_sessionStorage","py","_SPersist_windowKey","qt","widthKey","getVWForceReflow","clientWidth","setWidthCache","persist","VW","toString","getViewportWidthFromCache","Number","pxToNumber","px","endsWith","substring","setHeight","imgEle","imgBoxEle","height","style","maxHeight","adjustElements","wordBoxEle","dhRight","toggle","removeProperty","dhWordPitch","resetProperties","getViewportWidth","getOption","offsetHeight","dhReading","dhLeftWidth","scrollWidth","dhReadingHeight","scrollHeight","dhWordPitchWidth","offsetWidth","dhLeftStyle","getComputedStyle","ftWidth","getPropertyValue","ftFullWidth","border","setProperty","maxWidthCSS","imgLoaded","adjustWordOverflow","onload","complete","adjustMobile","OVERRIDE_FUNCS","isPC","isiPhoneiPad","isAnkiMobile","viewportWidth","args","op","OPS","ignoreOptions","viewportWidthBreakpoint","VIEWPORT_WIDTH_BPS","bp","cardType","STR_OPS","testCardType","cardSide","testCardSide","deckName","getAttribute","overrideFuncFields","displaySentenceShrink","displaySentenceRemoveNewlines","maxWidthBackside","combinePicture","fieldsFunc","isOverrideValue","val","attemptParseOverride","override","type","overrideType","func","resultTrue","resultFalse","getDefaultOption","k","_overrides","userOptions","jpmnOpts","JPMNOptions","userOption","checkOptTags","tagsToResult","optKey","opt","includes","leechClass","errorClass","errorGroupId","Logger","getDebugLevel","_debugLevel","getToConsole","_toConsole","getDebugConsoleLevel","_debugConsoleLevel","name","level","dispMsg","formatMsg","printMsg","info","ignoredWarns","substr","error","ignoredErrors","errorStack","stack","msg","url","lineNo","columnNo","ignoredErrorsRegex","regexData","RegExp","pattern","flags","exec","fullMsg","leech","displayMsg","infoCirc","eleId","colorClass","groupEle","appendMsg","msgEle","isHtml","Module","localOpts","logger","overrideOption","o","overrideOptions","options","Object","keys","RunnableModule","rid","super","run","main","RunnableAsyncModule","arguments","useCache","setUseCache","prototype","call","hasKey","code","toggleDetailsTagOnKey","hasAttribute","removeAttribute","setAttribute","toggleDetailsTag","GlobalEventManager","keybindFuncs","windowResizeFuncs","windowResizeTimeout","register","addKeybindFunc","addWindowResizeFunc","onkeyup","baseKeybindFunc","entries","onresize","clearTimeout","HIRAGANA_CONVERSION_RANGE","min","max","KATAKANA_CONVERSION_RANGE","HIRAGANA_RANGE","KATAKANA_RANGE","SMALL_KANA_SET","LONG_VOWEL_MARKER_TO_VOWEL","EXTENDED_VOWELS","VOWEL_TO_KANA_MAPPING","Map","getMorae","text","morae","c","isCodePointInRange","codePoint","range","convertHiraganaToKatakana","offset","char","codePointAt","String","fromCodePoint","isKana","pt","katakanaRemoveLongVowelMarks","katakana","resultArr","first","second","found","searchStr","vowel","join","map","characters","character","AutoHighlightWord","plainReplaceCache","attemptedPlainReplace","findPlainReplace","sentence","searchStrings","possibleReplaces","searchString","isWord","shorten","replaceFilter","reduce","expression","minLength","isRubySentence","highlightWordRuby","sentenceRuby","cache","longestSubstr","replaceResult","beforeKanjiRegex","afterKanjiRegex","betweenKanjiRegex","previous","after","lastChr","replaceRegex","matchResult","match","highlightWordPlain","highlightWord","plainSentence","size","sentenceStyleClasses","SentenceParser","quoteMatches","autoHighlight","debugLevel","clozeReplaceBold","sentContents","tempEle","bTags","getElementsByTagName","bTag","getOptSentType","sentType","isAltDisplay","checkQuoteAndStrip","qp","i1","i2","open","j1","j2","close","preprocessForMulti","attemptParseMulti","noteInfo","sentenceStrings","sentStr","sentEle","quoteOpen","quoteClose","contents","sent","children","base","processSentence","processQuotes","processMode","isMulti","sentenceStyleClass","strippedSent","cls","dispMode","getQuoteDisplayMode","fixDivList","arr","every","nodeName","getQuoteProcessMode","optSentType","checkTags","isQuoted","displayMode","processPeriod","periods","rxLastPeriod","rxPeriods","rxTags","test","results","matchAll","index","autoHighlightLog","word","isClozeDeletion","trim","Word","WordReading","WordReadingHiragana","Sentence","multiSents","multiSentCls","multiSent","extractSentenceAndProcess","sentenceType","noteInfoSentence","processDisplaySentences","sentEles","querySelectorAll","processFullSentence","normalizeSentenceCompare","compareSentenceReading","sentReading","COLOR_TAGS","heiban","atamadaka","nakadaka","odaka","kifuku","ajtWordSeps","PosData","pos","isBolded","allowAutoKifuku","separatorAfter","dictName","mora","paGroup","DispPosData","dispHTML","mainPAGroup","ParsePAPositions","autopa","paPositions","wordReading","parse","positionsEle","parseJPMN","digit","posData","pitchHTML","buildPitchHTML","getMainPAGroup","getDictInfoFromGroup","groupDiv","getDictInfo","liEle","posDataList","parseJPMNSingularPos","parseJPMNSingularDict","parseJPMNAllDicts","getPosDataListFromDictChildren","dictChildren","bolded","firstDigit","dictPosDataList","concat","ParsePAOverride","paOverride","parseMethod","calcPosDataList","overrideEle","parseIntCSV","parseTextFormat","posStrList","integer","posNumber","isNaN","separators","downsteps","separatorsRegex","searchText","strList","foundSeparators","moras","j","splice","displayMoras","normalizeReadingGetMoras","ParseAJTWordPitch","ajtWordPitch","removeNasal","getPosDataList","_b","_c","d","searchWords","searchHTML","searchWordsHTML","normalizedReading","w","h","removeNasalStr","findIndex","ajtNormalizeSearch","removeAJTDownstep","getMoraeOfAJTWord","AutoPitchAccent","_d","wordTags","ajtHTML","attemptGlobalColor","showTitle","getDispPosDataOnEmpty","wordReadingKana","ka_gyou","ga_gyou","getPAColorTag","ct","paintDisplay","wordClass","sentClass","readingEle","sentences","words","fullSentEle","defs","def","useDispPosData","displayEle","dispPosData","paColorTag","getSearchAJTHTML","getAJTWordHTML","ajtHTMLSearch","resultSearchHTML","temp","wordSearch","idx","indexOf","searchArr","getNormalizedReading","ajtWordHTML","readingDisplayMode","reading","convertHiraganaToKatakanaWithLongVowelMarks","flattened","childNodes","child","cloneNode","data","outerHTML","isAJTWord","multiplePitchesColorAsFirst","firstPAGroup","hasBoldedPos","_hasBoldedPos","connectors","baseConnector","readingMora","wordPitchHTML","buildWordReading","moraNum","kifukuList","startOverline","stopOverline","downstep","isVerbOrIAdj","wordInnerHTML","wordSpan","addPosition","wordTagsStr","AJTWordPitch","YomichanWordTags","PAOverrideText","PAOverride","PAPositions","InfoCircleSetting","settingId","persistKey","infoCircSettings","infoCircSettingsBorder","btn","getNextState","getCurrentState","toggleDisplay","displayAs","current","initDisplay","defaultState","state","clsBlurFilterInit","clsBlurFilter","clsBlurFilterDisable","clsImgClick","clsShowEye","BackImgBlurController","backImgStylizer","imgBlur","dhImgBlur","imgEye","imgCurrentlyBlurred","initImageBlur","setting","setImageBlurToState","onclick","removeImgBlur","addImgBlur","hidePictureEye","showPictureEye","pictureEyeBlur","setAttributeNS","pictureEyeNoBlur","init","cardIsMarked","removeClickToZoom","addClickToZoom","addClickClass","ImgBlur","controller","setController","mainArr","testArr","arrContainsAnyOf","displaySetting","defaultStateMap","never","always","defaultStateStr","newState","BackImgStylizer","globalEventManager","dhLeft","dhLeftAudioBtns","modal","modalImg","floatImgRight","floatImgLeft","primaryDefRawText","primaryDefBlockquote","wordImgBox","dhImgContainer","getDisplayImg","imgList","attemptAddImageFromTags","tagToImgList","tagToImg","tag","fileName","newImg","src","adjustForNoImg","display","setCanBlur","getStylizeMode","modeType","defaultMode","stylizeMode","createImgContainer","imgName","defSpan","defAnc","href","defImg","setImgProcessed","imgTags","convertYomichanImgs","searchEle","mode","_e","anchorTags","atag","imgFileName","parentNode","fragment","replaceChild","stylizeDictionaryGlossaryPics","dictsOverride","dictEle","stylizePrimaryDefGlossaryPics","stylizeModeUser","stylizeModeYomichan","stylizeOtherGlossaryPics","searchEles","getFloatImgPos","defaultPos","floatImgPos","stylizeFloatImg","modalInit","className","ImgStylizer","imgEleList","getQueryCacheKey","getCardInfoCacheKey","invoke","action","params","xhr","XMLHttpRequest","addEventListener","response","JSON","responseText","getOwnPropertyNames","hasOwnProperty","send","stringify","version","escapeQueryStr","s","constructFindCardsAction","query","getQueryCache","persistObj","setQueryCache","queryResult","setCardInfoCache","cardID","cardInfo","getCardInfoCache","cardsInfo","cardIDs","readCache","writeCache","searchIDs","cardsInfoResult","cards","cardIDsToCardsInfo","QueryBuilder","segments","addSegment","segment","negate","resultSegment","build","clone","qb","TooltipCardDivBuilder","tooltips","wordDiv","sentDiv","isNew","addWordDiv","div","addSentDiv","createWordDiv","cardId","buildWordDiv","createSentDiv","buildSentDiv","setNew","cardDiv","autoPA","TooltipBuilder","hoverText","onEmptyText","cardDivs","addCardDiv","addSeparator","sepDiv","addHoverText","addOnEmptyText","buildTooltipOnly","tooltipSpan","tooltipWrapperSpan","wrapper","Tooltips","sentParser","newCardBuilder","newBuilder","wordReadingRuby","wordEle","sentenceOpen","sentenceContents","sentenceClose","getCardBaseQuery","Key","getQuery","removed","getQueryBuilderGroup","qpNew","addBrowseOnClick","parentEle","cid","cardInfoToNoteInfoTooltipBuilder","boldSentKanji","resultSent","rx","KanjiHover","cardCache","mobilePopup","WordReadingRubyHTML","cardWordReadingResultKey","cardHoverHTMLCacheKey","wordReadingEle","cacheFields","f","wordReadingKanjis","kanjiSet","matches","kanji","cardQueries","kanjis","baseQuery","kanjiToQueryCategory","queryResults","wordQuery","sentQuery","queryGroup","queries","qbSent","queryCategory","queryKey","queriesFlattened","kanjisFlattened","categoriesFlattened","actions","categoryID","multiResults","sortByTimeCreated","kanjiQueryResults","maxNonNewOldest","maxNonNewNewest","maxNewOldest","maxNewNewest","kanjiToFilteredCardIDs","nonNewResultIds","newResultIds","getCardInfo","filteredCardIDs","values","ids","cardIDsArray","buildTooltips","kanjiToHover","filteredCardsInfo","buildTooltip","addCardsInfoToTooltip","tooltipBuilder","isSentCard","cardBuilder","noteInfoTTB","wordLen","sentLen","getKanjisToHover","kanjiToFilteredCardInfo","getWordReadingResult","kanjiToHoverHTML","wordReadingRubyHTML","resultHTML","re","matched","populateTooltips","displayResultFromKanjiToHoverHTML","setupKanjiHover","displayCachedResult","shouldUse","kanjiHoverData","getKanjiHoverData","hoverHTML","onmouseover","cardIsNew","spersist","cacheKey","cacheVal","WordIndicator","label","baseIndicatorQuery","wordInds","indicatorEle","infoCircIndicatorEle","getQueryResults","nonNew","new","addCurrentCardToTooltip","currentCardInfo","currentCardBuilder","mainCardDiv","tooltipHTML","setupWordIndicator","infoCircIndicatorsGroupEle","dhLeftEle","isCached","getTooltipHTML","filteredCardIds","filteredCardInfo","WordIndicators","indicatorEleSameWord","indicatorEleSameKanji","indicatorEleSameReading","infoCircIndicatorEleSameWord","infoCircIndicatorEleSameKanji","infoCircIndicatorEleSameReading","getIndicators","wordReadingHiragana","baseKanjiQuery","baseReadingQuery","displayIndicatorsFromCache","indicators","cardResultsCacheKey","indicator","wordIndsData","getWordIndsData","getResultFront","getResults","FreqUtils","freqDisplay","freqOverflow","freqOverflowText","summary","list","maxFreqCount","collapseFreqCount","showSummaryMode","prepend","firstElementChild","MobileUtils","textBenderDef","boldText","boldTextEle","MobilePopup","textEle","titleCloseEle","wrapperEle","mainEle","wordIndsGroupEle","kanjiEles","getKanjiHoverTooltip","resetSelectionIndicators","eles","adjustCardHeight","popupEle","wrapperHeight","popupHeight","marginBottom","resetCardHeight","ind","indEle","previousIndLabel","baseEle","kanjiEle","previousKanji","infoCircFrozen","infoCircZoomOut","InfoCircleUtils","infoCircWrapper","infoCircTextWrapper","infoCircTags","infoCircTagsText","enableAnkiconnectFeatures","partitionTags","dataTags","mediaTags","possibleDataTags","createTagEle","grey","tagEle","innerText","setToggleClick","_isMobile","vwMobile","freeze","unfreeze","remove","target","currentTarget","showTagsMode","FixRubyPositioning","addClassToEle","expressions","CheckDuplicateKey","cardTypeName","noteName","getModelName","queryStr","AsyncManager","modules","addFunction","funcModule","_","addModule","mod","runModules","refresh","runModulesDelay","delay","ENTRIES","optionId","entryId","buttonId","inputId","checkboxTextId","openDetailsTag","Blockquotes","definitionStorage","availableEntries","showDotWhenEmpty","folderTabMode","linkedEntries","clickEntry","entry","inputEle","toggleValue","checkboxTextEle","selectEntry","primaryDefBlockquoteEle","mainInputEle","isLinkedEntry","disabled","setDisabled","buttonEle","populateFolderTab","linkedElesSpecifier","specifierGroup","entriesGroup","blockquoteEle","primaryDefEle","firstInputEle","blockquotesEle","openBlockquotes","attemptOpenBlockquotesNew","getParseFirstLineMode","lineMode","parseFirstLine","dictMode","attemptHideList","removeListMode","eleText","len","parseFirstLines","defDetails","RefreshCard","imgStylizer","asyncManager","addImgStylizer","addAsyncManager","refreshCard","refreshMutex","refreshAdjustElements","CardCache","cardCacheEle","getFieldValueEle","isExpired","writeTimeStr","expiryDurationStr","writeTime","Date","now","noteType","playAudioFunc","onerror","onunhandledrejection","errorEvent","reason","audioPlaybackMode","optsScript"],"sourceRoot":""}