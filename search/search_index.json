{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Welcome to jp-mining-note's documentation! Here are a few demos:</p> GUIFieldsCard CreationFront | DarkBack | DarkFront | LightBack | Light <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p>Interested in getting this setup?</p> <p>Click here to get started!</p>"},{"location":"alternatives/","title":"Alternatives","text":"<p>This page is dedicated to gathering various note types and decks that isn't jp-mining-note. These are added in order of when I first come across the note type, so it's roughly ordered from the oldest to newest note types.</p> <p>I personally try to add as many templates as I can find here, but it's likely I will miss some. Feel free to let me know of any note types you find interesting (including your own note type, or modified versions of this note), and I will very likely add it here! (Brownie points if you make a pull request for it too!)</p>"},{"location":"alternatives/#note-types","title":"Note Types","text":""},{"location":"alternatives/#anime-cards","title":"Anime Cards","text":"<p> Website\u30fbDownload\u30fbContact </p> <p>Example images</p> Image 1Image 2 <p></p> <p></p>"},{"location":"alternatives/#lazy-guide-xelieus-modified-anime-card","title":"(Lazy Guide) Xelieu's Modified Anime Card","text":"<p> Website &amp; Download\u30fbContact: <code>Xelieu#8158</code> (TMW server) </p> <p>Example images (bilingual examples not shown)</p> Modern | DarkModern | LightSimple | DarkSimple | Dark (alternative)Simple | Light <p></p> <p></p> <p></p> <p></p> <p></p>"},{"location":"alternatives/#stegatxins0s-modified-anime-card","title":"stegatxins0's Modified Anime Card","text":"<p> Website &amp; Download\u30fbContact: Private1 </p> <p>Example image</p> <p></p>"},{"location":"alternatives/#tatsumotos-tsc","title":"Tatsumoto's TSC","text":"<p> Website\u30fbDownload\u30fbMirror\u30fbContact </p> <ul> <li>TSC is short for \"Targeted sentence cards\"</li> <li>jp-mining-note is a heavily modified version of this (to the point of it being completely rewritten)</li> </ul> <p>Example image</p> <p></p>"},{"location":"alternatives/#ajatt-tools-ankinotetypes","title":"AJATT-Tool's AnkiNoteTypes","text":"<p> Website\u30fbContact </p> <ul> <li>A collection of user-created notes. Most are based off of the above TSC template.</li> <li>The examples below do not showcase every note. Visit the <code>templates</code> folder on the website to see all the available notes.</li> </ul> <p>Examples</p> JP1K TSC (dark)JP1K TSC (light)FallbackWordSentence (cyphar) <p> /templates/Japanese JP1K TSC </p> <p> /templates/Japanese JP1K TSC </p> <p> /templates/Japanese fallback </p> <p> /templates/Japanese words </p> <p> /templates/Japanese Mined Sentences (cyphar) </p>"},{"location":"alternatives/#mooniebiloneys-note-types","title":"MoonieBiloney's Note Types","text":"<p> Website\u30fbDownload\u30fbContact </p> <ul> <li>Some require a Patreon subscription to access</li> </ul>"},{"location":"alternatives/#eminent-note-type","title":"Eminent Note Type","text":"<p> Website &amp; Download\u30fbContact: <code>eminent#8189</code> (Perdition's server) </p> <p>Example images</p> FrontBack <p></p> <p></p>"},{"location":"alternatives/#elaxs-note-type","title":"Elax's Note Type","text":"<p> Download\u30fbContact: <code>\u3069\u3093\u5e95#6628</code> (TMW server) </p> <p>Example images</p> Front | DarkBack | DarkFront | LightBack | Light <p></p> <p></p> <p></p> <p></p> Description from the author <p>This is my anki card format it is based in the Gruvbox color scheme (https://github.com/morhetz/gruvbox) and changes dynamically with your Anki theme, you will need this handlebars in yomichan for it to work: https://pastebin.com/KSjbwrHk (It is a modified version of the one in animecards, the only thing it changes is the color of the pitch pattern so it changes dynamically with the Anki theme) although if you're going to use the dark theme and you already have the animecards handlebars is not neccessary to download it although I still recommend it.</p> <p>You can change between vocab card, sentence card, vocab audio card, and sentence audio card. </p> <p> (Original discord message, on TMW server) </p>"},{"location":"alternatives/#timms-anki-template","title":"Timm's Anki Template","text":"<p> Download\u30fbDownload (alternative theme)\u30fbContact: <code>Timm#3250</code> (TMW server) </p> <p>Examples</p> ImageVideo <p></p> <p></p> Description from the author <p>UPDATE1: tango wasn't being colored in the sentence so i fixed it, check yomichan screen shot and add the css UPDATE2: added css</p> <p>Here is my anki template, which is the result of bits I liked from other templates which I tried to glue together with my limited knowledge of programming.</p> <p>https://streamable.com/j3etpw</p> <p>Includes a card mined from the VN Steins;Gate 0 and a card from the LN \u5fd8\u5374\u63a2\u5075</p> <p>Yomichan: https://i.imgur.com/vuHoVlM.png</p> <p>Add this to the styling page of the template in anki</p> <ul> <li>Handlebars: https://pastebin.com/TeSJc6ij</li> </ul> <p>Features:</p> <ul> <li>Automatic pitch coloring from https://ankiweb.net/shared/info/1557722832 iirc</li> <li>Semi-automatic title generation, so you know from which anime/VN etc. a word is from</li> <li>drop down page for multiple definitions, that are automatically added</li> <li>The same features as look below (you can reverse a word to be a sentence card, audio card etc, with one click)</li> <li>has full coverage with the intergration of embedded websites (more on this in the next section)</li> <li>NSFW filter to blur pictures from here https://rentry.co/mining</li> <li>stroke order for vocab that can be activated if you do so (most of the time the stroke order is clear, but what i implemented it for, is for that \u4e07\u304c\u4e00 case where a word has a weird stroke order, making it easier to remember)</li> <li>horrible and clusstered code made by me</li> </ul> <p>Note: This template is has following imperfections:</p> <ol> <li>Idk how to insert a line break when a word has multiple readings, picture of the problem https://i.imgur.com/YQpRgOj.png</li> <li>Websites for more coverage are not displayed correct on mobile, also idk how to fix it </li> <li>I think images are not responsively sized on mobile</li> </ol> <p>DM me if you have problems recreating the template (\u7de8\u96c6\u6e08)</p> <p>CSS update:</p> <p>Add this to the styling of the template in anki and check the yomichan screenshot above</p> <pre><code>.jpsentence {\nmargin: 20px 0 0 0;\nfont-size: 35px;\ntext-align:center;\n}\n.pcolor {\ndisplay: inline-block;\n}\n</code></pre> <p>add this to .img2 and .img: </p><pre><code>display:flex;\njustify-content: center;\nalign-items:center;\nmargin: 0 auto;\n</code></pre> <p>add this exclusively to .img2: </p><pre><code>margin-bottom: 25px;\n</code></pre> <p>Remove on the front template the div with jpsentence for the tango </p> <p> (Original discord message, on TMW server) </p>"},{"location":"alternatives/#tigy01s-note-type","title":"Tigy01's Note Type","text":"<p> Website\u30fbDownload\u30fbContact: <code>Tigy01#1231</code> (Refold (JP) Server) </p> <p>Example images</p> FrontBack <p></p> <p></p>"},{"location":"alternatives/#stazors-note-type","title":"Stazor's Note Type","text":"<p> Download\u30fbOriginal discord message\u30fbContact: <code>Stazor#6633</code> (TMW server) </p> <ul> <li>The download link contains a <code>readme.txt</code> that has instructions on how to setup the fields &amp; basic info on the card</li> </ul> <p>Example images</p> FrontFront (on hover)BackBack (light) <p></p> <p></p> <p></p> <p></p>"},{"location":"alternatives/#rudnams-note-type","title":"rudnam's Note Type","text":"<p> Website &amp; Download\u30fbContact: <code>rudnam#8661</code> (Refold (JP) Server) </p> <p>Example images</p> Full demoVocabSentence <p></p> <p></p> <p></p>"},{"location":"alternatives/#jidoujishos-note-type","title":"jidoujisho's Note Type","text":"<p>The app jidoujisho comes with its own Anki template, that should be automatically generated on the first card add when using the app.</p>"},{"location":"alternatives/#jo-mako-audio","title":"Jo-Mako - Audio","text":"<p> Website &amp; Download &amp; Contact </p> <ul> <li>Audio and picture at the front, everything else at the back</li> </ul> <p>Example images</p> FrontBackKanji Popup <p></p> <p></p> <p></p>"},{"location":"alternatives/#jo-mako-reading","title":"Jo-Mako - Reading","text":"<p> Website &amp; Download &amp; Contact </p> <ul> <li>Sentence at the front (with revealable picture and reading). Meaning at the back.</li> </ul> <p>Example images</p> Example 1Example 2 <p></p> <p></p>"},{"location":"alternatives/#mallys-note-type","title":"Mally's Note Type","text":"<p> Website &amp; Download </p> <p>Example images</p> FrontBack <p></p> <p></p>"},{"location":"alternatives/#nocompos-note-type","title":"Nocompo's Note Type","text":"<p> Website &amp; Download </p> <p>Example images</p> FrontBack <p></p> <p></p>"},{"location":"alternatives/#klierets-templates","title":"Klieret's Templates","text":"<p> Website &amp; Download </p>"},{"location":"alternatives/#anacreons-template","title":"Anacreon's Template","text":"<p> Website &amp; Download </p> <p>Example image</p> <p></p>"},{"location":"alternatives/#decks","title":"Decks","text":""},{"location":"alternatives/#kanken-deck","title":"Kanken deck","text":"<p> Website &amp; Download\u30fbContact </p> <ul> <li>The definitive deck to use for learning how to write kanji</li> <li>Not a note type used for mining</li> <li>Also see: Xelieu's alternative theme</li> </ul> <p>Example image</p> <p></p>"},{"location":"alternatives/#nihongokyoshi-anki-deck","title":"NihongoKyoshi Anki Deck","text":"<p> Download\u30fbOriginal discord message\u30fbContact: <code>medamayaki#0328</code> (TMW server) </p> <ul> <li>Monolingual grammar deck</li> </ul> <p>Example images</p> Front | DarkBack | DarkFront | LightBack | Light <p></p> <p></p> <p></p> <p></p>"},{"location":"alternatives/#other-decks","title":"Other Decks","text":"<ul> <li>Decks from AJATT</li> <li>Decks from TMW</li> </ul>"},{"location":"alternatives/#everything-else-not-made-specifically-to-learn-japanese","title":"Everything Else (Not made specifically to learn Japanese)","text":"<ul> <li>Prettify</li> <li>Modern Card Themes</li> <li>Anki Cards Templates SuperList</li> <li>Raagaception's 12STD CBSE Deck (Science stream, PCM)</li> <li>Anki Minimal Language Learning Template</li> <li>Awesome Anki</li> </ul> <ol> <li> <p>He seems to have left TMW Discord server, and his demo video on Youtube was privated. I assume he no longer wants to be contacted.\u00a0\u21a9</p> </li> </ol>"},{"location":"autopa/","title":"Pitch Accent","text":"<p>This page is dedicated to showcasing how pitch accent is displayed, and various ways to edit said display.</p>"},{"location":"autopa/#what-is-pitch-accent","title":"What Is Pitch Accent?","text":"<p>Here is a (slightly modified) excerpt taken from the AJT Japanese Github page that explains the notation well:</p> <p>Quote</p> <p>For more information on the Japanese pitch accent, I would like to refer you to this wikipedia article. In short, the following notations can be found:</p> <ul> <li>Overline: Indicates \"High\" pitch (see \"Binary pitch\" in Wikipedia article).</li> <li>Overline downstep: usually means stressing the mora/syllable before.</li> <li> <p>Red circle mark: Nasal pronunciation.</p> <p>For example, \u3052 would be a nasal \u3051, and would represented as \u3051\u00b0.</p> </li> <li> <p>Blue color: Devoiced mora (barely pronounced at all).</p> <p>For example, \u30d2 would be closer to h than hi.  Likewise, \u30af would be more like a k than ku.</p> </li> </ul>"},{"location":"autopa/#specifying-pitch-accent","title":"Specifying Pitch Accent","text":"<p>The displayed pitch accent is usually the first position found in <code>PAPositions</code>. However, you can override this automatically chosen position using the <code>PAOverride</code> field.</p> <p></p> <p>The demo above covers the most basic usage of <code>PAOverride</code>, which should suffice for most people.</p> <p>The rest of the page covers the details on exactly how <code>PAOverride</code> works, and all the ways to customize how the pitch accent is displayed.</p>"},{"location":"autopa/#colored-pitch-accent","title":"Colored Pitch Accent","text":"<p>The reading, word and pitch overline can be automatically colored in Migaku style colors, according to the pitch accent.</p> <p>This automatic coloring behavior is disabled by default, and must be enabled in the runtime options:</p> Enabling colored pitch accent (click here) <pre><code>\"auto-pitch-accent\": {\n\"enabled\": true, // (1)!\n\"colored-pitch-accent\": {\n\"enabled\": true,\n// ...\n}\n// ...\n}\n</code></pre> <ol> <li>The <code>auto-pitch-accent</code> module must be enabled to use colored pitch accent.</li> </ol> <p></p> <p>Note</p> <p>The \u8d77\u4f0f pattern is not automatically detected. To use this color, you must manually set the <code>PAOverride</code> field to <code>-1</code>.</p> <p></p>"},{"location":"autopa/#pitch-accent-groups","title":"Pitch Accent Groups","text":"Anki Tag \u65e5\u672c\u8a9e Example Reading heiban \u5e73\u677f \u81ea\u7136 \u3057\u305c\u3093\uffe3 atamadaka \u982d\u9ad8 \u4eba\u751f \u3058\uff3c\u3093\u305b\u3044 nakadaka \u4e2d\u9ad8 \u5f31\u70b9 \u3058\u3083\u304f\u3066\uff3c\u3093 odaka \u5c3e\u9ad8 \u9053\u5177 \u3069\u3046\u3050\uff3c kifuku \u8d77\u4f0f \u9a5a\u304f \u304a\u3069\u308d\uff3c\u304f"},{"location":"autopa/#when-pitch-is-not-automatically-colored","title":"When Pitch Is Not Automatically Colored","text":"<p>Pitch accent coloring requires a numeric position value somewhere within the card. This is usually found in one of two places:</p> <ul> <li><code>PAPositions</code></li> <li><code>PAOverride</code></li> </ul> <p>Usually, <code>PAPositions</code> is automatically filled.</p> <p>In the cases where pitch accent coloring does not work as expected, your two main options are:</p> <ol> <li>Using <code>PAOverride</code> with a number (recommended).</li> <li>Force the pitch accent group with tags (see below).</li> </ol> <p></p>"},{"location":"autopa/#override-pitch-accent-group","title":"Override Pitch Accent Group","text":"<p>In some extremely rare cases, you must set manually set the pitch accent group, if the available options do not work. To do this, add the appropriate tag to the card.</p> <p>The exact tags that can be used are shown in the summary table above, under the <code>Anki Tag</code> and \u65e5\u672c\u8a9e sections. For example, the tag can be <code>heiban</code>, <code>\u5e73\u677f</code>, etc.</p> <p>Note</p> <p>The tag only overrides the pitch accent color, and does not affect the pitch accent representation itself.</p> <p>This fact can be useful for certain exceptions, such as how \u901a\u308b is [1] instead of [2]. If you want to use the \u8d77\u4f0f pattern on \u901a\u308b, you will have to set the <code>PAOverride</code> value to <code>1</code>, and then add the <code>\u8d77\u4f0f</code> tag.</p> <p>TODO image of above (without tag, with tag)</p>"},{"location":"autopa/#how-pitch-accent-is-selected","title":"How Pitch Accent is Selected","text":"<p>Pitch accent is selected based on the following priority:</p> <ol> <li>PAOverrideText</li> <li>PAOverride</li> <li>PAPositions</li> <li>AJTWordPitch</li> </ol> <p>The first field that is non-empty will be the field that is used to display the pitch accent.</p> <p>Note</p> <p>When the <code>auto-pitch-accent</code> module is disabled, the priority changes to the following:</p> <ol> <li><code>PAOverrideText</code></li> <li><code>PAOverride</code></li> <li><code>AJTWordPitch</code></li> </ol> <p>Of course, as the module is disabled, <code>PAOverride</code> will not be parsed in any way. More info on this can be found in the PAOverride field section below.</p>"},{"location":"autopa/#1-paoverridetext","title":"(1) PAOverrideText","text":"<p>New in version <code>0.11.0.0</code> (latest version: <code>0.11.0.3</code>)</p> <p>If the <code>PAOverrideText</code> field is filled, then this field is displayed exactly as is, without any changes or parsing. This provides the most flexibility, but the least ease of usage.</p> <p> </p>      PAOverrideText with: \"Hello world!\""},{"location":"autopa/#2-paoverride","title":"(2) PAOverride","text":"<p>The <code>PAOverride</code> allows for two primary formats: positions and text format. If the field contents cannot be parsed in either of these formats, then the field is displayed without any special formatting. This will act just like <code>PAOverrideText</code>.</p> <p></p>"},{"location":"autopa/#21-paoverride-positions-format","title":"(2.1) PAOverride: Positions Format","text":"<p>When the <code>PAOverride</code> field contains any number, that number will be considered as the downstep position, and be rendered as such. The number <code>-1</code> represents the \u8d77\u4f0f pattern, and can be used to set the downstep to be after the second last mora.</p> <p>Examples (on the \u507d\u8005 card):</p> PAOverride Result Notes <code>0</code> \u30cb\u30bb\u30e2\u30ce <code>1</code> \u30cb\ua71c\u30bb\u30e2\u30ce <code>-1</code> \u30cb\u30bb\u30e2\ua71c\u30ce \u8d77\u4f0f"},{"location":"autopa/#multiple-numbers","title":"Multiple Numbers","text":"<p>New in version <code>0.11.0.0</code> (latest version: <code>0.11.0.3</code>)</p> <p>Multiple numbers can be used, as long as they are separated by commas. This is useful on certain words with devoiced mora, where the pitch accent can be multiple positions with little real distinction.</p> <p>Additionally, individual numbers can be bolded to grey out the other positions. This is useful to highlight the correct pitch accent among all possiblities.</p> <p>Examples (on the \u507d\u8005 card):</p> PAOverride Result Notes <code>0,2,4</code> \u30cb\u30bb\u30e2\u30ce\u30fb\u30cb\u30bb\ua71c\u30e2\u30ce\u30fb\u30cb\u30bb\u30e2\u30ce\ua71c <code>0 ,2, 4</code> \u30cb\u30bb\u30e2\u30ce\u30fb\u30cb\u30bb\ua71c\u30e2\u30ce\u30fb\u30cb\u30bb\u30e2\u30ce\ua71c The parser ignores all whitespace. <code>&lt;b&gt;0&lt;/b&gt;,2,4</code> \u30cb\u30bb\u30e2\u30ce\u30fb\u30cb\u30bb\ua71c\u30e2\u30ce\u30fb\u30cb\u30bb\u30e2\u30ce\ua71c <p>Restrictions on bolded numbers</p> <p>Multiple numbers cannot be bolded together. If you want to bold multiple numbers, they have to be bolded individually. Additionally, commas cannot be bolded.</p> <p>For example, <code>0,&lt;b&gt;1&lt;/b&gt;,&lt;b&gt;2&lt;/b&gt;,3</code> is valid, but <code>0,&lt;b&gt;1,2&lt;/b&gt;,3</code> and <code>0,&lt;b&gt;1,&lt;/b&gt;2,3</code> are invalid.</p> <p></p>"},{"location":"autopa/#22-paoverride-text-format","title":"(2.2) PAOverride: Text Format","text":"<p>New in version <code>0.11.0.0</code> (latest version: <code>0.11.0.3</code>)</p> How To Type Special Characters (click here) <p>This section requires you to type certain special characters. You can type these characters on any standard IME.</p> Characters Result <code>\\</code> \uff3c <code>\u3046\u3048</code> (<code>ue</code>) \uffe3 <code>,</code> \u3001 <code>/</code> \u30fb <p>If no number is found within the <code>PAOverride</code> field, the contents will be parsed using this format.</p> <p>To define any pitch accent in text format, use \u300c\uff3c\u300d to specify downstep. For example, \u4eba\u751f should be written as \u300c\u3058\uff3c\u3093\u305b\u3044\u300d.</p> <p>For words with no downstep (\u5e73\u677f\u578b), the \u300c\uffe3\u300d character must be placed at the end of the word. For example, \u8eab\u9577 should be written as \u300c\u3057\u3093\u3061\u3087\u3046\uffe3\u300d.</p> Removing the required \uffe3 symbol (click here) <p>The restriction that \u5e73\u677f words require the \uffe3 symbol at the end can be removed using the following runtime option:</p> <pre><code>{\n\"modules\": {\n\"auto-pitch-accent\": {\n\"pa-override\": {\n// set to false (default: true)\n\"heiban-marker-required\": false,\n}\n}\n}\n}\n</code></pre> <p>This would allow any words without any downstep marker to be rendered as \u5e73\u677f. Using the above example, one can instead type \u8eab\u9577 as \u300c\u3057\u3093\u3061\u3087\u3046\u300d.</p> <p>Examples:</p> PAOverride Result \u3058\uff3c\u3093\u305b\u3044 \u30b8\ua71c\u30f3\u30bb\u30a4 \u3044\u304d\u304a\uff3c\u3044 \u30a4\u30ad\u30aa\ua71c\u30a4 \u3069\u3046\u3050\uff3c \u30c9\u30a6\u30b0\ua71c \u3057\u3093\u3061\u3087\u3046\uffe3 \u30b7\u30f3\u30c1\u30e7\u30a6"},{"location":"autopa/#multiple-words","title":"Multiple Words","text":"<p>Multiple words can be defined, as long as they are separated with either the \u300c\u30fb\u300d or \u300c\u3001\u300d characters.</p> <p>This is particularly useful on expressions with multiple words, such as \u300c\u6bd2\u3092\u98df\u3089\u308f\u3070\u76bf\u307e\u3067\u300d.</p> <p>Examples:</p> PAOverride Result \u3069\u304f\uff3c\u3001\u304f\u3089\u3046\uffe3\u3001\u3055\u3089\uffe3 \u30c9\u30af\ua71c\u3001\u30af\u30e9\u30a6\u3001\u30b5\u30e9 \u3061\uff3c\u304b\u30fb\u3061\u304b\uff3c \u30c1\ua71c\u30ab\u30fb\u30c1\u30ab\ua71c <p>Note</p> <p>This renderer will not accept any field with formatting. This means that bold, italics, overlines, etc. cannot be present in the field. For example, the input <code>&lt;b&gt;\u306b\u305b\u3082\u306e&lt;/b&gt;</code> will be rejected.</p> <p></p>"},{"location":"autopa/#23-paoverride-raw-text","title":"(2.3) PAOverride: Raw Text","text":"<p>As a last case resort, if the input of this field cannot be parsed as either of the two, the exact contents of <code>PAOverride</code> will be displayed. This will behave exactly the same as <code>PAOverrideText</code>.</p>"},{"location":"autopa/#3-papositions","title":"(3) PAPositions","text":"<p>This field is automatically filled out as long as Yomichan has pitch accent dictionaries, and the tested word is covered in said dictionary.</p> <p>By default, the first pitch of the first dictionary is shown.</p> <p></p>"},{"location":"autopa/#show-all-possibilities-in-dictionary","title":"Show All Possibilities in Dictionary","text":"<p>New in version <code>0.11.0.0</code> (latest version: <code>0.11.0.3</code>)</p> <p>Sometimes, pitch accent dictionaries show multiple pitch accents for a word. However, only the first pitch accent is shown by default.</p> One entry (default)All entriesOne entry + boldAll entries + bold <p></p> <p></p> <p></p> <p></p> <p>If you want to show all of the pitch accent entries (in the first dictionary), use the following runtime option:</p> <pre><code>{\n\"modules\": {\n\"auto-pitch-accent\": {\n\"pa-positions\": {\n// default: true\n\"display-entire-dictionary\": false\n}\n}\n}\n}\n</code></pre> <p>If you want to select the correct pitch accent, bold that position in <code>PAPositions</code> (or simply use <code>PAOverride</code> as described above)</p> <p>Note</p> <p>This option only works on cards formatted with JPMN's <code>{jpmn-pitch-accent-positions}</code> marker. This means this option will not work on old cards that were imported to the <code>JPMN</code> format.</p>"},{"location":"autopa/#4-ajtwordpitch","title":"(4) AJTWordPitch","text":"<p>If you have the optional AJT Pitch Accent add-on installed and correctly configured, then this field is automatically generated on all cards.</p> <p>This is used as a fallback option, in case your installed pitch accent dictionaries does not cover the tested content, but this add-on does.</p>"},{"location":"autopa/#how-the-reading-is-selected","title":"How the Reading is Selected","text":"<p>The reading consists of the actual kana that is shown on the card. By default, the word reading is selected based on the following priority:</p> <ol> <li><code>AJTWordPitch</code></li> <li><code>WordReading</code></li> </ol> <p></p>"},{"location":"autopa/#reading-ajtwordpitch","title":"Reading: AJTWordPitch","text":"<p>Usually, the reading is selected from <code>AJTWordPitch</code>. This has a few features over the raw word reading:</p> <ul> <li><code>AJTWordPitch</code> usually includes devoiced and nasal info, whereas <code>WordReading</code> does not.</li> <li>Readings are katakana, and cannot be changed to hiragana.</li> </ul> <p>Note</p> <p>If you do not want the reading in <code>AJTWordPitch</code> to be used, change the following runtime option to <code>false</code>:</p> <pre><code>{\n\"modules\": {\n\"auto-pitch-accent\": {\n// set to false (default: true)\n\"search-for-ajt-word\": false,\n}\n}\n}\n</code></pre> <p></p>"},{"location":"autopa/#reading-wordreading","title":"Reading: WordReading","text":"<p>If the word cannot be found under <code>AJTWordPitch</code>, then the default reading in <code>WordReading</code> is used, and displayed in katakana.</p> <p>Unlike <code>AJTWordPitch</code>, this reading can be changed to hiragana, katakana, or katakana with long vowel marks in the runtime options:</p> <pre><code>{\n\"modules\": {\n\"auto-pitch-accent\": {\n// 0: whatever is shown in WordReading (usually hiragana, but can sometimes be katakana)\n// 1: force katakana\n// 2: force katakana with long vowel marks\n\"reading-display-mode\": 1,\n}\n}\n}\n</code></pre>"},{"location":"autopa/#pitch-accent-styling-details","title":"Pitch Accent Styling Details","text":"<p>This covers some details if you are directly using <code>PAOverrideText</code>, and want to have a similar format to the generated pitch accent. You very likely won't be doing this.</p> <ul> <li> <p>The generated style is exactly the generated style of the AJTWordPitch field.     To display the style properly, copy and edit the HTML tags directly.</p> </li> <li> <p>If you want to grey out other words, you will have to use the bold <code>&lt;b&gt;</code> tag.     However, you must wrap the greyed out words with the <code>&lt;b&gt;</code> tag.</p> <p>This is the opposite of what would expect from everything in this page, but the behavior is this way due to restrictions in the current CSS specification.</p> </li> <li> <p>Example with all possible styles:     </p><pre><code>\u30c1\u30e5&lt;span style=\"text-decoration:overline;\" class=\"pitchoverline\"&gt;\u30fc\u30ab&lt;span class=\"nasal\"&gt;\u00b0&lt;/span&gt;&lt;/span&gt;&lt;span class=\"downstep\"&gt;&lt;span class=\"downstep-inner\"&gt;\ua71c&lt;/span&gt;&lt;/span&gt;&lt;span class=\"nopron\"&gt;\u30af&lt;/span&gt;\u30bb\u30a4&lt;b&gt;\u30fb\u30c1\u30e5&lt;span style=\"text-decoration:overline;\" class=\"pitchoverline\"&gt;\u30fc\u30ab&lt;span class=\"nasal\"&gt;\u00b0&lt;/span&gt;&lt;span class=\"nopron\"&gt;\u30af&lt;/span&gt;&lt;/span&gt;&lt;span class=\"downstep\"&gt;&lt;span class=\"downstep-inner\"&gt;\ua71c&lt;/span&gt;&lt;/span&gt;\u30bb\u30a4&lt;/b&gt;\n</code></pre> </li> </ul>"},{"location":"building/","title":"Building","text":""},{"location":"building/#technical-summary","title":"Technical Summary","text":"<p>The Anki card template is generated through <code>jinja</code> templates, which is a popular templating engine for <code>Python</code>. All of these templates are located under the <code>(root)/src</code> folder.</p> <p>The Anki templates are generated through a combination of <code>sass</code> (for css) and <code>jinja</code> (for everything else), through the <code>tools/make.py</code> script.</p> <p>You must build the note to use compile-time options.</p> <p>Additionally, if you want to use bleeding edge features (the absolute latest features, which are potentially riddled with bugs), you must build and install the note from the <code>dev</code> branch. More info about this is shown later.</p> <p>Note</p> <p>The instructions listed below will be primarily Linux based. Notes for other operating systems may be shown, but are not guaranteed.</p> <p>It is also assumed that you have knowledge of basic command line.</p>"},{"location":"building/#building","title":"Building","text":""},{"location":"building/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.10.6 or higher<ul> <li>I recommend pyenv to upgrade your python version   if you're running linux. and have a lower version of Python.</li> </ul> </li> <li>sass (dart implementation)<ul> <li>The dart implementation is required to use the latest features of sass.</li> </ul> </li> <li>Anki 2.1.49 or higher (2.1.54+ is highly recommended)</li> <li>Anki-Connect addon</li> </ul>"},{"location":"building/#initialization","title":"Initialization","text":"<p>The following creates a custom python environment with <code>venv</code>, so that packages aren't installed into your global python environment.</p> <pre><code># on fresh installs\ngit clone https://github.com/Aquafina-water-bottle/jp-mining-note.git\ncd jp-mining-note\n\n# alternatively, if you already have the repository on your system:\ngit pull origin/master\n\n# You may have to use `python` instead of `python3`, and `pip` instead of `pip3`.\npython3 -m venv .\n\n# The following is for POSIX (bash/zsh) only.\n# See how to activate venv on your system in the official documentation:\n# https://docs.python.org/3/library/venv.html\nsource ./bin/activate\n\npip3 install -r tools/requirements.txt\n</code></pre> <p>Some additional options with <code>venv</code> are shown below.</p> Disabling the venv <pre><code>deactivate\n</code></pre> Resetting the venv <pre><code># run this only if you're already in a venv\ndeactivate\n\nrm -r bin lib\npython3 -m venv .\nsource ./bin/activate\npip3 install -r tools/requirements.txt\n</code></pre> Don't want to use venv? <p>It is highly recommended that you use venv, or something else that isolates the python environment.</p> <p>However, in case you don't want to use <code>venv</code>, you can manually install the dependencies (including dependencies for building documentation): </p><pre><code>pip3 install \\\nJSON-minify jinja2 black pytest \\\nmkdocs mkdocs-video mkdocs-material mkdocs-macros-plugin \\\nmkdocs-git-revision-date-localized-plugin\n</code></pre> <p>Note</p> <p>The <code>master</code> branch is the stable version of the note.</p> <p>If you want to build the bleeding edge version of the note, use the <code>dev</code> branch. For example, do the following: </p><pre><code>deactivate # if you are currently in a venv\ngit fetch\ngit checkout dev\n\npython3 -m venv .\nsource ./bin/activate\n</code></pre> <p></p>"},{"location":"building/#building-and-installing","title":"Building and Installing","text":"<p>After setting up the <code>venv</code>, you are ready to build and install the note.</p> <pre><code>cd tools\n\n# builds the note into the ./build folder\npython3 make.py\n\n# installs the note from the ./build folder\n# WARNING: completely overrides current note that is installed!\n# Please make a backup of your collection before doing this!\npython3 install.py --from-build --update\n</code></pre> <p>Warning</p> <p>If you are attempting to (build and) install the bleeding edge (<code>dev</code>) version of the note at ALL, use the <code>--dev-output-version=\"0.12.0.0\"</code> flag on the <code>install.py</code> (or <code>main.py</code>) script. For example: </p><pre><code>python3 main.py --dev-output-version=\"0.12.0.0\"\n</code></pre> <p>There are also some related notes for the current dev build:</p> <ul> <li> <p>If you're on 2.1.54 or below, you'll want to add <code>legacy-anki_2-1-54</code> to the <code>css-folders</code> of the config.py, i.e. </p><pre><code>\"css-folders\": [\"base\", \"responsive\", \"dictionaries\", \"editor-fields\", \"legacy-anki_2-1-54\", \"theme\", \"extra\"],\n</code></pre> </li> <li> <p>The font size of some fields aren't automatically changed yet, so you'll have to adjust them manually in order for it to look nice: </p><pre><code>\"WordReadingHiragana\": 10,\n\"PrimaryDefinitionPicture\": 20, # default\n\"PAOverrideText\": 20, # default\n\"YomichanWordTags\": 10,\n\"IsHintCard\": 10,\n</code></pre> </li> <li> <p>In addition to the above, you would likely want to match the font family with all the other fields,     as the font family for new fields is not updated either.</p> </li> </ul> <p>Note</p> <p>Running the <code>main.py</code> script is exactly equivalent of running the above two commands.</p> <p>Note</p> <p>If you are attempting to (build and) install the bleeding edge version of the note on an Anki profile that does NOT already have the note installed, you have to run the installation script twice. For example:</p> <pre><code>python3 make.py\npython3 install.py --from-build --update\npython3 install.py --from-build --update\n</code></pre> <p>Additional things you can do with the project are shown below.</p> <p></p>"},{"location":"building/#running-tests","title":"Running Tests","text":"<pre><code>cd tools\npython3 -m pytest ./tests\n</code></pre>"},{"location":"building/#building-the-documentation","title":"Building the Documentation","text":"<p>To \"build\" the documentation, all you have to do is the following: </p><pre><code>cd docs\n\n# you should now be in (root)/docs, where the mkdocs.yml is.\nmkdocs serve\n</code></pre> <p>This will allow you to preview the website (usually at <code>http://127.0.0.1:8000/jp-mining-note/</code>).</p> <p>If you are looking to edit the documentation, all related files should be found under this <code>docs</code> folder. The important markdown files are found under: </p><pre><code>(root)\n  L docs\n     L docs\n        L index.md # the home page\n        L preface.md\n        L setup.md\n        L ...\n     L mkdocs.yml\n</code></pre>"},{"location":"building/#common-errors","title":"Common Errors","text":"<p>(TODO) Fill this out as people start working with this note</p>"},{"location":"cardtypes/","title":"Card Types","text":""},{"location":"cardtypes/#overview","title":"Overview","text":"<p>Previously, this note type only had vocab and sentence cards. Although I was originally fine with this, I started to realize some issues with only having these two card types:</p> <ul> <li>Vocab cards that require context have to be turned into sentence cards, and</li> <li>Sentence cards take a very long time to review, and can create context-based memories.</li> </ul> <p>I found that many vocab cards had to be turned into sentence cards, since either the context was fundamental to understanding the definition, or there were other parts of the sentence that I wanted to test. This lead to many sentence cards, which naturally meant that Anki sessions lasted longer.</p> <p>I attempted to tackle these exact issues by introducing new card types outside of the fundamental vocab and sentence cards.</p> <p></p>"},{"location":"cardtypes/#vocab-card","title":"Vocab Card","text":"<p>A vocab card simply shows the target word at the front. You test yourself on the reading and definition of the word.</p> <p>How to create:  This is the default card type. Nothing has to be done for the card to be a vocab card.</p>"},{"location":"cardtypes/#sentence-card","title":"Sentence Card","text":"<p>A sentence card simply shows the entire sentence at the front. You test yourself on the reading and meaning of the entire sentence.</p> <p>How to create:  Fill the <code>IsSentenceCard</code> field.</p>"},{"location":"cardtypes/#targeted-sentence-card-tsc","title":"Targeted Sentence Card (TSC)","text":"<p>A targeted sentence card is a special case of the sentence card. The sentence is shown at the front, but only the highlighted content (only the word by default) is tested. This allows you to have all the information and context of the sentence, but you don't have to waste your time testing other parts of the sentence.</p> <p>This card type was originally defined here.</p> <p>How to create:  Fill the <code>IsTargetedSentenceCard</code> field.</p>"},{"location":"cardtypes/#hint-cards","title":"Hint Cards","text":"<p>Hint cards are a group of card types that display the sentence below the word. This acts as a better alternative compared to manually adding the sentence in the <code>Hint</code> (or <code>HintNotHidden</code>) field.</p> <p></p>"},{"location":"cardtypes/#hint-vocab-card","title":"Hint Vocab Card","text":"<p>Warning</p> <p>New as of version <code>0.12.0.0</code>. This version is currently bleeding edge, so this feature cannot be used unless you compile the templates from the dev branch.</p> <p>TODO img</p> <p>A hint vocab card is simply a vocab card that shows the sentence below the word. The tested content is the word itself, so you would test yourself as if it were a TSC or Hover Vocab card.</p> <p>How to create:  Fill the <code>IsHintCard</code> field.</p> <p></p>"},{"location":"cardtypes/#hint-vocab-card-highlighted","title":"Hint Vocab Card (highlighted)","text":"<p>Warning</p> <p>New as of version <code>0.12.0.0</code>. This version is currently bleeding edge, so this feature cannot be used unless you compile the templates from the dev branch.</p> <p>TODO img</p> <p>This is exactly the same as the Hint Vocab Card, except the word within the sentence is automatically highlighted. This is tested the exact same as the Hint Vocab Card.</p> <p>How to create:  Fill the <code>IsHintCard</code> and <code>IsTargetedSentenceCard</code> fields.</p> <p></p>"},{"location":"cardtypes/#hint-sentence-card","title":"Hint Sentence Card","text":"<p>Warning</p> <p>New as of version <code>0.12.0.0</code>. This version is currently bleeding edge, so this feature cannot be used unless you compile the templates from the dev branch.</p> <p>TODO img</p> <p>A hint sentence card is very similar to a Hint Vocab card, except the tested content is the entire sentence. This is indicated by the fact that the word is colored.</p> <p>This is tested exactly like a Hover Sentence Card.</p> <p>How to create:  Fill the <code>IsHintCard</code> and <code>IsSentenceCard</code> fields.</p> <p></p>"},{"location":"cardtypes/#hint-tsc-card","title":"Hint TSC Card","text":"<p>TODO img</p> <p>Similarily to the normal TSC, this can be used to only test yourself on a specific portion of the sentence. This is tested exactly like a Hover TSC.</p> <p>How to create:  Fill the <code>IsHintCard</code>, <code>IsSentenceCard</code> and <code>IsTargetedSentenceCard</code> fields.</p> <p>Note</p> <p>For all other card types, only <code>IsTargetedSentenceCard</code> has to be filled to create a TSC. However, for hint cards, both <code>IsSentenceCard</code> and <code>IsTargetedSentenceCard</code> must be filled out.</p>"},{"location":"cardtypes/#hybrid-cards","title":"Hybrid Cards","text":"<p>Hybrid cards are a group of card types that attempt to combine the power of sentence cards and vocab cards into one. They all have the distinct feature that the word is shown at the front, while the sentence is hidden but can be shown through some natural means. Additionally, all hybrid cards have some form of underline beneath the tested word, to differentiate it between a vocab card.</p> <p>The primary reason why this exists is to prevent context-based memories. For example, in a TSC or sentence card, you may only remember the tested word due to its surrounding context.</p> <p>Notes</p> <ul> <li> <p>For all forms of hybrid cards, you can press <code>n</code> to toggle     whether the sentence is shown or not.</p> </li> <li> <p>The \"How to test\" sections are simply recommended ways of testing,     and are by no means the required way of testing yourself.     Feel free to test yourself differently depending on whatever you think works the best.</p> </li> </ul> <p></p>"},{"location":"cardtypes/#hover-vocab-card","title":"Hover Vocab Card","text":"<p>A hover vocab word shows the tested word at the front. When you hover over the word, you can see the full sentence, with the tested word highlighted.</p> <p>This acts similarly to a vocab card. However, you are given the option to see the full sentence without failing the card.</p> <p>This is also known as the fallback card.</p> <p>Indicator: Grey &amp; dotted underline under the word.</p> <p>How to test: </p> <ol> <li>Attempt to guess the reading and definition of the word without hovering over the word.</li> <li>If you are able to guess both the reading and definition of the word, flip the card.</li> <li>Otherwise, hover over the word and guess the reading and definition of the word     with the entire sentence.</li> </ol> <p>How to create:  Fill the <code>IsHoverCard</code> field.</p> <p></p>"},{"location":"cardtypes/#click-vocab-card","title":"Click Vocab Card","text":"<p>A click vocab word shows the tested word at the front. When you click on the word, you can see the full sentence, with the tested word highlighted.</p> <p>This card acts as an intermediary between the hover vocab card and the vocab card itself. You must guess the reading BEFORE revealing the sentence, but you can use the sentence to guess the definition.</p> <p>Indicator: Grey &amp; dashed underline under the word.</p> <p>How to test: </p> <ol> <li>Attempt to guess the reading of the word without hovering over the word.     If you are unable to guess the reading of the word before revealing the entire sentence,     then the card must be marked as a fail.</li> <li>After guessing the reading of the word, you can optionally click on the word     to reveal the entire sentence to guess the definition.<ul> <li>In other words, if you can only guess the definition by reading the sentence,     then the card should still be passed.</li> </ul> </li> </ol> <p>How to create:  Fill the <code>IsClickCard</code> field.</p> <p></p>"},{"location":"cardtypes/#hover-sentence-card","title":"Hover Sentence Card","text":"<p>This acts similarly to the hover vocab card. However, the tested content is the entire sentence, so you must hover over the word to test the entire sentence.</p> <p>Indicator: Colored word &amp; dotted underline under the word.</p> <p>How to test: </p> <ol> <li>Attempt to guess the reading and definition of the word without hovering over the word.</li> <li>Regardless of whether you are able to guess the reading and definition of the word,     hover over the word and test yourself on the sentence (as if it was a sentence card).</li> </ol> <p>How to create:  Fill the <code>IsHoverCard</code> and <code>IsSentenceCard</code> fields.</p> <p></p>"},{"location":"cardtypes/#click-sentence-card","title":"Click Sentence Card","text":"<p>This acts similar to the click vocab card. However, similarly to the hover sentence card, the tested content is the entire display, so you must click the word to test the entire display</p> <p>Indicator: Colored word &amp; dashed underline under the word.</p> <p>How to test: </p> <ol> <li>Attempt to guess the reading of the word without hovering over the word.     If you are unable to guess the reading of the word before revealing the entire sentence,     then the card must be marked as a fail.</li> <li>After guessing the reading of the word, click on the word     to reveal the entire sentence, and test yourself on the sentence (as if it was a sentence card).</li> </ol> <p>How to create:  Fill the <code>IsClickCard</code> and <code>IsSentenceCard</code> fields.</p> <p></p>"},{"location":"cardtypes/#hybrid-tsc","title":"Hybrid TSC","text":"<p>Similarly to the normal TSC, if you want to use the hover sentence card or click sentence card to only test a specific portion of the sentence, you can bold the desired selection of the sentence and fill <code>IsTargetedSentenceCard</code>.</p> <p>The above example is a Hover TSC, with the last sentence bolded.</p>"},{"location":"cardtypes/#hybrid-hint-card","title":"Hybrid Hint Card","text":"<p>Warning</p> <p>New as of version <code>0.12.0.0</code>. This version is currently bleeding edge, so this feature cannot be used unless you compile the templates from the dev branch.</p> Hover HintClick Hint <p>TODO image</p> <p>TODO image</p> <p>Similarly to a normal hint card, filling the <code>IsHintCard</code> allows the hybrid card type to reveal the sentence below the word (instead of replacing the word). As this is simply a matter of style, you would test this like any normal hybrid card.</p>"},{"location":"cardtypes/#card-creation-summary","title":"Card Creation Summary","text":"<p>The top row contains shorthands for the actual field names used:</p> <ul> <li>Sent: <code>IsSentenceCard</code></li> <li>TSC: <code>IsTargetedSentenceCard</code></li> <li>Hint: <code>IsHintCard</code></li> <li>Click: <code>IsClickCard</code></li> <li>Hover: <code>IsHoverCard</code></li> </ul> Sent TSC Hint Click Hover Result (Card Type) Vocab Card \ud83d\uddf8 Sentence Card \ud83d\uddf8 TSC \ud83d\uddf8 Hint Vocab Card \ud83d\uddf8 \ud83d\uddf8 Hint Vocab Card (highlighted) \ud83d\uddf8 \ud83d\uddf8 Hint Sentence Card \ud83d\uddf8 \ud83d\uddf8 \ud83d\uddf8 Hint TSC \ud83d\uddf8 Click Vocab \ud83d\uddf8 \ud83d\uddf8 Click Sentence \ud83d\uddf8 \ud83d\uddf8 Click TSC \ud83d\uddf8 \ud83d\uddf8 Click Hint Vocab \ud83d\uddf8 \ud83d\uddf8 \ud83d\uddf8 Click Hint Sentence \ud83d\uddf8 \ud83d\uddf8 \ud83d\uddf8 Click Hint TSC \ud83d\uddf8 Hover Vocab \ud83d\uddf8 \ud83d\uddf8 Hover Sentence \ud83d\uddf8 \ud83d\uddf8 Hover TSC \ud83d\uddf8 \ud83d\uddf8 Hover Hint Vocab \ud83d\uddf8 \ud83d\uddf8 \ud83d\uddf8 Hover Hint Sentence \ud83d\uddf8 \ud83d\uddf8 \ud83d\uddf8 Hover Hint TSC"},{"location":"compiletimeoptions/","title":"Compile-Time Options","text":"<p>Just like runtime options, compile-time options are also options that are applied globally to each JPMN card.</p> <p>The difference between runtime options and compile-time options is that compile-time options require you to build the note on your machine to use. Runtime options can be accessed and changed without having to build the note.</p>"},{"location":"compiletimeoptions/#accessing-editing","title":"Accessing &amp; Editing","text":"<p>To access the compile-time options, build the note.</p> <p>After building the note, a new file <code>config/config.py</code> should appear. The compile-time options can be found in this file.</p> <p>To use these compile-time options, edit the <code>config.py</code> file, and then re-build the note.</p> <p>Warning</p> <p>Do not edit the <code>config/example_config.py</code> file. The example config file can be updated at any time, so if you update the example config through git, it may result in unnecessary merge conflicts.</p>"},{"location":"compiletimeoptions/#always-filled-never-filled-fields","title":"Always filled &amp; Never filled fields","text":"<p>Using compile-time options, one can set a field to act as if it has always been filled, or it has never been filled, using the <code>always-filled-fields</code> and <code>never-filled-fields</code> options. This will remove the conditional Anki templates (<code>{{#FIELD}}</code> and <code>{{^FIELD}}</code> markers) for the specified fields.</p> Example <p>If your <code>compile-options</code> is:</p> <pre><code>\"compile-options\": {\n    ...\n    \"always-filled-fields\": [\"A\"],\n    \"never-filled-fields\": [\"B\"],\n    ...\n}\n</code></pre> <p>and your card template is: </p><pre><code>{{#A}} A is filled {{/A}}\n{{^A}} A is not filled {{/A}}\n{{#B}} B is filled {{/B}}\n{{^B}} B is not filled {{/B}}\n{{#C}} C is filled {{/C}}\n{{^C}} C is not filled {{/C}}\n</code></pre> <p>then upon card build, the resulting card template will be: </p><pre><code>A is filled\nB is not filled\n{{#C}} C is filled {{/C}}\n{{^C}} C is not filled {{/C}}\n</code></pre> <p>This usually renders the actual field value useless. In other words, filling the field for a note will have no effect on the cards.</p> <p>Warning</p> <p>Do not delete the field from the fields list! See here for more details.</p>"},{"location":"compiletimeoptions/#optimized-vocab-card-example","title":"Optimized Vocab Card Example","text":"<p>An example set of compile-time options to create a more optimized vocab card is shown below.</p> <p>Vocab card compile-time options example</p> <pre><code>\"compile-options\": {\n\"keybinds-enabled\": False,\n\"hardcoded-runtime-options\": True,\n\"always-filled-fields\": [],\n\"never-filled-fields\": [\n\"PAShowInfo\", \"PATestOnlyWord\", \"PADoNotTest\",\n\"PASeparateWordCard\", \"PASeparateSentenceCard\", \"AltDisplayPASentenceCard\",\n\"SeparateClozeDeletionCard\",\n\"IsClickCard\", \"IsHoverCard\", \"IsSentenceCard\", \"IsTargetedSentenceCard\",\n],\n\"enabled-modules\": [\n# HIGHLY RECOMMENDED to have this enabled if you want a nice looking card\n# (unless you are not using images in your cards of course)\n\"img-utils-minimal\",\n],\n}\n</code></pre>"},{"location":"customcss/","title":"Custom CSS","text":"<p>Warning</p> <p>Since this note is still in beta, the CSS itself, including the class names and structure of the HTML, is subject to heavy change. This is because when mobile support is being worked on, the CSS will likely heavily change to support mobile.</p> <p>If you are planning on changing the CSS, be vigilant with potential changes in future updates!</p>"},{"location":"customcss/#how-to-add-custom-css","title":"How To Add Custom CSS","text":"<p>If you have already read the Modding Overview page, you should already know that there are two ways of modding the note:</p> <ol> <li> <p>You can directly edit the CSS files, but lose all the changes you made when you update.</p> <p>This is the plug-and-play solution and requires no additional setup.</p> </li> <li> <p>(Recommended) Create new CSS files, which are built with the note to extend the current CSS.     This allows you to not lose changes between updates.</p> <p>Unfortunately, this requires additional setup, and will likely take some time to get working.</p> </li> </ol> Option 1: How to directly edit the CSS (click here) <p>Warning</p> <p>When editing any of the style sheets below, it is recommended to append the given CSS code to the very bottom of the existing css instead of adding to the existing CSS. This is to avoid potential errors where the existing css may potentially override your custom css.</p> <ul> <li> <p>Any time <code>style.scss</code> is mentioned, edit the styles sheet in the Anki template.     This can be accessed by:</p> <p>(Main window) \u2192  <code>Browse</code> \u2192  <code>Cards...</code> (middle of the screen) \u2192  <code>Styling</code> (top left)</p> </li> <li> <p>Any time <code>fields.scss</code> is mentioned, edit the <code>fields.css</code> file under the     addons folder:     </p><pre><code>Anki2/addons21/181103283/user_files/field.css\n</code></pre> </li> <li> <p>Any time <code>editor.scss</code> is mentioned, edit the <code>editor.css</code> file under the     addons folder:     </p><pre><code>Anki2/addons21/181103283/user_files/editor.css\n</code></pre> </li> </ul> Option 2 (Recommended): How to extend the CSS (click here) <ol> <li> <p>Build the note if you haven't already, and ensure everything works.</p> </li> <li> <p>Make a new folder under <code>(project root)/src/scss</code> (for example, <code>src/scss/extra</code>).</p> </li> <li> <p>Add the folder to the end of <code>css-folders</code> in <code>config.py</code>.     This should result in the following:     </p><pre><code>\"css-folders\": [\"base\", \"responsive\", \"dictionaries\", \"extra\"],\n</code></pre> </li> <li> <p>Under the <code>extra</code> folder, use the following files to override the correct css:</p> <ul> <li><code>style.scss</code>: The main CSS for the card templates.</li> <li><code>field.scss</code>: The CSS used by CSS injector     to customize individual fields.</li> <li><code>editor.scss</code>: The CSS used by CSS injector to customize the editor around the fields.</li> </ul> <p>All of the files are optional. This means you do not need to create all three files for the folder to be valid.</p> <p>The resulting folder should be of the format: </p><pre><code>(project root)\n  L src\n     L scss\n        L base\n           L ...\n        L dictionaries\n           L ...\n        L extra\n           L field.scss\n           L editor.scss\n           L style.scss\n</code></pre> </li> <li> <p>Rebuild and reinstall the template.     The css should be automatically applied to the note.</p> </li> </ol> <p>Note</p> <p>You might have noticed that this is the SCSS, not CSS. However, SCSS is complete superset of CSS (with some small exceptions). In other words, if you don't know any SCSS, you can write normal CSS and have it behave completely the same.</p>"},{"location":"customcss/#examples","title":"Examples","text":"<p>See the UI Customization page for many examples on how CSS can be used.</p>"},{"location":"definitions/","title":"Definitions","text":"<p>This page is dedicated to showcasing how definitions can be easily chosen, overwritten and customized overall.</p> <p>Note</p> <p>This page is primarily intended for monolingual dictionary users, as the sheer amount of possible monolingual dictionaries may require specific customizations for each individual dictionary.</p>"},{"location":"definitions/#dictionary-placement","title":"Dictionary Placement","text":"<p>This section deals with how the custom Yomichan Templates categorizes dictionaries, and how to properly customize them for your setup.</p>"},{"location":"definitions/#expected-dictionary-placement","title":"Expected Dictionary Placement","text":"<p>Dictionaries from Yomichan are sorted into the following fields:</p> <ul> <li> <p><code>PrimaryDefinition</code>:     A dictionary specified by the user. Bilingual by default.</p> <p>This can be changed in many different ways.</p> </li> <li> <p><code>SecondaryDefinition</code>:     All bilingual dictionaries outside of the one in <code>PrimaryDefinition</code></p> </li> <li> <p><code>ExtraDefinitions</code>:     All monolingual dictionaries outside of the one in <code>PrimaryDefinition</code></p> </li> <li> <p><code>UtilityDictionaries</code>:     All traditionally-formatted dictionaries that     do not belong in any of the above categories     (in other words, does not provide the meaning of the word).</p> <p>An example is the JMdict Surface Forms dictionary</p> <p>Note</p> <p>This does not include pitch accent dictionaries, frequency lists, or kanji dictionaries, as these are not traditionally-formatted dictionaries.</p> </li> </ul> <p>The way that the dictionaries are sorted into the appropriate fields is by assigning a category to each individual dictionary.</p> <p></p>"},{"location":"definitions/#verifying-categories","title":"Verifying Categories","text":"<p>You can check that your dictionaries are correctly categorized with the <code>{jpmn-test-dict-type}</code> marker. Under the Anki Templates code, replace <code>Card field</code> with <code>{jpmn-test-dict-type}</code> and press <code>Test</code>.</p> <p></p> <p>An example output of the above (on the word \u7d50\u69cb) is the following: </p><pre><code>\u300c\u65fa\u6587\u793e\u56fd\u8a9e\u8f9e\u5178 \u7b2c\u5341\u4e00\u7248\u300d: monolingual\n\u300c\u660e\u93e1\u56fd\u8a9e\u8f9e\u5178 \u7b2c\u4e8c\u7248\u300d: monolingual\n\u300c\u30cf\u30a4\u30d6\u30ea\u30c3\u30c9\u65b0\u8f9e\u6797\u300d: monolingual\n\u300c\u65b0\u660e\u89e3\u56fd\u8a9e\u8f9e\u5178 \u7b2c\u4e94\u7248\u300d: monolingual\n\u300c\u30c7\u30b8\u30bf\u30eb\u5927\u8f9e\u6cc9\u300d: monolingual\n\u300cNHK\u65e5\u672c\u8a9e\u767a\u97f3\u30a2\u30af\u30bb\u30f3\u30c8\u65b0\u8f9e\u5178\u300d: utility\n\u300cJMDict Surface Forms\u300d: utility\n\u300cJMdict (English)\u300d: bilingual\n\u300cJMdict (English)\u300d: bilingual\n\u300cJMdict (English)\u300d: bilingual\n\u300cJMdict (English)\u300d: bilingual\n\u300cJMdict (English)\u300d: bilingual\n\u300c\u65b0\u548c\u82f1\u300d: bilingual\n</code></pre> <p>If a dictionary is miscategorized, you will have to edit <code>bilingual-dict-regex</code> or <code>utility-dict-regex</code> at the top of the template code. Monolingual dictionaries are considered to be dictionaries that aren't either of the two above, so no handlebars code has to be changed if one were to use more monolingual dictionaries.</p> <p>To see how to edit the regex, go to this section.</p> <p></p>"},{"location":"definitions/#ignoring-a-dictionary","title":"Ignoring a Dictionary","text":"<p>If you want to see the dictionary on Yomichan but not have it show on Anki, you can use the <code>ignored-dict-regex</code> option.</p> <p>To see how to edit the option, see the section below.</p> <p>Conversely, if you want to not see the dictionary on Yomichan but want it to show up on Anki, see here.</p> <p>Note</p> <p>It is recommended to not use this option, so you have as much information as possible within the note. If you wish to not see a dictionary, it might be easier to collapse the dictionary.</p> <p></p>"},{"location":"definitions/#editing-the-dictionary-regex","title":"Editing the dictionary regex","text":"<p>To modify a regex string:</p> <ol> <li> <p>Determine the exact tag your dictionary has.     To see this, take a word that has a definition in the desired dictionary, and test     <code>{jpmn-test-dict-type}</code> like above.     The string inside the quotes \u300c\u300d is exactly the tag of the dictionary.</p> </li> <li> <p>Add the dictionary tag to the string, by replacing <code>ADD_x_DICTIONARIES_HERE</code>.     For example, if your bilingual dictionary tag is <code>Amazing Dictionary</code>, change     <code>ADD_BILINGUAL_DICTIONARIES_HERE</code> to     <code>Amazing Dictionary</code>.</p> <p>If you want to add more than one dictionary, they have to be joined with the <code>|</code> character. For example, if you want to add the bilingual dictionaries <code>Amazing Dictionary</code> and <code>Somewhat-Okay-Dictionary</code>, change <code>ADD_BILINGUAL_DICTIONARIES_HERE</code> to <code>Amazing Dictionary|Somewhat-Okay-Dictionary</code>.</p> <p>For completeness, here is the modified line for the second example: </p><pre><code>{{~#set \"bilingual-dict-regex\"~}} ^(([Jj][Mm][Dd]ict)(?! Surface Forms)(.*)|\u65b0\u548c\u82f1.*|\u65e5\u672c\u8a9e\u6587\u6cd5\u8f9e\u5178.*|Amazing Dictionary|Somewhat-Okay-Dictionary)$ {{~/set~}}\n</code></pre> </li> </ol>"},{"location":"definitions/#primary-definition-selection","title":"Primary Definition Selection","text":""},{"location":"definitions/#automatic-selection-bilingual-or-monolingual","title":"Automatic Selection (Bilingual or Monolingual)","text":"<p>The dictionary for the primary definition is the first bilingual dictionary (that appears on Yomichan) by default.</p> <p>This can be changed to the first monolingual dictionary by changing the following Yomichan template option to <code>monolingual</code>:</p> <pre><code>{{~! valid values: \"bilingual\", \"monolingual\" ~}}\n{{~#set \"opt-first-definition-type\" \"monolingual\"}}{{/set~}}\n</code></pre>"},{"location":"definitions/#manual-selection","title":"Manual Selection","text":"<p>Sometimes, you may want to override the primary definition, or highlight the definition that makes sense with the context.</p> <p>By default, selecting (highlighting) the text will do nothing, to prevent any unexpected errors from happening. However, the user can set the following Yomichan template option to allow selecting text to override the automatic dictionary selection behavior:</p> <pre><code>{{~! options related to selected text ~}}\n{{set \"opt-selection-text-enabled\" true}}\n</code></pre> <p></p> <p>Setting this option will enable the following behavior:</p> <ol> <li> <p>If nothing is selected, then the first dictionary is chosen just like normal.</p> </li> <li> <p>If a dictionary is selected, then that dictionary will replace the first definition.</p> <p>To disable this, set <code>opt-selection-text-dictionary</code> to <code>false</code>.</p> </li> <li> <p>If a section of text is selected, then that dictionary will replace the first definition.     Additionally, that section of text will be highlighted (bolded).</p> <p>To disable this, set <code>opt-selection-text-glossary</code> to <code>false</code>.</p> <p>Additionally, if you do not want to use the entire dictionary, and prefer that only the selected text is shown in the first definition, then set <code>opt-selection-text-glossary-attempt-bold</code> to <code>false</code>.</p> Where automatic bolding can fail (click here) <p>Automatic bolding may not always work: if the highlighted text could not be automatically detected from the custom template code, then it will fallback to simply using the highlighted text (as if you used the <code>{selection-text}</code> marker).</p> <p>This is most likely to fail if you select formatted parts of text, such as (but not limited to):</p> <ul> <li>line breaks</li> <li>furigana</li> <li>across multiple items in a list (common with JMdict)</li> </ul> Where dictionary selection can fail (click here) <p>This may occasionally select the wrong dictionary, but this only happens if the selected text also appears in a dictionary above the selected text.</p> <p>For example, suppose you have two bilingual dictionaries. and for the word \u30bf\u30b3, you highlight the word \"octopus\" and create the card. Both bilingual dictionaries will list \"octopus\", so even if you highlight the word \"octopus\" in the second bilingual dictionary, only the first bilingual dictionary will be chosen.</p> <p>This is usually not a problem even if the same text appears in a dictionary above because it's the same definition regardless. Additionally, monolingual dictionaries almost never have the exact same definition for the same word. However, if you still want a specific dictionary, highlight the dictionary tag as shown above.</p> </li> </ol>"},{"location":"definitions/#ui-options","title":"UI Options","text":""},{"location":"definitions/#hiding-the-first-line-of-a-definition","title":"Hiding the first line of a definition","text":"<p>See also: How to remove the numbers in the definition</p> <p>The first line of the definition has various elements that can be hidden with CSS.</p> Nothing hidden (default)Hide extra textHide dictionary tagHide entire first line <p> </p> <ul> <li>Nothing is hidden. This is the default behavior.</li> </ul> <p> </p> <ul> <li>This hides all the text to the right of the dictionary tag.</li> </ul> CSS to hide extra text (click here) <p>New in version <code>0.11.0.0</code> (latest version: <code>0.11.0.3</code>)</p> <p>The following CSS only affects only the dictionary with the tag \u300c\u65fa\u6587\u793e\u56fd\u8a9e\u8f9e\u5178 \u7b2c\u5341\u4e00\u7248\u300d. To use this on more than one dictionary, copy/paste the CSS multiple times, and replace the dictionary tag.</p> <ol> <li> <p>Under <code>extra/style.scss</code>, add the following code:</p> <pre><code>/* hide the text after the \u300c\u65fa\u6587\u793e\u56fd\u8a9e\u8f9e\u5178 \u7b2c\u5341\u4e00\u7248\u300d dictionary tag */\n.glossary-text ol li[data-details=\"\u660e\u93e1\u56fd\u8a9e\u8f9e\u5178 \u7b2c\u4e8c\u7248\"] .dict-group__glossary--first-line {\ndisplay: none;\n}\n</code></pre> </li> <li> <p>(Optional) Under <code>extra/field.scss</code>, add the following code:</p> <pre><code>/* greys out the text after the \u300c\u65fa\u6587\u793e\u56fd\u8a9e\u8f9e\u5178 \u7b2c\u5341\u4e00\u7248\u300d dictionary tag */\nanki-editable ol li[data-details=\"\u660e\u93e1\u56fd\u8a9e\u8f9e\u5178 \u7b2c\u4e8c\u7248\"] .dict-group__glossary--first-line {\ncolor: var(--text-color--3);\n}\n</code></pre> </li> </ol> <p> </p> <ul> <li>Removes only the dictionary tag.     This doesn't look very good on most dictionaries.</li> </ul> CSS to hide dictionary tag(s) (click here) <p>The following CSS only affects only the dictionary with the tag \u300c\u65fa\u6587\u793e\u56fd\u8a9e\u8f9e\u5178 \u7b2c\u5341\u4e00\u7248\u300d. To use this on more than one dictionary, copy/paste the CSS multiple times, and replace the dictionary tag.</p> <ol> <li> <p>Under <code>extra/style.scss</code>, add the following code:     </p><pre><code>/* hide the \u300c\u65fa\u6587\u793e\u56fd\u8a9e\u8f9e\u5178 \u7b2c\u5341\u4e00\u7248\u300d dictionary */\nol li[data-details=\"\u65fa\u6587\u793e\u56fd\u8a9e\u8f9e\u5178 \u7b2c\u5341\u4e00\u7248\"] .dict-group__tag-list {\ndisplay: none;\n}\n</code></pre> </li> <li> <p>(Optional) Under <code>extra/field.scss</code>, add the following code:     </p><pre><code>/* greys out the \u300c\u65fa\u6587\u793e\u56fd\u8a9e\u8f9e\u5178 \u7b2c\u5341\u4e00\u7248\u300d dictionary */\nanki-editable ol li[data-details=\"\u65fa\u6587\u793e\u56fd\u8a9e\u8f9e\u5178 \u7b2c\u5341\u4e00\u7248\"] .dict-group__tag-list {\ncolor: var(--text-color--3);\n}\n</code></pre> </li> </ol> CSS to hide JMdict's dictionary tag (click here) <p>If you are on a modern version of JMdict, the dictionary will contain additional tags to the right of the dictionary tag by default, such as (n), (vs), etc. The instructions above will remove all of these tags.</p> <p>You may want to only remove the dictionary tag without removing the other information tags. If your JMdict dictionary tag is exactly <code>JMdict (English)</code>, then this is already the default behavior. However, if your dictionary tag is different, do the following (you may have to replace <code>JMdict</code> with your exact JMdict dictionary tag):</p> <ol> <li> <p>Under <code>extra/style.scss</code>, add the following code:     </p><pre><code>/* removes the dictionary entry for jmdict */\n.glossary-text ol li[data-details=\"JMdict\"] .dict-group__tag-list .dict-group__tag--dict {\ndisplay: none;\n}\n/* Makes JMDict italic */\n.glossary-text ol li[data-details=\"JMdict\"] .dict-group__tag-list {\nfont-style: italic;\n}\n</code></pre> </li> <li> <p>(Optional) Under <code>extra/field.scss</code>, add the following code:     </p><pre><code>/* greys out dictionary entry for jmdict */\nanki-editable ol li[data-details=\"JMdict\"] .dict-group__tag-list .dict-group__tag--dict {\ncolor: var(--text-color--3);\n}\n/* Makes JMDict italic */\nanki-editable ol li[data-details=\"JMdict\"] .dict-group__tag-list {\nfont-style: italic;\n}\n</code></pre> </li> </ol> <p> </p> <ul> <li>Hides the entire first line.     This is a combination of the last two,     meaning it hides the dictionary tag and the text to the right.</li> </ul> CSS to hide the entire first line (click here) <p>New in version <code>0.11.0.0</code> (latest version: <code>0.11.0.3</code>)</p> <p>The following SCSS only affects only the dictionary with the tag \u300c\u65fa\u6587\u793e\u56fd\u8a9e\u8f9e\u5178 \u7b2c\u5341\u4e00\u7248\u300d. To use this on more than one dictionary, copy/paste the SCSS multiple times, and replace the dictionary tag.</p> <ol> <li> <p>Under <code>extra/style.scss</code>, add the following code:</p> <pre><code>/* hide the first line for the \u300c\u65fa\u6587\u793e\u56fd\u8a9e\u8f9e\u5178 \u7b2c\u5341\u4e00\u7248\u300d dictionary */\n.glossary-text ol li[data-details=\"\u660e\u93e1\u56fd\u8a9e\u8f9e\u5178 \u7b2c\u4e8c\u7248\"] {\n.dict-group__tag-list, .dict-group__glossary--first-line, .dict-group__glossary--first-line-break {\ndisplay: none;\n}\n}\n</code></pre> </li> <li> <p>(Optional) Under <code>extra/field.scss</code>, add the following code:</p> <pre><code>anki-editable ol li[data-details=\"\u660e\u93e1\u56fd\u8a9e\u8f9e\u5178 \u7b2c\u4e8c\u7248\"] {\n.dict-group__tag-list, .dict-group__glossary--first-line, .dict-group__glossary--first-line-break {\ndisplay: none;\n}\n}\n</code></pre> </li> </ol> <p>Note</p> <p>The above examples are SCSS, and not CSS. If you are using CSS, do not flatten the classes after the first line.</p> <p>Example Raw CSS:</p> <pre><code>.glossary-text ol li[data-details=\"\u660e\u93e1\u56fd\u8a9e\u8f9e\u5178 \u7b2c\u4e8c\u7248\"] .dict-group__tag-list {\ndisplay: none;\n}\n.glossary-text ol li[data-details=\"\u660e\u93e1\u56fd\u8a9e\u8f9e\u5178 \u7b2c\u4e8c\u7248\"] .dict-group__glossary--first-line {\ndisplay: none;\n}\n.glossary-text ol li[data-details=\"\u660e\u93e1\u56fd\u8a9e\u8f9e\u5178 \u7b2c\u4e8c\u7248\"] .dict-group__glossary--first-line-break {\ndisplay: none;\n}\n</code></pre>"},{"location":"definitions/#removing-the-numbers-in-the-primary-definition","title":"Removing the numbers in the primary definition","text":"<p>Currently, I am not aware of an easy way to only remove the numbers if there is only one item (and having them remain for multple definitions) with only CSS.</p> <p>The following CSS completely nukes the numbers regardless of how many items there are in the list.</p> Instructions (click here) <ol> <li> <p>Under <code>extra/style.scss</code>, add the following code:</p> <pre><code>.glossary-text--primary-definition ol {\nlist-style: none;\npadding-left: 0em;\n}\n</code></pre> </li> </ol>"},{"location":"definitions/#collapsing-dictionaries","title":"Collapsing dictionaries","text":"<p>Warning</p> <p>New as of version <code>0.11.1.0</code>. This version is currently bleeding edge, so this feature cannot be used unless you compile the templates from the dev branch.</p> <p>This allows you collapse dictionaries within the Secondary Definition or Extra Definitions section.</p> <p>TODO gif</p> Instructions (click here) <pre><code>{\n\"modules\": {\n\"collapse-dictionaries\": {\n\"enabled\": true,\n// ...\n}\n}\n}\n</code></pre> <p>Note</p> <p>There are many options for the above the above module, such as overriding what dictionaries should be collapsed or not. These will not be documented here, but will be documented in the runtime options file.</p>"},{"location":"faq/","title":"FAQ & Troubleshooting","text":""},{"location":"faq/#errors-warnings","title":"Errors &amp; Warnings","text":"<p>This section documents frequent errors that may show up on the info circle at the top right.</p> <p></p>"},{"location":"faq/#error-ankiconnect-failed-to-issue-request","title":"(Error) AnkiConnect failed to issue request.","text":"<p>This is an indication that Anki-Connect is failing. There are two main reasons that Anki-Connect can fail:</p> <ol> <li> <p>Ensure that Anki-Connect is installed. If it is installed, be sure to restart Anki     to ensure the add-on is actually running.</p> </li> <li> <p>If you are using an older version of Anki (2.1.49 and below),     see the note in the Anki-Connect setup section     here.</p> </li> </ol>"},{"location":"faq/#warning-jpmnopts-was-not-defined-in-the-options-file-was-there-an-error","title":"(Warning) JPMNOpts was not defined in the options file. Was there an error?","text":"<p>If you see this as an isolated warning without any other errors, it is very likely that you are using Anki version 2.1.49 or below. Please check your Anki version to confirm this:</p> <p>Main Window \u2192  <code>Help</code> \u2192  <code>About...</code></p> <p>If your Anki version is indeed 2.1.49 or below, then this should only appear on the front side of your first card of the session. To check, try flipping the card and back. This warning should dissappear once you do.</p> <p>The only side effect of this is that the user-defined runtime options will not be used for the front side of the first card, and the defaults will be used instead.</p> <p>There are two ways to fix this:</p> <ol> <li>Update Anki to a higher version.</li> <li>Compile the card with hard-coded defaults.</li> </ol> Why this happens (click here) <p>The <code>&lt;script ... src=\"_jpmn-options.js\"&gt;</code> tag seems to runs asynchronously on 2.1.49 and below, meaning that the order of when this is ran is not constant compared to the main javascript block. With that being said, the exact tag seems to run synchronously on 2.1.50 and above, so it is guaranteed to run before the main javascript block on these versions.</p> <p>With my current knowledge, the only way to guarantee the order of this import is asynchronous functions, or some other asynchronous features. For example, a simple <code>await import(...)</code> should work. However, asynchronous features have been avoided throughout the development of this, as it currently seems to behave unpredictably within Anki.</p>"},{"location":"faq/#general-error-troubleshooting","title":"General Error Troubleshooting","text":"<p>If none of the above worked, the following will be some general troubleshooting tips that can help you figure out what the error is:</p> <ol> <li> <p>Try disabling all of your add-ons other than the mandatory ones listed in the setup page.     Note that you have to restart Anki after disabling the add-ons for the changes to take effect.</p> <p>If it works after this step, please let me know which add-on(s) conflicts with this note type! To do this, re-enable the add-ons one-by-one (remembering to restart Anki each time!).</p> </li> <li> <p>With all of your non-mandatory add-ons disabled, try to upgrade Anki to the latest version,     and see if the issue still persists.     If this works but an add-on you consider mandatory no longer works, please let me know!     (I won't be able to upgrade the add-on for you, but I can potentially point to alternatives     and/or add it to the documentation somewhere so others are aware of the issue.)</p> </li> </ol> <p>If you can't manage to fix it, please reach out to me on Discord, or submit an issue!</p>"},{"location":"faq/#troubleshooting","title":"Troubleshooting","text":""},{"location":"faq/#the-sentencereading-field-is-not-updated-is-different-from-the-sentence-field","title":"The <code>SentenceReading</code> field is not updated / is different from the <code>Sentence</code> field","text":"<p>This happens because programs such as mpvacious and asbplayer update the sentence manually. For example, assume the subtitles are the following:</p> <ol> <li>\u3060\u3063\u3066\u3001\u9ebb\u8863\u3055\u3093\u306f\u9045\u523b\u3057\u3066\u304d\u305f\u7537\u3092\u3001\u5065\u6c17\u306b\u4e00\u6642\u9593\u4e09\u5341\u516b\u5206\u3082</li> <li>\u5f85\u3063\u3066\u3044\u308b\u3088\u3046\u306a\u53ef\u611b\u3052\u306e\u3042\u308b\u5973\u3058\u3083\u306a\u3044\uff01\u3055\u3066\u306f\u507d\u7269\u3060\u306a\uff01</li> </ol> <p>If you make a card from the highlighted \u507d\u7269, the <code>Sentence</code> and <code>SentenceReading</code> field will only contain the text from the 2nd subtitle. If you then use mpvacious or asbplayer to grab both subtitles, the <code>Sentence</code> field will be updated, but the <code>SentenceReading</code> field will not be updated.</p> <p>Partial solutions</p> <p>Sometimes, the problem appears because one subtitle can span multiple lines. These partial solutions work to solve that problem. However, these do not work for when lines span multiple subtitles.</p> <ul> <li> <p>For mpvacious, use a texthooker that can remove all whitespace     (i.e. Renji's Texthooker).</p> </li> <li> <p>For asbplayer, you can remove the line breaks in the subtitle file itself     (i.e. with SubtitleEdit)</p> </li> </ul> <p>The only full solution I know to this is to disabling automatic furigana generation on card add. If you still want furigana on your cards, bulk generate it after each session.</p>"},{"location":"faq/#the-word-is-incorrectly-highlighted-not-highlighted-at-all","title":"The word is incorrectly highlighted / not highlighted at all.","text":"<p>The word is usually highlighted by default, but the word may not be highlighted for the following reasons:</p> <ul> <li>The sentence field got updated by an external program.</li> <li>The card was imported from an older deck that did not highlight the tested word.</li> </ul> <p>As of version <code>0.11.1.0</code>, the card will automatically attempt to highlight the word if the word was not highlighted in the first place. However, this highlight may yield incorrect results. This is expected behavior, and you are expected to manually bold the sentence if the highlight is incorrect.</p> <p>See here for more info.</p>"},{"location":"faq/#the-frequency-list-display-looks-squished","title":"The frequency list display looks squished.","text":"<p>This is because you are using Anki version 2.1.49 or below. There are two main ways of fixing this:</p> <ol> <li>Update to a higher version of Anki (recommended).</li> <li>If you do not wish to update Anki, add the following CSS:     <pre><code>.frequencies__group {\nmargin-left: 20px;\n}\n.frequencies-overflow {\nmargin-left: 10px;\n}\n</code></pre></li> </ol>"},{"location":"faq/#the-showhide-button-doesnt-do-anything","title":"The Show/Hide button doesn't do anything.","text":"<p>The show/hide button requires that the displayed sentence has a bolded element. For example, this means if the currently displayed sentence comes from the <code>AltDisplay</code> field and nothing in that field is bolded, then the show/hide button will do nothing.</p> <p>This potentially relates to the issue above.</p>"},{"location":"faq/#the-replay-audio-button-plays-the-sentence-word-and-then-sentence","title":"The replay audio button plays the sentence, word, and then sentence.","text":"<p>This is playing the audio from the front of the card, and then the back of the card, in sequence. To fix it so you only hear the audio displayed in the back of the card, go to:</p> <p><code>Decks</code> (main anki browser)  \u2192  Deck settings (the gear beside your deck)  \u2192  <code>Options</code>  \u2192  <code>Audio</code> section  \u2192  Toggle <code>Skip question when replaying answer</code></p>"},{"location":"faq/#the-tools-check-media-interface-removes-the-font-files","title":"The <code>Tools</code> \u2192  <code>Check Media</code> interface removes the font files.","text":"<p>This is a known bug, and unfortunately, this bug will not be fixed.</p> <p>If you want to use this tool, temporarily move the fonts outside of the media folder. If you accidentally removed the fonts, redownload the fonts and re-add them into the media folder of your profile.</p> <p>This will not be fixed because to make debugging easier for the developer. When a user is asked to export a card, the exported file will not contain the font files, meaning that the result <code>.apkg</code> file will be about 1MB instead of some 20MB, allowing it to be shared easily on a place like Discord.</p>"},{"location":"faq/#this-card-template-loads-slower-than-other-card-templates","title":"This card template loads slower than other card templates.","text":"<p>Usually, this is not very noticeable on faster computers. However, the card may load slower compared to others if you are on a slow computer.</p> <p>Note for Android (Ankidroid)</p> <p>Unfortunately, it seems like Ankidroid has a specific issue where fonts are loaded extremely slowly. This appears to be a problem with the chrome webview itself (see: Ankidroid issue, Chromium issue). This means outside of removing the custom fonts, there is no feasible way to considerably speed up Ankidroid.</p> <p>From person experiments, simply removing the fonts without changing anything else on jp-mining-note results in almost instanteous load times. This is in comparison to the same template with custom fonts included, which results in near one second load times.</p> <p>There are some ways to remedying this. Both will inevitably remove certain features of the note.</p> (1) Prevent document reflow <p>By default, the mobile interface will not have any document reflow, so nothing has to be done for mobile.</p> <p>However, on PC, the default settings forces document reflow every time the back-side of the card is loaded. On faster computers, this effect is virtually neglible. However, this effect is more noticeable on lower end computers.</p> <p>To prevent document reflow, you must change the following two runtime options:</p> <pre><code>{\n\"modules\": {\n\"img-utils\": {\n\"resize-height-mode\": \"fixed\", // (1)!\n\"primary-definition-picture\": {\n\"use-lenience\": false, // (2)!\n}\n}\n}\n}\n</code></pre> <ol> <li>Set this to anything OTHER THAN \"auto-height\". This may affect the display image     size in an undesireably way, because the height of the     display image will no longer be automatically adjusted.</li> <li>Set this to false.</li> </ol> (2) Using compile-time options <p>Outside of document reflow, it appears that most of the lag doesn't come from the javascript execution, but rather the fact that the note has a lot of HTML (Anki's internal html and template parser) and javascript text (javascript compilation time). Surprisingly, the time it takes for javascript to actually run is comparatively fast if the forced document reflow (see above) is remedied.</p> <p>Both the amount of HTML and javascript can be reduced at the cost of removing functionality using the following compile-time options:</p> <pre><code>\"hardcoded-runtime-options\": True, // (1)!\n\"always-filled-fields\": [], // (2)!\n\"never-filled-fields\": [],\n\"enabled-modules\": [ ... ], // (3)!\n</code></pre> <ol> <li>This removes extra javascript.     To customize the runtime-options, you will need to specify your options in a different file (TODO).</li> <li>Fill these two fields accordingly, depending on whether you use the fields or not.</li> <li>Remove any modules you do not need. This is the biggest change you can do to     increase the note's performance.</li> </ol> <p>An example for a very optimized vocab card is shown here. Note that <code>img-utils-minimal</code> will still cause a document reflow unless you change the above options.</p>"},{"location":"faq/#the-sentence-quotes-are-on-completely-different-lines","title":"The sentence quotes are on completely different lines!","text":"<p>If your card looks like this:</p> <p></p> <p>then your <code>Sentence</code> field is likely formatted internally similar to the following example: </p><pre><code>&lt;div&gt;\u305d\u3046\u30c7\u30b9\u30b5\u30fc\u30f4\u30a1\u30f3\u30c8\u306e\u51f8\u5b88\u3092&lt;b&gt;\u5dee\u3057\u7f6e\u3044\u3066&lt;/b&gt;&lt;/div&gt;\n&lt;div&gt;\u30de\u30b9\u30bf\u30fc\u3068\u884c\u52d5\u3092\u5171\u306b\u3059\u308b\u3068\u306f\u4e07\u6b7b\u306b\u5024\u3059\u308b\u30c7\u30fc\u30b9&lt;/div&gt;\n</code></pre> <p>To fix this, edit the <code>Sentence</code> field html to remove the <code>&lt;div&gt;</code> tags, and add <code>&lt;br&gt;</code> tags wherever a line break should appear. For example, the above should be changed into: </p><pre><code>\u305d\u3046\u30c7\u30b9\u30b5\u30fc\u30f4\u30a1\u30f3\u30c8\u306e\u51f8\u5b88\u3092&lt;b&gt;\u5dee\u3057\u7f6e\u3044\u3066&lt;/b&gt;&lt;br&gt;\n\u30de\u30b9\u30bf\u30fc\u3068\u884c\u52d5\u3092\u5171\u306b\u3059\u308b\u3068\u306f\u4e07\u6b7b\u306b\u5024\u3059\u308b\u30c7\u30fc\u30b9\n</code></pre> Why this can happen (click here) <p>This happens if you copy/paste directly from certain pages into the sentence field, such as some texthooker pages. This can also happen if you copy/paste from a texthooker page to a different field, say <code>AdditionalNotes</code>, and then copy a section of <code>AdditionalNotes</code> to <code>Sentence</code>.</p> <p>The updating sentence with clipboard hotkey shouldn't have this problem, as <code>&lt;div&gt;</code> tags are not present by default.</p>"},{"location":"faq/#card-editing","title":"Card Editing","text":""},{"location":"faq/#how-do-i-set-the-default-card-type","title":"How do I set the default card type?","text":"<p>In Yomichan's Anki Card Format, you can simply fill the field.</p> <p>For example, if you want to set the default card type to be a sentence card, fill the <code>IsSentenceCard</code> field there.</p>"},{"location":"faq/#how-do-i-automatically-change-the-value-of-a-binary-field-on-multiple-existing-cards","title":"How do I automatically change the value of a binary field on multiple existing cards?","text":"<p>You have three main options:</p> <p>Warning</p> <p>As always, before mass editing your collection, please backup your Anki data.</p> <ol> <li> <p>Batch Editing Addon</p> </li> <li> <p>Python script:</p> <pre><code># assuming you are at the root of the repo,\n# i.e. after the `git clone ...` and `cd jp-mining-note`\ncd ./tools\n\n# sets all `IsSentenceCard` fields to be filled\npython3 batch.py --fill-field \"IsSentenceCard\"\n\n# empties all `IsSentenceCard` fields\npython3 batch.py --empty-field \"IsSentenceCard\"\n</code></pre> </li> <li> <p>Regex Search (TODO)</p> </li> </ol>"},{"location":"faq/#how-do-i-disable-furigana-on-card-generation","title":"How do I disable furigana on card generation?","text":"<ol> <li> <p>In Yomichan's Anki Card Format,     ensure that the <code>SentenceReading</code> field is empty.</p> </li> <li> <p>If you are using the AJT Furigana addon, edit the config and set <code>generate_on_note_add</code> to <code>false</code>.     Afterwards, restart Anki.     Please note that this step will also disable generation of pitch accents.</p> </li> </ol> <p>You likely want to bulk-generate the furigana if you are disabling furigana on card generation. See the question below to do just that.</p>"},{"location":"faq/#how-do-i-bulk-generate-furigana-and-pitch-accents","title":"How do I bulk generate furigana and pitch accents?","text":"<ol> <li> <p>Head to the Card Browser window:</p> <p>Main Window \u2192  <code>Browse</code></p> </li> <li> <p>Select all notes without furigana, with the following search:     </p><pre><code>\"note:JP Mining Note\" SentenceReading:\n</code></pre> </li> <li> <p>Head over to:</p> <p><code>Edit</code> (top left corner) \u2192  <code>AJT: Bulk-generate</code>.</p> </li> </ol> <p>Note</p> <p>Bulk generating pitch accents will only batch generate the <code>AJTWordPitch</code> field. Pitch accent graphs and positions cannot be automatically generated. This is important to note if you are using colored pitch accent. If <code>PAPositions</code> is not filled, then the card cannot be automatically colored.</p> <p> In version <code>0.12.0.0</code>, this no longer matters, because the pitch accent info is properly parsed from AJTWordPitch.</p> <p>Note</p> <p>There may be some cards that still have an empty <code>AJTWordPitch</code> field. This is simply because the add-on did not contain the pitch data for those words.</p>"},{"location":"faq/#how-do-i-remove-an-empty-card-without-deleting-the-entire-note","title":"How do I remove an empty card without deleting the entire note?","text":"<p>Quote</p> <p>To remove the empty cards, go to <code>Tools</code> \u2192  <code>Empty Cards</code> in the main window. You will be shown a list of empty cards and be given the option to delete them.</p> <p> Taken directly from Anki's official documentation. </p>"},{"location":"faq/#how-do-i-edit-the-fields-raw-html","title":"How do I edit the field's raw HTML?","text":"<p>Within the card browser, select a field to edit, and then type <code>ctrl+shift+x</code>.</p> <p>Alternatively, on newer versions of Anki, you can click on the top-right corner on the code button.</p> <p></p>"},{"location":"faq/#how-do-i-use-this-note-type-as-an-anime-card","title":"How do I use this note type as an Anime Card?","text":"<p>An anime card is a vocab card with a picture and (native) sentence audio, which is the default setup for this card.</p> <p>If you want to add hints that aren't collapsed by default, use the <code>HintNotHidden</code> field.</p>"},{"location":"faq/#other-questions","title":"Other Questions","text":""},{"location":"faq/#where-is-the-x-folder-in-anki","title":"Where is the (X) folder in Anki?","text":"<p>You must first locate the <code>Anki2</code> folder. The location of this folder is different for each operating system.</p> <p>Quote</p> WindowsMacLinux <p>On Windows, the latest Anki versions store your Anki files in your appdata folder. You can access it by opening the file manager, and typing <code>%APPDATA%\\Anki2</code> in the location field. Older versions of Anki stored your Anki files in a folder called <code>Anki</code> in your <code>Documents</code> folder.</p> <p>On Mac computers, recent Anki versions store all their files in the <code>~/Library/Application Support/Anki2</code> folder. The Library folder is hidden by default, but can be revealed in Finder by holding down the option key while clicking on the Go menu. If you're on an older Anki version, your Anki files will be in your <code>Documents/Anki</code> folder.</p> <p>On Linux, recent Anki versions store your data in <code>~/.local/share/Anki2</code>, or <code>$XDG_DATA_HOME/Anki2</code> if you have set a custom data path. Older versions of Anki stored your files in <code>~/Documents/Anki</code> or <code>~/Anki</code>.</p> <p> Taken directly from Anki's official documentation. </p> <ul> <li>Your profile folder is under <code>Anki2/PROFILE_NAME</code>.</li> <li>Your media folder is under <code>Anki2/PROFILE_NAME/collections.media</code>.</li> <li>Your addons folder is under <code>Anki2/addons21</code>.</li> </ul> <p> </p>"},{"location":"faq/#how-do-i-backup-my-anki-data","title":"How do I backup my Anki data?","text":"<p>The following makes a complete backup of your collection, including media:</p> <p>Main Window \u2192  <code>File</code> (top left corner) \u2192  <code>Export...</code> \u2192  <code>Anki Collection Package</code></p> <p>The following makes a temporary backup of your collection, not including media:</p> <p>Main Window \u2192  <code>File</code> (top left corner) \u2192  <code>Create Backup</code></p> <p>See Anki's official documentation for more info.</p>"},{"location":"faq/#how-do-i-backup-yomichan-settings","title":"How do I backup Yomichan settings?","text":"<ol> <li>Navigate to Yomichan Settings.</li> <li>Go to the <code>Backup</code> section</li> <li>Select <code>Export Settings</code></li> </ol>"},{"location":"faq/#how-do-i-export-notes","title":"How do I export notes?","text":"<ol> <li> <p>Navigate to the Card Browser, by doing the following:</p> <p>Main Window \u2192  <code>Browse</code></p> </li> <li> <p>Select a note. Hold down <code>ctrl</code> to select multiple individual notes.</p> </li> <li> <p>Right click the selected notes, and navigate to:</p> <p><code>Notes</code> \u2192  <code>Export Notes...</code></p> </li> </ol>"},{"location":"faq/#how-do-i-see-the-version-of-jp-mining-note","title":"How do I see the version of jp-mining-note?","text":"<p>Preview any card. The version should be displayed at the top left corner.</p> <p>For mobile, the version be shown at the top right corner. Note that this is only displayed on mobile for versions <code>0.11.1.0</code> and above.</p> <p></p>"},{"location":"faq/#how-do-i-see-the-version-of-anki","title":"How do I see the version of Anki?","text":"<p>Navigate to:</p> <p><code>Help</code> \u2192  <code>About</code></p> <p></p>"},{"location":"faq/#what-card-type-should-i-use","title":"What card type should I use?","text":"<p>The short answer is: whichever one you want. :)</p> <p>The long answer is: whichever one you want, because everyone has their own preferences on what card types they like. I recommend being open about it and experiment with them, to see which one you like.</p>"},{"location":"faq/#what-is-the-point-of-the-pasilence-field","title":"What is the point of the <code>PASilence</code> field?","text":"<p>This is a hack to not play the sentence audio on the front side, even if you set-up your Anki client to do so. With this field filled correctly, the play sentence audio button will appear at the front, and will not be autoplayed.</p> <p>Leaving this field empty will affect cards where you test pitch accent, i.e. with <code>PAShowInfo</code> filled. In particular, this will cause Anki to autoplay the sentence audio on the front side of cards that test pitch accent, which is undesirable.</p>"},{"location":"faq/#do-you-plan-on-supporting-any-other-language-other-than-japanese","title":"Do you plan on supporting any other language other than Japanese?","text":"<p>Unfortunately, other languages outside of Japanese will not be supported.</p> <p>The reason for this decision is best explained in the \"When are you going to add support for $MYLANGUAGE?\" question within Yomichan's README:</p> <p>Quote</p> <p>Developing Yomichan requires a decent understanding of Japanese sentence structure and grammar, and other languages are likely to have their own unique set of rules for syntax, grammar, inflection, and so on. Supporting additional languages would not only require many additional changes to the codebase, it would also incur significant maintenance overhead and knowledge demands for the developers. Therefore, suggestions and contributions for supporting new languages will be declined, allowing Yomichan's focus to remain Japanese-centric.</p>"},{"location":"faq/#discord-contact-info","title":"Discord Contact Info","text":"<p>Username: <code>Aquafina water bottle#3026</code> (user id: <code>244677612272746496</code>)</p> <p>Servers:</p> <ul> <li>TheMoeWay (I recommend using the <code>jp-mining-note</code> thread in the <code>#resources-sharing</code> channel)</li> <li>Refold (JP) server  (I recommend using the <code>jp-mining-note</code> thread in the <code>#sentence-mining-workflows</code> channel)</li> </ul>"},{"location":"fieldref/","title":"Field Reference","text":"<p>This page is dedicated showing how to edit the note fields to change the card to your liking.</p> <p>Note</p> <p>If you want to edit the user interface for all cards, see the UI Customization page.</p>"},{"location":"fieldref/#definitions","title":"Definitions","text":"<p>Binary Field: A field that checks whether it is filled or not with any value, say <code>1</code>. The default is implied by the name of the field, and a value of \"true\" means that the field is filled. For example, the <code>IsSentenceCard</code> field will turn the card into a sentence card if filled. If it is not filled, then the card will be a word card. To fill a field automatically, see here.</p> <p>PA: Short for \"Pitch Accent\".</p>"},{"location":"fieldref/#quick-jump","title":"Quick Jump","text":"<p>The table below provides quick links to most of the fields found with the card, as well as some general info on each field. Fields without links are assumed to be either obvious (and do not require documentation), or not meant to be edited.</p> Click here to reveal the field list <p>Note</p> <p><code>Auto-filled</code> represents fields that should be automatically filled out from Yomichan and Anki add-ons.</p> Field Auto-Filled Binary Field Notes Key Word WordReading PAOverride PAOverrideText AJTWordPitch PrimaryDefinition PrimaryDefinitionPicture Sentence SentenceReading AltDisplay AltDisplayPASentenceCard AdditionalNotes IsSentenceCard IsClickCard IsHoverCard IsTargetedSentenceCard PAShowInfo PATestOnlyWord PADoNotTest PASeparateWordCard PASeparateSentenceCard SeparateClozeDeletionCard Hint HintNotHidden Picture WordAudio SentenceAudio PAGraphs Do not edit this field. PAPositions Do not edit this field. PASilence Do not edit this field. WordReadingHiragana FrequenciesStylized Do not edit this field. FrequencySort YomichanWordTags SecondaryDefinition ExtraDefinitions UtilityDictionaries Comment"},{"location":"fieldref/#modifying-the-front-side-tested-content","title":"Modifying the Front Side (Tested Content)","text":"<p>The front side is exactly the content that we want to test ourselves on. Naturally, since we can test ourselves on many aspects of the word, there are many ways to change this tested content.</p>"},{"location":"fieldref/#card-types","title":"Card types","text":"<p>Main Page: Card Types</p> <p>The default card type is a vocab card, where the tested content is simply the word.</p> <p>To change the card to a sentence card, fill the <code>IsSentenceCard</code> binary field.</p> Vocab cardSentence card <p></p> <p></p>"},{"location":"fieldref/#altdisplay-changing-the-displayed-content","title":"AltDisplay: Changing the Displayed Content","text":"<p>Vocab cards show the <code>Word</code> field and sentence cards show the <code>Sentence</code> fields by default. However, you can modify what is exactly shown in the front by using the <code>AltDisplay</code> field.</p> NewlineLast sentence only <p>      The previous sentence card looks a little ugly,     because the sentence splits off at a strange point.     To fix this, we add a newline at a sensible place (after the period) in the <code>AltDisplay</code> field.    </p> <p>      Alternatively, we can simply test the last sentence, by removing the first sentence.    </p>"},{"location":"fieldref/#altdisplay-furigana","title":"AltDisplay: Furigana","text":"<p>One nice feature is that the <code>AltDisplay</code> has hoverable furigana text enabled by default. In other words, you can use furigana in the field. I personally use this to insert furigana for certain names, since I'm usually not testing myself on how to read a name.</p> <p>For example, the card below has the following HTML: </p><pre><code>\u4e0a\u6761[\u304b\u307f\u3058\u3087\u3046] \u606d\u4ecb[\u304d\u3087\u3046\u3059\u3051]\u541b\u306e\u3053\u3068\u304a&lt;b&gt;\u6155\u3044&lt;/b&gt;\u3057\u3066\u307e\u3057\u305f\u306e\n</code></pre> <p></p> <p></p>"},{"location":"fieldref/#altdisplay-final-notes","title":"AltDisplay: Final Notes","text":"<ul> <li> <p>The example with adding a newline to <code>AltDisplay</code> is somewhat contrived.     More realistically, you would want to add the newline to the <code>Sentence</code> field.</p> <p>If you are using AJT Furigana, I recommend deleting the text within the <code>SentenceReading</code> field before editing the <code>Sentence</code> field, so the furigana can be automatically generated with the newly formatted <code>Sentence</code> field.</p> </li> <li> <p>If you are using a vocab card, you can use <code>AltDisplay</code>     to show something that differs from the <code>Word</code> field.</p> </li> <li> <p>On Hybrid Card types, the <code>AltDisplay</code> field only affects the sentence, and not     the front displayed word.</p> </li> </ul> <p></p>"},{"location":"fieldref/#hints","title":"Hints","text":"<p>Finally, you can include a customized hint to show at the front of the card, by using the <code>Hint</code> field. This will show as a collapsible field at the front of card.</p> <p>If you do not want the hint to be hidden by default, you can use the <code>HintNotHidden</code> field instead.</p> HintHintNotHidden <p></p> <p></p>"},{"location":"fieldref/#modifying-the-back-side","title":"Modifying the Back Side","text":"<p>The main two fields that one can add text to is <code>PrimaryDefinition</code> and <code>AdditionalNotes</code>. Bolding anything in these sections will highlight the word in a light yellow (or blue in light mode) tint, to make the bolded text stand out more.</p> <p></p> <p></p>"},{"location":"fieldref/#primarydefinition-field","title":"<code>PrimaryDefinition</code> field","text":"<p>The <code>PrimaryDefinition</code> field contains the main content, and should be the main field to edit if one wants to put down more notes about the card.</p> <p></p>"},{"location":"fieldref/#additionalnotes-field","title":"<code>AdditionalNotes</code> field","text":"<p>The <code>AdditionalNotes</code> field is useful if you want to write down even more notes, but keep it in a collapsible field to reduce vertical space.</p> <p>Here are some suggestions on how you can use this field:</p> <ul> <li>Recording the source where the scene came from</li> <li>Adding custom notes on the scene's context</li> <li>Recording the sentences surrounding the mined sentence</li> </ul> <p>In general, this field should be used for any info that is not crucial to understanding the tested content.</p>"},{"location":"fieldref/#modifying-images-pitch-accent","title":"Modifying Images &amp; Pitch Accent","text":"<p>As there are plenty of ways to modify images and pitch accent, they are discussed in their respective pages:</p> <ul> <li>Images (<code>Picture</code> and <code>PrimaryDefinitionPicture</code>)</li> <li>Pitch Accent (<code>PAOverride</code> and <code>PAOverrideText</code>)</li> </ul>"},{"location":"fieldref/#testing-pitch-accent","title":"Testing Pitch Accent","text":"<p>This note type provides many options to target exactly what parts of pitch accent you want to test yourself on. By default, no special indicator is shown on whether pitch accent is tested or not.</p> <p>To test for pitch accent, fill the <code>PAShowInfo</code> field. You should see a circle to the left of the word or sentence.</p>"},{"location":"fieldref/#pitch-accent-indicator","title":"Pitch Accent Indicator","text":"<p>This circle you see is called the \"Pitch Accent Indicator\", or \"PA Indicator\" for short. How this card indicates what pitch accent is tested is by the PA indicator's color.</p> <p></p> <p>Here are what the colors represent:</p> <ul> <li>Green: The entire sentence is tested.</li> <li>Blue: Only the word is tested.</li> <li>Red: Pitch accent should not be tested in any way.</li> </ul> <p>If you ever forget what the colors mean, you can hover your mouse over the circle to get a description of what is being tested.</p> <p>Alternatively, you can look at the top right of the screen and look at the value after the <code>/</code>.</p> <p></p> <p>Note</p> <p>If the tested content is a sentence (card), but you want to only test for word pitch accent, you would not be able to see the word normally. To see the word that is tested, there is a button to toggle whether the word is highlighted or not. The content that is highlighted is exactly what is bolded in the <code>Sentence</code> (or <code>AltDisplay</code> / <code>AltDisplayPASentenceCard</code>) field, which is the added word by default.</p> <p></p> <p>Note</p> <p>If your card is a vocab card, then full sentence is shown as a collapsed field by default. This is only here to check your hearing with your guessed pitch accent, when used in conjunction with the sentence play button.</p>"},{"location":"fieldref/#selecting-the-pitch-accent","title":"Selecting the Pitch Accent","text":"<p>The following shows how to fill in the proper fields to test pitch accent:</p> Filled fields PA Indicator Separated Cards (None, default) (Doesn't exist) <code>PAShowInfo</code> Green (sentence) or blue (word),  depending on the tested content <code>PAShowInfo</code> &amp;  <code>PADoNotTest</code> Red (not tested) <code>PAShowInfo</code> &amp;  <code>PATestOnlyWord</code> Blue (word) <code>PAShowInfo</code> &amp;  <code>PASeparateWordCard</code> Red (not tested) Word <code>PAShowInfo</code> &amp;  <code>PASeparateSentenceCard</code> Blue (word) Sentence <code>PAShowInfo</code> &amp;  <code>PASeparateWordCard</code> &amp;  <code>PASeparateSentenceCard</code> Red (not tested) Word &amp; Sentence <p>To clarify some of the above:</p> <ul> <li>By default, if only <code>PAShowInfo</code> is filled, then the entire display is tested<ul> <li>For vocab cards, targeted sentence cards, and hybrid vocab cards,   only the word PA is tested (PA indicator: blue).</li> <li>For sentence cards and hybrid sentence,   the entire sentence PA is tested (PA indicator: green).</li> </ul> </li> <li>To test just the word pitch accent, fill the <code>PATestOnlyWord</code> field.</li> <li>To create completely separate cards to just test pitch accent on,   use the fields <code>PASeparateSentenceCard</code> and/or <code>PASeparateWordCard</code>.</li> <li>If a PA word card is created, then the default card does not test pitch accent.   Similarly, if a PA sentence card is created, then the default card only tests the word pitch accent.</li> </ul>"},{"location":"fieldref/#modifying-pitch-accent-sentence-cards","title":"Modifying Pitch Accent Sentence Cards","text":"<p>The field <code>AltDisplayPASentenceCard</code> exists to customize the display of the PA sentence card, if it exists. It works similarly to <code>AltDisplay</code>, and takes priority over <code>AltDisplay</code> in the PA sentence card.</p>"},{"location":"fieldref/#colored-quotes-instead-of-pa-indicator","title":"Colored Quotes Instead of PA Indicator","text":"<p>(TODO)</p> <p>Runtime Options:</p> <pre><code>\"modules\": {\n  \"sent-utils\": {\n    \"pa-indicator-color-quotes\": ...\n  }\n}\n</code></pre> <p>TODO picture comparisons between word PA indicator in quotes / word PA with PA indicator</p>"},{"location":"fieldref/#other-fields","title":"Other Fields","text":""},{"location":"fieldref/#key-field","title":"<code>Key</code> field","text":"<p>This contains the tested word. In other words, this contains the exact same content as the field below, but this field is specifically not used in the card template. This is to allow the user to modify the key if duplicates arise, while still being able to test the word.</p> <p>For example, if I were to test different usages of \u4e0a, I can change this key value to <code>\u4e0a (preposition)</code>, <code>\u4e0a (grammar)</code>, etc. and add a new card.</p> <p>It is expected that this <code>Key</code> field is unique; a warning will appear on cards that have a duplicate key.</p> <p></p>"},{"location":"fieldref/#comment-field","title":"<code>Comment</code> field","text":"<p>Similarly to the <code>Key</code> field, this field will not be used in any card template. In other words, this is a place where you can write down notes without affecting the card itself.</p> <p></p>"},{"location":"fieldref/#frequencysort-field","title":"<code>FrequencySort</code> field","text":"<p>By default, this note type comes with a <code>FrequencySort</code> field, which is the equivalent of Marv's <code>Frequency</code> field in this guide. Visit the aformentioned link (and scroll down to <code>Usage</code>) to see how to sort and review your cards by frequency.</p> <p>Note</p> <p>I personally use this field by re-ordering only some of the most common words in my deck, and then separating it with a step of 1. This ensures that every card in the deck will eventually be reached.</p>"},{"location":"fieldref/#cloze-deletion-cards","title":"Cloze Deletion Cards","text":"<p>Warning</p> <p>I recently realized that I attached the wrong name to these cards. These should be simply known as \"Audio cards\", i.e. word audio card or sentence audio card. Although \"Cloze Deletion\" will be used throughout the templates and documentation, it will be renamed to \"Audio cards\" when version <code>0.12.0.0</code> releases.</p> <p>Cloze Deletion cards are, simply put, \"fill-in-the-blank cards\". This allows you to create cards that tests word audio or sentence audio.</p> <p>To create a cloze deletion card, simply fill in the <code>SeparateClozeDeletionCard</code> field. The words that are hidden are exactly the words that are bolded in the <code>Sentence</code> (or <code>AltDisplay</code>) field.</p> <p>To create a sentence audio card, copy/paste the sentence into <code>AltDisplay</code>, and bold the entire <code>AltDisplay</code> field (say, with <code>ctrl+a</code> and <code>ctrl+b</code>). There's currently no shortcut to creating a sentence audio card.</p> <p></p>"},{"location":"images/","title":"Images","text":"<p>This page is dedicated to showcasing how images can be displayed and interacted with.</p>"},{"location":"images/#main-image","title":"Main Image","text":"<p>The main image (shown to the right of the word reading) is exactly the contents of the <code>Picture</code> field. As you likely already know, this image can be clicked to zoom in.</p> <p>(TODO gif)</p> <p>This display of the picture automatically adjusts for any aspect ratio. For the best looking cards, it is recommended that you use images with aspect ratios between 16:9 (landscape) to 1:1 (square).</p> <p>(TODO screenshots)</p> <p>Note</p> <p>Instead of a picture, it is possible to use text within the <code>Picture</code> field. This is useful if you forgot to add the picture (or didn't want to add it in the first place), and would like to describe the scene in words.</p> <p>Do not use more than one picture, or combine pictures and text within the <code>Picture</code> field. If you have an image and would like to add text, add the text in the <code>PrimaryDefinition</code> or <code>AdditionalNotes</code> field. If you want to add more than one image, add the remaining images under <code>PrimaryDefinitionPicture</code> or <code>PrimaryDefinition</code>.</p>"},{"location":"images/#automatically-add-images-using-tags","title":"Automatically Add Images Using Tags","text":"<p>New in version <code>0.11.0.0</code> (latest version: <code>0.11.0.3</code>)</p> <p>One can automatically add a specific image if a card contains a specific tag.</p> <p>This is particularily useful for cards made from written media, such as books. One can save an image of the cover (in the media folder), and add the appropriate tag to all of the cards to automatically set the image to the cover of the book.</p> <p>This is specified under the runtime options:</p> <pre><code>\"modules\": {\n\"img-utils\": {\n\"add-image-if-contains-tags\": [\n...\n]\n}\n}\n</code></pre> <p>Example:</p> <pre><code>\"add-image-if-contains-tags\": [\n{\n\"tags\": [\"\u9752\u6625\u30d6\u30bf\u91ce\u90ce\u30fbLN1\"],\n\"file-name\": \"_\u9752\u6625\u30d6\u30bf\u91ce\u90ce-LN1.png\"\n}\n],\n</code></pre> <p>TODO example gif</p>"},{"location":"images/#collapsed-images","title":"Collapsed Images","text":"<p>Any customly inserted images, including images inserted directly by Yomichan, will be converted to text which you have to hover over to reveal. Of course, this image can also be clicked on to zoom. See the video demo below to see exactly what happens.</p> <p></p>"},{"location":"images/#how-to-disable-collapsed-images","title":"How to Disable Collapsed Images","text":"<p>There are three ways of disabling collapsed images.</p> <ol> <li> <p>Place your images in the <code>PrimaryDefinitionPicture</code> field, as shown in the section below.</p> </li> <li> <p>To disable this for only specific images,     edit the HTML     of the desired field, and add <code>data-do-not-convert=\"true\"</code>.</p> <p>An example is shown below: </p><pre><code>&lt;img src=\"your_image.png\" data-do-not-convert=\"true\"&gt;\n</code></pre> </li> <li> <p>Disable it globally in the runtime options:</p> <pre><code>\"img-utils\": {\n\"stylize-images-in-glossary\": false,\n// ...\n}\n</code></pre> </li> </ol>"},{"location":"images/#the-primarydefinitionpicture-field","title":"The <code>PrimaryDefinitionPicture</code> Field","text":"<p>New in version <code>0.11.0.0</code> (latest version: <code>0.11.0.3</code>)</p> <p>This field can be used to place images in the Primary Definition section without collapsing the image. Large images are automatically resized to fit the area.</p> <p>This is useful if one wants to put images in place of, or to suppliment definitions. For example, using images for words such as \"frog\" or \"chair\" is much easier to understand compared to using the monolingual definition.</p> Right of the definition (Default)Below the definitionAbove the definitionNo Definition <p> (\u7a81\u3063\u4f0f\u3059)     Usually, the image is placed to the right (like on Wikipedia).    </p> <p> (\u96d1\u5dfe)     If there is too little text, the image is automatically positioned below the text.     This will happen if there are only one or two lines of text for the definition.    </p> <p> (\u96d1\u5dfe)     If there is too little text and the correct options     are set, the image is automatically positioned above the text.    </p> <p> (\u96d1\u5dfe)     Naturally, the picture appears to the left if there is no definition.     As of version <code>0.11.1.0</code>, the size of the picture will also be slightly increased.    </p> <p>Note</p> <p>Although not recommended, the <code>PrimaryDefinitionPicture</code> does not need to contain pictures. For example, one can add text, tables, or links to the field.</p> <p></p>"},{"location":"images/#changing-automatic-positioning-behavior","title":"Changing Automatic Positioning Behavior","text":"<p>Warning</p> <p>New as of version <code>0.11.1.0</code>. This version is currently bleeding edge, so this feature cannot be used unless you compile the templates from the dev branch.</p> <p>There are a few runtime options that affect where the picture is positioned.</p> <ul> <li> <p><code>position</code> option:     </p><pre><code>\"modules\": {\n\"img-utils\": {\n\"primary-definition-picture\": {\n// Valid options (case sensitive): \"auto-bottom\", \"auto-top\", \"bottom\", \"right\", \"top\"\n\"position\": \"auto-bottom\",\n}\n}\n}\n</code></pre>     The options <code>bottom</code>, <code>right</code>, and <code>top</code> force the image to always be placed     below, to the right, and above the definition, respectively. <p><code>auto-bottom</code> is the default behavior, and will automatically position the picture below the definition if there is too little text. <code>auto-top</code> does the opposite: the picture will be positioned above the definition if there is too little text. Both <code>auto-bottom</code> and <code>auto-top</code> will position the picture to the right if there is sufficient amounts of text.</p> </li> <li> <p><code>position-lenience</code> option:     </p><pre><code>\"modules\": {\n\"img-utils\": {\n\"primary-definition-picture\": {\n// Any integer\n\"position-lenience\": ...\n}\n}\n}\n</code></pre>     This is a constant that allows the picture to be placed to the right even if     the text height is positionLenience times smaller than the picture. <p>The exact formula used is the following: </p><pre><code>positionToRight = (textHeight * positionLenience) &gt; picHeight\n</code></pre> </li> <li> <p><code>use-lenience</code> option:     </p><pre><code>\"modules\": {\n\"img-utils\": {\n\"primary-definition-picture\": {\n// Valid options: true, false\n\"use-lenience\": ...\n}\n}\n}\n</code></pre>     Setting this to false is equivalent of setting the <code>position-lenience</code> to a very large number.     This will cause the picture to be placed to the right if there is ANY text,     and placed to the left if there is no text. </li> </ul>"},{"location":"images/#force-positioning","title":"Force Positioning","text":"<p>The automatic repositioning as described above may not be perfect. Fortunately, there are ways to force the position of this image, by adding any of the following tags to the card:</p> <ul> <li><code>img-right</code> forces the image to be to the right.</li> <li><code>img-bottom</code> forces the image to be below the text.</li> <li><code>img-top</code> forces the image to be above the text.</li> </ul>"},{"location":"images/#image-blur","title":"Image Blur","text":"<p>New in version <code>0.10.3.0</code> (latest version: <code>0.11.0.3</code>)</p> <p>Images on cards can be automatically blurred by marking it with a NSFW tag. To mark a card as NSFW, add any of the following tags to the card:</p> <p><code>nsfw</code>\u30fb<code>NSFW</code>\u30fb<code>-NSFW</code></p> <p>This behavior is disabled by default. In other words, you will not be able to blur images unless the following setting is explicitly enabled in the runtime options:</p> Enabling image blur (click here) <pre><code>\"img-utils\": {\n\"enabled\": true, // (1)!\n\"nsfw-toggle\": {\n\"enabled\": true,\n// ...\n}\n}\n</code></pre> <ol> <li>The <code>img-utils</code> module must be enabled to use the image blur feature.</li> </ol> <p></p> <p>Note</p> <p>Recall that you can use custom text in the <code>Picture</code> field instead of having an actual picture. This is useful if you simply don't want to save a particular image.</p>"},{"location":"images/#change-review-session-state","title":"Change Review Session State","text":"<p>The above demo shows how you can un-blur an image temporarily. This means that if you see that card again during the same review session, the image will be blurred again.</p> <p>This state can be changed for a review session. To toggle between review-session states, hover over the info circle, and click on the eyeball to the top left. This state will be maintained for the entire review session, but will be lost on the next session.</p> <p>The tabs below show the available states. By default, states cycle from left to right.</p> Only Blur if NSFWAlways BlurredAlways Revealed Not Marked Marked (with <code>NSFW</code> tag) Not Marked Marked (with <code>NSFW</code> tag) Not Marked Marked (with <code>NSFW</code> tag) Demos (click here) Regular, unmarked cardCard marked as NSFW <p></p> <p></p> <p>Note</p> <p>Both examples have the info circle toggled (clicked), so the tooltip persists.</p>"},{"location":"images/#additional-details","title":"Additional Details","text":"<ul> <li>The eyeball to toggle the blur between an image will not be shown unless the card is marked as NSFW     (or the review session state is \"Always Blurred\").</li> <li>Clicking on the blurred image will do nothing; you must click on the eye to un-blur the image.     Forcing the user to click in a smaller area makes accidental reveals less common.</li> <li>After revealing the image, you can click on the image to zoom, as normal.     You cannot click on a blurred image to zoom.</li> <li>Most things can be changed in the runtime options,     including what tags can be used, the default initial state on PC/mobile, etc.</li> <li>This was heavily inspired by     Marv's implementation     of the same feature.</li> </ul>"},{"location":"importing/","title":"Transfer Existing Notes","text":""},{"location":"importing/#overview","title":"Overview","text":"<p>This section is dedicated to explaining how you can change other Anki cards into this note format.</p> <p>Note</p> <p>If you are simply importing old JPMN notes, updating JPMN will properly update all the notes in place. See this section instead.</p>"},{"location":"importing/#introduction","title":"Introduction","text":"<p>Unfortunately, there are so many card formats out there that it would be impossible to cover how to import from every format with detailed rigor. Instead, this section will give you some general tips on operations that will likely be common across most or all formats, as well as present a small example for Anime Cards.</p> <p>Additionally, although you maybe able to import most of the card, it is unlikely that you will have complete 100% full functionality after importing the notes. The biggest example is frequency list information, as it requires special HTML + css formatting that can only be specified in the Yomichan Templates section.</p>"},{"location":"importing/#prerequisites","title":"Prerequisites","text":"<p>Before doing anything that affects your Anki collection in a major way (for example, basically everything on this page), please make a complete backup of your collection.</p> <p>Note</p> <p>Transferring your previous notes shouldn't change your media files at all. However I recommend exporting with media just in case, so long as you have the disk space for it.</p>"},{"location":"importing/#anki","title":"Anki","text":"<p>Anki provides a feature to switch between note types, without affecting scheduling information. To do this, follow the proceeding steps:</p> <ol> <li> <p>Head to the Card Browser window:</p> <p>Main Window \u2192  <code>Browse</code></p> </li> <li> <p>Select all the cards that you want to switch.</p> <p>Tip</p> <p><code>ctrl+a</code> selects all cards in the browser.</p> </li> <li> <p>Right click the selection \u2192  <code>Notes</code> \u2192  <code>Change Note Type...</code></p> </li> </ol> <p></p>"},{"location":"importing/#mapping-fields","title":"Mapping Fields","text":"<p>Here is where I can't give specific advice, as every note is different. However, here are a few tips:</p> <ol> <li> <p>Map <code>Word</code> to <code>Key</code> and <code>Word</code>.</p> <p>Your card likely doesn't have a separate <code>Key</code> and <code>Word</code> field, and instead only contains one <code>Word</code> field. To import this correctly into JPMN, make sure JPMN's <code>Key</code> and <code>Word</code> field are exactly your old card's <code>Word</code> field.</p> </li> <li> <p>Leave <code>AJTWordPitch</code> and <code>SentenceReading</code> empty.</p> <p>These fields can be empty as AJT Japanese can batch generate both word pitches and sentence furigana.</p> </li> <li> <p>You may have some word pitch fields already in your card.     Pitch accent graphs should be mapped to <code>PAGraphs</code>, and     pitch accent positions should be mapped to <code>PAPositions</code>.</p> <p>Note that if you plan to use colored pitch accent on old cards, you must have a pitch accent positions field.2</p> </li> <li> <p><code>FrequencySort</code> maps to the frequency value used to sort by frequency, which works exactly     the same as Marv's <code>Frequency</code> field as documented in     this     page.</p> </li> <li> <p>If you have a field that stores the source of the media, I recommend mapping that to <code>AdditionalNotes</code>.</p> </li> <li> <p>The <code>WordReading</code> field should ideally be a simplified furigana format.     For example, if the word is \u6210\u308a\u7acb\u3064, this field should be \u300c\u6210[\u306a]\u308a \u7acb[\u305f]\u3064\u300d.     If you do not have any field that resembles this, use the kana reading (\u306a\u308a\u305f\u3064) or true furigana     (\u6210\u306a\u308a\u7acb\u305f\u3064), and continue with the steps below.</p> </li> <li> <p>I recommend not setting <code>FrequenciesStylized</code> to anything, even if you have a field for     frequency lists1.</p> </li> </ol> <p>An example with Anime cards is shown below.</p> Example for Anime Cards (click here) jp-mining-note fields Anime Cards Fields Key front Word front WordReading Reading PAOverride PAOverrideText AJTWordPitch PrimaryDefinition Glossary PrimaryDefinitionPicture Sentence Sentence SentenceReading AltDisplay AltDisplayPASentenceCard AdditionalNotes IsSentenceCard IsClickCard IsHoverCard IsTargetedSentenceCard PAShowInfo PATestOnlyWord PADoNotTest PASeparateWordCard PASeparateSentenceCard SeparateClozeDeletionCard Hint HintNotHidden Hint Picture Picture WordAudio Audio SentenceAudio SentenceAudio PAGraphs Graph PAPositions PASilence WordReadingHiragana FrequenciesStylized FrequencySort SecondaryDefinition ExtraDefinitions UtilityDictionaries Comment <p>Note</p> <p>Anything not specified should be set to <code>(Nothing)</code></p>"},{"location":"importing/#batch-editing","title":"Batch Editing","text":"<p>After switching your notes, you will have to do the following few steps:</p>"},{"location":"importing/#1-correctly-formatting-sentence-field","title":"(1) Correctly Formatting <code>Sentence</code> Field","text":"<p>If your sentence fields have been highlighted in a way that isn't using <code>&lt;b&gt;</code>, then it will be incompatable with JPMN by default.</p> <p>To see what the formatting of the sentence is, view the raw HTML of the <code>Sentence</code> field.</p> <p>Sentences are usually formatted in one of three ways, as shown below:</p> (1) Highlighted with <code>&lt;b&gt;</code>(2) Nothing is highlighted(3) Highlighted, but not with <code>&lt;b&gt;</code> <p>If the tested content is highlighted with <code>&lt;b&gt;</code>, then it is already formatted correctly. You can skip this step.</p> <p>Example: </p><pre><code>\u4eca\u65e5\u3082\u3001\u306a\u3093\u304b\u3001\u663c&lt;b&gt;\u7206\u7761&lt;/b&gt;\u3057\u3066\u3057\u307e\u3063\u305f\u3093\u306e\u3067\u2026\n</code></pre> <p>The note comes with a feature to automatically highlight the word within the sentence. However, this is an imperfect solution, and there is currently no easy way to add accurate highlighting to existing sentences.</p> <p>As there is nothing to do, you can skip this step.</p> <p>Example: </p><pre><code>\u4eca\u65e5\u3082\u3001\u306a\u3093\u304b\u3001\u663c\u7206\u7761\u3057\u3066\u3057\u307e\u3063\u305f\u3093\u306e\u3067\u2026\n</code></pre> <p>If the tested content is highlighted with something that isn't <code>&lt;b&gt;</code>, then continue with the following instructions to change it.</p> <p>Example: </p><pre><code>\u4eca\u65e5\u3082\u3001\u306a\u3093\u304b\u3001\u663c&lt;span style=\"color: #ffc2c7\"&gt;\u7206\u7761&lt;/span&gt;\u3057\u3066\u3057\u307e\u3063\u305f\u3093\u306e\u3067\u2026\n</code></pre> Instructions to port formatted sentences (click here) <p>Note</p> <p>You may want to make another backup before doing the following, just in case.</p> <ol> <li> <p>Determine how the sentence is formatted.</p> <p>We will be using the above for this example. This example highlights the word using a <code>&lt;span&gt;</code> with a custom color. </p><pre><code>\u4eca\u65e5\u3082\u3001\u306a\u3093\u304b\u3001\u663c&lt;span style=\"color: #ffc2c7\"&gt;\u7206\u7761&lt;/span&gt;\u3057\u3066\u3057\u307e\u3063\u305f\u3093\u306e\u3067\u2026\n</code></pre> <p>The above is created from the following Yomichan fields: </p><pre><code>{cloze-prefix}&lt;span style=\"color: #ffc2c7\"&gt;{cloze-body}&lt;/span&gt;{cloze-suffix}\n</code></pre> </li> <li> <p>Testing the Conversion.</p> <p>In the Anki card viewer, select only one of your old notes.</p> <p>Afterwards, right click the selection, and head over to:</p> <p><code>Notes</code> \u2192  <code>Find and Replace...</code></p> </li> <li> <p>Setting the fields.</p> <p>Set the <code>Find</code> field to something that can find your highlighted content. We will use the above as an example.</p> <p>It is extremely likely that you will have to change the <code>Find</code> field according to your note's sentence format.</p> Field name Value Find: <code>&lt;span style=\"color: #ffc2c7\"&gt;(?P&lt;t&gt;.*?)&lt;/span&gt;</code> Replace With: <code>&lt;b&gt;$t&lt;/b&gt;</code> In: <code>Sentence</code> Selected notes only Checked () Ignore case Unchecked () Treat input as aregular expression Checked () Example image (click here) <p> </p> </li> <li> <p>Verify.</p> <p>Press Ok, and then preview the card.</p> <p>If the highlight is yellow (or blue on light mode), then it it was successful! Repeat steps 2 and 3, except select all of the affected notes instead of just one.</p> <p>If it was not successful, you likely have to adjust the <code>Find</code> field. See here to see Anki's official documentation on regex.</p> </li> </ol> <p></p>"},{"location":"importing/#2-batch-generate-pitch-accents-and-sentence-furigana","title":"(2) Batch generate pitch accents and sentence furigana","text":"<p>This step requires the <code>AJT Japanese</code> addon to be correctly setup. Although this step is optional, pitch accents likely won't show for imported cards if you had nothing to import into <code>PAPositions</code>. In that case, this step is highly recommended.</p> <ol> <li> <p>Head to the Card Browser window:</p> <p>Main Window \u2192  <code>Browse</code></p> </li> <li> <p>Select all of your newly imported notes.</p> <p>Tip</p> <p>The following query should reveal all of your newly imported notes. Make sure you include the double quotes in the query search. </p><pre><code>\"note:JP Mining Note\"\n</code></pre> Afterwards, you can do <code>ctrl+a</code> to select all of the resulting cards.  </li> <li> <p>Head over to:</p> <p><code>Edit</code> (top left corner) \u2192  <code>AJT: Bulk-generate</code>.</p> </li> </ol> <p></p>"},{"location":"importing/#3-batch-set-pasilence-field","title":"(3) Batch Set <code>PASilence</code> Field","text":"<p>This will ensure all <code>PASilence</code> are filled correctly. See here to understand what this field does. This can be done within Anki itself, or with Python.</p> Within AnkiWith Python <ol> <li>Head to the Card Browser window.</li> <li> <p>Right click a card, and then head to:</p> <p><code>Notes</code> \u2192  <code>Find and Replace...</code></p> </li> <li> <p>Set the fields to the following:</p> Field name Value Find: <code>.*</code> Replace With: <code>[sound:_silence.wav]</code> In: <code>PASilence</code> (IMPORTANT! Do not forget this field!) Selected notes only Unchecked () Ignore case Unchecked () Treat input as aregular expression Checked () Example image (click here) <p> </p> </li> </ol> <pre><code># assuming you are at the root of the repo,\n# i.e. after the `git clone ...` and `cd jp-mining-note`\ncd ./tools\n\n# make sure you have Anki open and Anki-Connect installed!\npython3 ./batch.py -f \"set_pasilence_field\"\n</code></pre> <p></p>"},{"location":"importing/#4-correctly-formatting-wordreading-field","title":"(4) Correctly Formatting <code>WordReading</code> Field","text":"<p>Your <code>WordReading</code> field is likely formatted in one of three ways:</p> Furigana (plain)FuriganaKana only <p>This is generated with the <code>{furigana-plain}</code> marker.</p> <p>Example: \u6210[\u306a]\u308a \u7acb[\u305f]\u3064</p> <p>If your <code>WordReading</code> field is formatted this way, then the <code>WordReading</code> field is already formatted correctly. You can skip this step.</p> <p>This is generated with the <code>{furigana}</code> marker.</p> <p>Example: \u6210\u306a\u308a\u7acb\u305f\u3064 (HTML: <code>&lt;ruby&gt;\u6210&lt;rt&gt;\u306a&lt;/rt&gt;&lt;/ruby&gt;\u308a&lt;ruby&gt;\u7acb&lt;rt&gt;\u305f&lt;/rt&gt;&lt;/ruby&gt;\u3064</code>)</p> <p>If your <code>WordReading</code> field is formatted this way, it would be ideal to convert this into plain furigana so the note can properly parse the field.</p> Instructions for converting furigana into plain furigana (click here) <ol> <li>Head to the Card Browser window.</li> <li> <p>Right click a card, and then head to:</p> <p><code>Notes</code> \u2192  <code>Find and Replace...</code></p> </li> <li> <p>Set the fields to the following:</p> Field name Value Find: <code>&lt;ruby&gt;(&lt;rb&gt;)?(?P&lt;kanji&gt;.*?)(&lt;/rb&gt;)?&lt;rt&gt;(?P&lt;furigana&gt;.*?)&lt;/rt&gt;&lt;/ruby&gt;</code> Replace With: <code>\u00a0$kanji[$furigana]</code> (Keep the whitespace at the beginning!) In: <code>WordReading</code> Selected notes only Unchecked () Ignore case Unchecked () Treat input as aregular expression Checked () </li> </ol> <p>This is generated with the <code>{reading}</code> marker.</p> <p>Example: \u306a\u308a\u305f\u3064</p> <p>This means that your old cards only have a kana reading. It would be ideal to have the <code>WordReading</code> as the kanji word with furigana. You likely want the kanji word with the furigana, so the kanjis actually show in the proper places. Some examples include the kanji hover tooltip as well as to the left of the picture field.</p> Instructions for converting kana readings into (plain) furigana (click here) <p>The solution provided below is imperfect, but passable. This will format all of the <code>WordReading</code> fields to be <code>Word[WordReading]</code>, which means kana will repeated. For example, a card with <code>Word</code> as \u6210\u308a\u7acb\u3064, and <code>WordReading</code> as \u306a\u308a\u305f\u3064, will turn into: \u6210\u308a\u7acb\u3064\u306a\u308a\u305f\u3064</p> <p>To do this, you will have to run a Python script from the repository. For Windows users, see the first 3 steps for the Windows instructions here if you haven't use Python before.</p> <p>Afterwards, create a backup and run the following:</p> WindowsMacOS &amp; Linux <pre><code>:: assuming you are in jp-mining-note/tools\n:: make sure you have Anki open and Anki-Connect installed!\npython batch.py -f \"quick_fix_convert_kana_only_reading_all_notes\"\n</code></pre> <pre><code># assuming you are in jp-mining-note/tools\n# make sure you have Anki open and Anki-Connect installed!\npython3 batch.py -f \"quick_fix_convert_kana_only_reading_all_notes\"\n</code></pre> <p>The above will affect ALL notes. If you instead want to affect certain notes, add the <code>kanaonlyreading</code> tag to all affected notes, and then run:</p> WindowsMacOS &amp; Linux <pre><code>python batch.py -f \"quick_fix_convert_kana_only_reading_with_tag\"\n</code></pre> <pre><code>python3 batch.py -f \"quick_fix_convert_kana_only_reading_with_tag\"\n</code></pre> <p></p>"},{"location":"importing/#5-optional-batch-set-wordreadinghiragana-field","title":"(5) (Optional) Batch set <code>WordReadingHiragana</code> Field","text":"<p>New in version <code>0.11.0.0</code> (latest version: <code>0.11.0.3</code>)</p> <p>The following automatically fills out the <code>WordReadingHiragana</code> field.</p> <p>Filling out the <code>WordReadingHiragana</code> field is optional but highly recommended. This will enable the usage of Word Indicators on existing cards.</p> <p>To do this, you will have to run a Python script. Again, for Windows users, if you have not used Python before, see the first 3 steps for the \"Windows\" instructions here.</p> <p>The following script assumes that Step 4 is done (which means your <code>WordReading</code> field is formatted as plain furigana). Do not run this script if you have not successfully completed Step 4.</p> WindowsMacOS &amp; Linux <pre><code>:: assuming you are in jp-mining-note/tools\n:: make sure you have Anki open and Anki-Connect installed!\npython batch.py -f \"fill_word_reading_hiragana_field\"\n</code></pre> <pre><code># assuming you are in jp-mining-note/tools\n# make sure you have Anki open and Anki-Connect installed!\npython3 batch.py -f \"fill_word_reading_hiragana_field\"\n</code></pre>"},{"location":"importing/#6-optional-backfill-the-frequencysort-field","title":"(6) (Optional) Backfill the <code>FrequencySort</code> Field","text":"<p>As mentioned ealier, <code>FrequencySort</code> behaves exactly the same as Marv's <code>Frequency</code> field as documented in this page. That page also contains instructions on how to backfill the field if it is empty.</p> <p>If you are following the command line instructions, use the following command: </p><pre><code>python backfill.py \"Word\" --freq-field \"FrequencySort\" --query \"FrequencySort: \\\"note:JP Mining Note\\\"\"\n</code></pre>"},{"location":"importing/#conclusion","title":"Conclusion","text":"<p>If everything went smoothly, then you have successfully transferred your notes to the JPMN template. Enjoy reviewing your old cards with a new template!</p> <ol> <li> <p><code>FrequenciesStylized</code> uses a custom set of handlebars to store the frequency info in a way that css styles can be easily applied without javascript. This differs heavily from the <code>{frequencies}</code> marker provided by Yomichan. Mapping an existing field that stores frequencies using <code>{frequencies}</code> to <code>FrequenciesStylized</code> will result in incorrect display of data.</p> <p>There is currently no convenience function to convert it to the proper format.</p> <p>Additionally, auto-generating frequency info (with the correct css, html, etc.) from arbitrary frequency lists does not seem trivial, and I currently provide no way of doing that (primarily because I'm not sure how to do it in the first place). If you know of a way or would like to help me out with doing this, please let me know!\u00a0\u21a9</p> </li> <li> <p>The current implementation of colored pitch accent cannot detect the pitch accent position from the svg graph, nor from the automatically generated pitch accent from <code>AJT Pitch Accent</code>. If you do not have a pitch accent positions field, the only way to have colored pitch accent on old cards is by manually setting the position for all affected cards.</p> <p>Of course, any new cards should have automatically generated pitch accent positions, so long as you have a Yomichan pitch accent dictionary installed.\u00a0\u21a9</p> </li> </ol>"},{"location":"jpresources/","title":"JP Resources","text":"<p>A collection of tips and tricks, primarily related to CSS, Yomichan templates, and ShareX.</p> <p>This page was inspired by Marv's resources page, which has a bunch of different but equally awesome resources. I highly recommend checking it out!</p> <p>If you encounter any problems, have any questions, etc., feel free to contact me on discord <code>Aquafina water bottle#3026</code>, or submit an issue. I exist on the TheMoeWay and Refold (Japanese) servers.</p>"},{"location":"jpresources/#master-project-list","title":"Master Project List","text":"<p>This contains the list of all my current projects that relate to learning Japanese.</p> <ul> <li> <p>jp-mining-note</p> <p>jp-mining-note is a highly customizable Anki card template for studying Japanese, designed to be visually appealing and simple to use without sacrificing functionality. Easily paired with most automatic card creation workflows, this aims to make your experience with Anki as smooth as possible.</p> </li> <li> <p>Local Audio Server for Yomichan</p> <p>This Anki add-on runs a local server of which Yomichan can fetch audio files from, using a database containing over 200,000 unique expressions. With this setup, you are able to create Anki cards nearly instantaneously, and get word audio without a working internet connection.</p> </li> <li> <p>All Anki note templates I can find</p> <p>I catalogue all note templates I can possibly find (that isn't jp-mining-note, and made for learning Japanese) here.</p> </li> <li> <p>JMdict (English) for Yomichan</p> <p>This simply contains a Yomichan dictionary version of <code>JMdict (English)</code> from the main website (from files <code>JMdict_e</code> and <code>JMdict_e_examp</code>), compiled using yomichan-import. (Disclaimer: I did not make any of these tools.)</p> <p>This repository exists to simply give people a more up-to-date version of this dictionary, for people who don't want to compile the dictionary themselves. A more up-to-date version of JMdict usually provides better definitions and coverage compared to older versions, so I would recommend updating this dictionary every few months.</p> </li> </ul>"},{"location":"jpresources/#css-yomichan","title":"CSS (Yomichan)","text":""},{"location":"jpresources/#how-to-add-custom-css-in-yomichan","title":"How-To: Add Custom CSS In Yomichan","text":"<p>To add custom CSS in Yomichan, do the following:</p> <ol> <li>Head over to Yomichan settings (Yomichan extension marker -&gt; cogwheel)</li> <li>Go to <code>Appearance</code> \u2192  <code>Configure custom CSS...</code></li> <li>Add the CSS to the top section.</li> <li>Close the window.</li> </ol> Demo (click here) <p></p>"},{"location":"jpresources/#not-selecting-or-copying-furigana","title":"Not selecting or copying furigana","text":"<p>If you want to select / copy the main word within Yomichan without copying the furigana, you can use the following CSS:</p> <pre><code>.headword-term ruby rt {\nuser-select: none;\n}\n</code></pre> <p>Note</p> <p>The above is actually general enough to use for Anki cards itself, say with the following CSS: </p><pre><code>ruby rt {\nuser-select: none;\n}\n</code></pre>"},{"location":"jpresources/#limiting-the-number-of-frequency-lists","title":"Limiting the number of frequency lists","text":"<pre><code>/* Only shows the first 2 frequency lists */\nspan.frequency-group-item:nth-child(n+3) {\ndisplay: none;\n}\n</code></pre> (Thanks Marv#5144 for the CSS. Original message on TMW server) Demo (click here)"},{"location":"jpresources/#limiting-the-number-of-pitch-accent-dictionaries","title":"Limiting the number of pitch accent dictionaries","text":"<p>The following CSS displays only the first 2 pitch accent dictionaries: </p><pre><code>/* Only shows the first 2 pitch accent dictionaries */\nli.pronunciation-group:nth-child(n+3) {\ndisplay: none;\n}\n</code></pre> <p>Make the pitch accent dictionary text a bit grey by default, and to make specifically the \"NHK\" and \"\u5927\u8f9e\u6cc9\" white (change these two to any dictionary you find to be of higher quality) </p><pre><code>/* Greys out all pitch accent dictionary names */\n/* Sets NHK and \u5927\u8f9e\u6cc9 pitch accent dictionaries to a white name */\n.tag[data-category=\"pronunciation-dictionary\"] {\n--tag-text-color: #c8bfdb;\n}\n.tag[data-details=\"\u5927\u8f9e\u6cc9\"], .tag[data-details=\"NHK\"] {\n--tag-text-color: #FFFFFF;\n}\n</code></pre> Demo (click here) <p></p>"},{"location":"jpresources/#hide-the-dictionary-but-allow-it-to-be-used-by-anki","title":"Hide the dictionary, but allow it to be used by Anki","text":"<p>The default way to hide a dictionary is by disabling the dictionary under Yomichan's <code>Dictionaries</code> section. However, if you disable the dictionary, you cannot export it into Anki, which is a problem if you are using a bilingual profile but you want to export monolingual definitions.</p> <p>Steps:</p> <ol> <li>Ensure that the dictionary is enabled in your Yomichan profile.</li> <li>Add the following CSS for the desired dictionaries (this has to be done for each individual dictionary):</li> </ol> <pre><code>li.definition-item[data-dictionary='DICTIONARY'] {\ndisplay: none;\n}\n</code></pre> Example CSS for JMdict (click here) <pre><code>li.definition-item[data-dictionary='JMdict (English)'] {\ndisplay: none;\n}\n</code></pre> Demo (click here) <p></p>"},{"location":"jpresources/#hide-bilingual-definitions-until-hover","title":"Hide bilingual definitions until hover","text":"<p>Add the following CSS for the desired dictionaries (this has to be done for each individual dictionary): </p><pre><code>li.definition-item[data-dictionary='DICTIONARY'] .gloss-list {\nopacity: 0;\n}\nli.definition-item[data-dictionary='DICTIONARY']:hover .gloss-list {\nopacity: 1;\n}\n</code></pre> Example CSS for JMdict (click here) <pre><code>li.definition-item[data-dictionary='JMdict (English)'] .gloss-list {\nopacity: 0;\n}\nli.definition-item[data-dictionary='JMdict (English)']:hover .gloss-list {\nopacity: 1;\n}\n</code></pre> Demo (click here) <p></p>"},{"location":"jpresources/#remove-the-add-reading-button","title":"Remove the \"Add Reading\" button","text":"<p>This removes the small green button to add the reading.</p> <pre><code>button[title^=\"Add reading\"] {\ndisplay:none;\n}\n</code></pre> Demo (click here) <p> Left: without CSS. Right: with CSS. </p>"},{"location":"jpresources/#coloring-dictionaries","title":"Coloring Dictionaries","text":"<p>Darius has some CSS here that uniquely colors popular dictionaries.</p>"},{"location":"jpresources/#css-other","title":"CSS (Other)","text":""},{"location":"jpresources/#ensuring-properly-quotes-the-text","title":"Ensuring \u300c\u300d properly quotes the text","text":"<pre><code>.jp-quote-text {\ntext-indent: -1em;\npadding-left: 1em;\n}\n</code></pre> <p>On the example to the right, the first quote is the standard display without any custom CSS. The second quote is with the aforementioned CSS.</p> <p>An example JSFiddle can be found here.</p>"},{"location":"jpresources/#changing-the-japanese-font-on-discord","title":"Changing the Japanese font on Discord","text":"<p>Note</p> <p>Discord's codebase is always subject to change, so this method may not work in the future.</p> <ol> <li>Get BetterDiscord so you can use custom CSS.</li> <li>In Discord Settings \u2192  <code>Custom CSS</code> section, add the following:     <pre><code>:lang(ja), :lang(ja-JP) {\n--font-primary: \"gg sans\",\"YOUR-PREFERRED-FONT\",\"Hiragino Sans\",\"\u30d2\u30e9\u30ae\u30ce\u89d2\u30b4 ProN W3\",\"Hiragino Kaku Gothic ProN\",\u30e1\u30a4\u30ea\u30aa,Meiryo,Osaka,\"MS PGothic\",\"Noto Sans\",\"Helvetica Neue\",Helvetica,Arial,sans-serif;\n--font-display: var(--font-primary);\n}\n</code></pre></li> </ol> Example CSS for Noto Sans (click here) <pre><code>:lang(ja), :lang(ja-JP) {\n--font-primary: \"gg sans\",\"Noto Sans CJK JP\",\"Hiragino Sans\",\"\u30d2\u30e9\u30ae\u30ce\u89d2\u30b4 ProN W3\",\"Hiragino Kaku Gothic ProN\",\u30e1\u30a4\u30ea\u30aa,Meiryo,Osaka,\"MS PGothic\",\"Noto Sans\",\"Helvetica Neue\",Helvetica,Arial,sans-serif;\n--font-display: var(--font-primary);\n}\n</code></pre> Discord's default CSS (click here) <pre><code>:lang(ja), :lang(ja-JP) {\n--font-primary: \"gg sans\",\"Hiragino Sans\",\"\u30d2\u30e9\u30ae\u30ce\u89d2\u30b4 ProN W3\",\"Hiragino Kaku Gothic ProN\",\u30e1\u30a4\u30ea\u30aa,Meiryo,Osaka,\"MS PGothic\",\"Noto Sans\",\"Helvetica Neue\",Helvetica,Arial,sans-serif;\n--font-display: \"gg sans\",\"Hiragino Sans\",\"\u30d2\u30e9\u30ae\u30ce\u89d2\u30b4 ProN W3\",\"Hiragino Kaku Gothic ProN\",\u30e1\u30a4\u30ea\u30aa,Meiryo,Osaka,\"MS PGothic\",\"Noto Sans\",\"Helvetica Neue\",Helvetica,Arial,sans-serif;\n}\n</code></pre> <p>Note</p> <p>If you are using the browser version of Discord, you can also change the font with the Stylus extension. I personally don't use this, so I'll leave it to the user to figure out the settings. ;)</p> Changelog <ul> <li><code>22/12/01</code>: Changed <code>Whitney</code> to <code>gg sans</code> to match with Discord's new font</li> <li><code>22/12/05</code>: Added <code>--font-display</code>, added missing <code>Noto Sans</code> to all the fonts</li> </ul>"},{"location":"jpresources/#yomichan-templates-handlebars","title":"Yomichan Templates / Handlebars","text":"<p>Note</p> <p>If you are using the jp-mining-note template, most things here will likely not be useful for you  as the Yomichan templates that comes with the note already contains most of these features and more.</p>"},{"location":"jpresources/#how-to-edit-yomichan-fields","title":"How-To: Edit Yomichan Fields","text":"<ol> <li>Navigate to Yomichan Settings.</li> <li>Go to the <code>Anki</code> section.</li> <li>Select <code>Anki card format...</code>.</li> </ol> Demo (click here) <p>The above showcases option 2 of this example.</p>"},{"location":"jpresources/#how-to-edit-yomichan-templates-handlebars","title":"How-To: Edit Yomichan Templates (Handlebars)","text":"<ol> <li>Navigate to Yomichan Settings.</li> <li>Make sure that advanced settings are turned on (bottom left corner).</li> <li>Go to the <code>Anki</code> section</li> <li>Select <code>Configure Anki card templates...</code></li> </ol> Demo (click here)"},{"location":"jpresources/#grab-only-the-first-pitch-accent-dictionary","title":"Grab only the first pitch accent dictionary","text":"<p>Adds the following Yomichan Fields:</p> <ul> <li><code>{pitch-accents-single-dict}</code>: Pitch accent in text (downstep) format</li> <li><code>{pitch-accent-graphs-single-dict}</code>: Pitch accent in svg graph format</li> <li><code>{pitch-accent-positions-single-dict}</code>: Pitch accent in positions (number) format</li> </ul> Template code (click here) <pre><code>{{#*inline \"pitch-accent-list-single-dict\"}}\n{{~#if (op \"&gt;\" pitchCount 1)~}}&lt;ol&gt;{{~/if~}}\n{{~#eachUpTo pitches 1~}}\n{{~#each pitches~}}\n{{~#if (op \"&gt;\" ../../pitchCount 1)~}}&lt;li&gt;{{~/if~}}\n{{~&gt; pitch-accent-item-disambiguation~}}\n{{~&gt; pitch-accent-item format=../../format~}}\n{{~#if (op \"&gt;\" ../../pitchCount 1)~}}&lt;/li&gt;{{~/if~}}\n{{~/each~}}\n{{~else~}}\n        No pitch accent data\n{{~/eachUpTo~}}\n{{/inline}}\n{{#*inline \"pitch-accents-single-dict\"}}\n{{~&gt; pitch-accent-list-single-dict format='text'~}}\n{{/inline}}\n{{#*inline \"pitch-accent-graphs-single-dict\"}}\n{{~&gt; pitch-accent-list-single-dict format='graph'~}}\n{{/inline}}\n{{#*inline \"pitch-accent-positions-single-dict\"}}\n{{~&gt; pitch-accent-list-single-dict format='position'~}}\n{{/inline}}\n</code></pre> Modified version of the above for Anime Cards (click here) <pre><code>{{#*inline \"pitch-accent-list-single-dict\"}}\n{{~#if (op \"&gt;\" pitchCount 1)~}}{{~/if~}}\n{{~#eachUpTo pitches 1~}}\n{{~#each pitches~}}\n{{~#if (op \"&gt;\" ../../pitchCount 1)~}}{{~/if~}}\n{{~&gt; pitch-accent-item-disambiguation~}}\n{{~&gt; pitch-accent-item format=../../format~}}\n{{~#if (op \"&gt;\" ../../pitchCount 1)~}}{{~/if~}}\n{{~/each~}}\n{{~else~}}\n{{~/eachUpTo~}}\n{{/inline}}\n{{#*inline \"pitch-accents-single-dict\"}}\n{{~&gt; pitch-accent-list-single-dict format='text'~}}\n{{/inline}}\n{{#*inline \"pitch-accent-graphs-single-dict\"}}\n{{~&gt; pitch-accent-list-single-dict format='graph'~}}\n{{/inline}}\n{{#*inline \"pitch-accent-positions-single-dict\"}}\n{{#regexReplace \"&lt;(.|\\n)*?&gt;\" \"\"}}{{~&gt; pitch-accent-list-single-dict format='position'~}}{{/regexReplace}}\n{{/inline}}\n</code></pre> <p> (Thanks An#7416 for the template code. Original message on TMW server). </p>"},{"location":"jpresources/#export-only-the-selected-text-only-if-text-is-selected","title":"Export only the selected text (only if text is selected)","text":"<p>Adds: <code>{selection-text-or-glossary}</code></p> <p>Allows you to export only a section of a glossary by highlighting over it, and uses the glossary by default if you don't have anything highlighted.</p> Template code (click here) <pre><code>{{#*inline \"selection-text-or-glossary\"}}\n{{~#if (op \"!==\" (getMedia \"selectionText\") \"\")~}}\n        {{~#getMedia \"selectionText\"}}{{/getMedia~}}\n{{~else~}}\n{{~&gt; glossary ~}}\n{{/if~}}\n{{/inline}}\n</code></pre> <p>Note</p> <p>Related Github issue.</p>"},{"location":"jpresources/#grab-only-the-first-dictionary","title":"Grab only the first dictionary","text":"<p>Adds: <code>{glossary-first}</code></p> <p>The following grabs the first dictionary (including every definition within said dictionary).</p> <p>For further customization on how the first dictionary is selected (say, for automatic bilingual / monolingual separation), see the handlebars code used by jp-mining-note here.</p> Template code (click here) <pre><code>{{~#*inline \"glossary-first\"~}}\n{{~#scope~}}\n{{~#set \"first-dictionary\" null}}{{/set~}}\n{{~#each definition.definitions~}}\n{{~#if (op \"===\" null (get \"first-dictionary\"))~}}\n                {{~#set \"first-dictionary\" dictionary~}}{{~/set~}}\n            {{~/if~}}\n        {{~/each~}}\n        {{~#if (op \"!==\" null (get \"first-dictionary\"))~}}\n            &lt;div style=\"text-align: left;\"&gt;&lt;ol&gt;\n            {{~#each definition.definitions~}}\n                {{~#if (op \"===\" dictionary (get \"first-dictionary\"))~}}\n                    &lt;li&gt;{{~&gt; glossary-single . brief=../brief noDictionaryTag=../noDictionaryTag ~}}&lt;/li&gt;\n{{~/if~}}\n{{~/each~}}\n            &lt;/ol&gt;&lt;/div&gt;\n{{~/if~}}\n{{~/scope~}}\n{{~/inline~}}\n</code></pre>"},{"location":"jpresources/#automatically-highlight-the-tested-word-within-the-sentence-upon-card-creation","title":"Automatically highlight the tested word within the sentence upon card creation","text":"Option 1: Bold only <p>Yomichan Fields: </p><pre><code>{cloze-prefix}&lt;b&gt;{cloze-body}&lt;/b&gt;{cloze-suffix}\n</code></pre> Option 2: Bold + Styling (recommended) <p>Yomichan Fields: </p><pre><code>{cloze-prefix}&lt;b&gt;{cloze-body}&lt;/b&gt;{cloze-suffix}\n</code></pre> <p>Anki Note CSS (the <code>Styling</code> page under the editing card templates page): </p><pre><code>b {\ncolor: #fffd9e; /* bright yellow */\n}\n</code></pre> <p>If your card template is formatted like <code>&lt;div class=\"sentence\"&gt;{{ Sentence }}&lt;/div&gt;</code>: </p><pre><code>.sentence b {\ncolor: #fffd9e; /* bright yellow */\n/* if you want to make the word not bolded, un-comment the following */\n/*font-weight: normal;*/\n}\n</code></pre> Option 3: Custom div <p>Yomichan Fields: </p><pre><code>{cloze-prefix}&lt;span class=\"word-highlight\"&gt;{cloze-body}&lt;/span&gt;{cloze-suffix}\n</code></pre> <p>Anki Note CSS: </p><pre><code>.word-highlight {\ncolor: #fffd9e;\n}\n</code></pre> <p>Note</p> <p>I personally prefer using Option 2 (bold + styling) over a custom div because it makes editing the note easier. For example, if you want to edit the highlighted region, you only have to bold the desired region (say, with ctrl+b) instead of having to edit the raw HTML of the field (say, with ctrl+shift+x).</p> <p>See also: How to automatically highlight the targetted word within the sentence     for already existing cards.</p>"},{"location":"jpresources/#plain-style-sentence-furigana","title":"Plain-Style Sentence Furigana","text":"<p>Adds: <code>{sentence-bolded-furigana-plain}</code></p> <p>This does the following:</p> <ul> <li>Generates plain style furigana on the sentence (e.g. \u300c \u65e5\u672c\u8a9e[\u306b\u307b\u3093\u3054]\u300d</li> <li>Bolds the added word</li> </ul> <p>To use this in Anki, add <code>furigana:</code> in front of the field within the template code. For example, if your field is <code>SentenceReading</code>, use <code>{{furigana:SentenceReading}}</code>.</p> Template code (click here) <pre><code>{{#*inline \"sentence-bolded-furigana-plain\"}}\n{{~#if definition.cloze~}}\n{{~#regexReplace \"(&lt;span class=\\\"term\\\"&gt;)|(&lt;/span&gt;)\" \"\" \"g\"~}}\n{{~#regexReplace \"&lt;ruby&gt;(.+?)&lt;rt&gt;(.+?)&lt;/rt&gt;&lt;/ruby&gt;\" \" $1[$2]\" \"g\"~}}\n{{~#if (hasMedia \"textFurigana\" definition.cloze.prefix)~}}\n{{~#getMedia \"textFurigana\" definition.cloze.prefix escape=false}}{{/getMedia~}}\n{{~else~}}\n{{~definition.cloze.prefix~}}\n{{~/if~}}\n            &lt;b&gt;\n{{~#if (hasMedia \"textFurigana\" definition.cloze.body)~}}\n{{~#getMedia \"textFurigana\" definition.cloze.body escape=false}}{{/getMedia~}}\n{{~else~}}\n{{~definition.cloze.body~}}\n{{~/if~}}\n            &lt;/b&gt;\n{{~#if (hasMedia \"textFurigana\" definition.cloze.suffix)~}}\n{{~#getMedia \"textFurigana\" definition.cloze.suffix escape=false}}{{/getMedia~}}\n{{~else~}}\n{{~definition.cloze.suffix~}}\n{{~/if~}}\n{{~/regexReplace~}}\n{{~/regexReplace~}}\n{{~/if~}}\n{{/inline}}\n</code></pre> <p> Thanks to Skillesss: for the base code and DaNautics#8833 for finding the above + removing the span classes </p> Comparisons to alternatives (click here) <ul> <li> <p>AJT Furigana can auto-generate furigana on card add     and can add furigana to any text within a field even after a card add.     However, generating furigana cannot be done within this addon on Android,     as this is a PC add-on.</p> <p>Nonetheless, I recommend keeping AJT Furigana so furigana can be generated even after editing the sentence field.</p> </li> <li> <p>The <code>{furigana}</code> marker provided by default in Yomichan does not generate plain style furigana,     which makes editing furigana more difficult in Anki.</p> </li> </ul>"},{"location":"jpresources/#further-reading","title":"Further Reading","text":"<p>Official documentation om Yomichan's templates:</p> <ul> <li>Yomichan template helper functions</li> <li>Yomichan template structure</li> </ul> <p>Example template code can be found here:</p> <ul> <li> <p>Markers for individual dictionaries:     here</p> <ul> <li>This has certain extended capabilities over my template code, such as removing the first line.</li> </ul> </li> <li> <p>Template code for this note:     here and     here</p> </li> <li> <p>Old template code for this note (NO LONGER USED / MAINTAINED):     here</p> </li> </ul>"},{"location":"jpresources/#sharex-scripts","title":"ShareX Scripts","text":"<p>Many people have already documented how to setup your ShareX to work with Anki, such as:</p> <ul> <li>stegatxins0 (recommended)</li> <li>Anime Cards</li> </ul> <p>Instead of re-telling the steps they have already showed, I present alternative ShareX scripts (the long one-liner to paste within the <code>Actions</code> argument section) for stegatxins0's guide.</p> <p>The following scripts have the following changes:</p> <ul> <li>They all work with jp-mining-note by default.</li> <li>They have been rewritten so it can be presented in human-readable format     right below the one-liner.</li> <li>The one-liners can be re-compiled from the source code at your own discretion     (by building the documentation).     All the powershell source code can be found     here.</li> </ul>"},{"location":"jpresources/#screenshot-and-clipboard-hotkey","title":"Screenshot and Clipboard Hotkey","text":""},{"location":"jpresources/#features","title":"Features","text":"<ul> <li>Adds the selected image to the note. This image is automatically shrunk     (within the field viewer only, if you are using Anki versions 2.1.50+).</li> <li>Adds a tag to the note. The tag is exactly the window name of the current application.</li> <li>Sets the <code>AdditionalNotes</code> to the current clipboard. I use this for copying/pasting context     (the lines surrounding the sentence).</li> </ul>"},{"location":"jpresources/#how-to","title":"How-To","text":"<p>Follow the steps for setting up the screenshot hotkey, and use this script in place of step 8's <code>argument</code>.</p> ShareX Script (click here) <pre><code>-NoProfile -Command \"function Run-Json { param( $json_map ); $json = $json_map | ConvertTo-Json -Depth 5; $data = Invoke-RestMethod -Uri http://127.0.0.1:8765 -Method Post -ContentType 'application/json; charset=UTF-8' -Body $json; return $data; }; $clipboard = (Get-Clipboard | where{$_ -ne \\\"\\\"}) -join \\\"&lt;br&gt;\\\"; $media_name = '$input' | Split-Path -leaf; $added_notes = Run-Json @{ action = 'findNotes'; version = 6; params = @{ query = 'added:1'; } }; $sorted_list = $added_notes.result | Sort-Object -Descending {[Long]$_}; $curr_note_id = $sorted_list[0]; $curr_note_data = Run-Json @{ action = 'notesInfo'; version = 6; params = @{ notes = @($curr_note_id); } }; $curr_note_sent = $curr_note_data.result.fields.Sentence.value; $result_clipboard = $clipboard; if ($curr_note_sent -match '&lt;b&gt;(?&lt;bolded&gt;.+)&lt;/b&gt;') { $bolded = $matches['bolded']; $result_clipboard = $clipboard.replace($bolded, \\\"&lt;b&gt;$bolded&lt;/b&gt;\\\"); }; Run-Json @{ action = 'updateNoteFields'; version = 6; params = @{ note = @{ id = $curr_note_id; fields = @{ Picture = \\\"&lt;img data-editor-shrink=`\\\"true`\\\" src=`\\\"$media_name`\\\"&gt;\\\"; AdditionalNotes = $result_clipboard; } } } }; if ($media_name -match '(?&lt;tag&gt;.+)_.*') { $tag = $matches['tag']; } Run-Json @{ action = 'addTags'; version = 6; params = @{ notes = @($curr_note_id); tags = $tag; } };\"\n</code></pre> Original ShareX Code (click here) <pre><code># (common begin)\nfunction Run-Json {\nparam( $json_map );\n$json = $json_map | ConvertTo-Json -Depth 5;\n$data = Invoke-RestMethod -Uri http://127.0.0.1:8765 -Method Post -ContentType `\n'application/json; charset=UTF-8' -Body $json;\nreturn $data;\n};\n# (common end)\n$clipboard = (Get-Clipboard | where{$_ -ne \"\"}) -join \"&lt;br&gt;\";\n# gets only the file name\n$media_name = '$input' | Split-Path -leaf;\n$added_notes = Run-Json @{\naction = 'findNotes';\nversion = 6;\nparams = @{\nquery = 'added:1';\n}\n};\n$sorted_list = $added_notes.result | Sort-Object -Descending {[Long]$_};\n$curr_note_id = $sorted_list[0];\n# attempts to bold the found word within the clipboard\n$curr_note_data = Run-Json @{\naction = 'notesInfo';\nversion = 6;\nparams = @{\nnotes = @($curr_note_id);\n}\n};\n$curr_note_sent = $curr_note_data.result.fields.Sentence.value;\n$result_clipboard = $clipboard;\nif ($curr_note_sent -match '&lt;b&gt;(?&lt;bolded&gt;.+)&lt;/b&gt;') {\n$bolded = $matches['bolded'];\n# may not replace anything\n$result_clipboard = $clipboard.replace($bolded, \"&lt;b&gt;$bolded&lt;/b&gt;\");\n};\nRun-Json @{\naction = 'updateNoteFields';\nversion = 6;\nparams = @{\nnote = @{\nid = $curr_note_id;\nfields = @{\nPicture = \"&lt;img data-editor-shrink=`\"true`\" src=`\"$media_name`\"&gt;\";\nAdditionalNotes = $result_clipboard;\n}\n}\n}\n};\nif ($media_name -match '(?&lt;tag&gt;.+)_.*') {\n$tag = $matches['tag'];\n}\nRun-Json @{\naction = 'addTags';\nversion = 6;\nparams = @{\nnotes = @($curr_note_id);\ntags = $tag;\n}\n};\n</code></pre>"},{"location":"jpresources/#screenshot-only-hotkey","title":"Screenshot (only) Hotkey","text":"<p>This is the same as the above, but without setting the <code>AdditionalNotes</code> field to the current clipboard.</p> ShareX Script (click here) <pre><code>-NoProfile -Command \"function Run-Json { param( $json_map ); $json = $json_map | ConvertTo-Json -Depth 5; $data = Invoke-RestMethod -Uri http://127.0.0.1:8765 -Method Post -ContentType 'application/json; charset=UTF-8' -Body $json; return $data; }; $media_name = '$input' | Split-Path -leaf; $added_notes = Run-Json @{ action = 'findNotes'; version = 6; params = @{ query = 'added:1'; } }; $sorted_list = $added_notes.result | Sort-Object -Descending {[Long]$_}; $curr_note_id = $sorted_list[0]; Run-Json @{ action = 'updateNoteFields'; version = 6; params = @{ note = @{ id = $curr_note_id; fields = @{ Picture = \\\"&lt;img data-editor-shrink=`\\\"true`\\\" src=`\\\"$media_name`\\\"&gt;\\\"; } } } }; if ($media_name -match '(?&lt;tag&gt;.+)_.*') { $tag = $matches['tag'] } Run-Json @{ action = 'addTags'; version = 6; params = @{ notes = @($curr_note_id); tags = $tag; } };\"\n</code></pre> Original ShareX Code (click here) <pre><code># (common begin)\nfunction Run-Json {\nparam( $json_map );\n$json = $json_map | ConvertTo-Json -Depth 5;\n$data = Invoke-RestMethod -Uri http://127.0.0.1:8765 -Method Post -ContentType `\n'application/json; charset=UTF-8' -Body $json;\nreturn $data;\n};\n# (common end)\n# gets only the file name\n$media_name = '$input' | Split-Path -leaf;\n$added_notes = Run-Json @{\naction = 'findNotes';\nversion = 6;\nparams = @{\nquery = 'added:1';\n}\n};\n$sorted_list = $added_notes.result | Sort-Object -Descending {[Long]$_};\n$curr_note_id = $sorted_list[0];\nRun-Json @{\naction = 'updateNoteFields';\nversion = 6;\nparams = @{\nnote = @{\nid = $curr_note_id;\nfields = @{\nPicture = \"&lt;img data-editor-shrink=`\"true`\" src=`\"$media_name`\"&gt;\";\n}\n}\n}\n};\nif ($media_name -match '(?&lt;tag&gt;.+)_.*') {\n$tag = $matches['tag']\n}\nRun-Json @{\naction = 'addTags';\nversion = 6;\nparams = @{\nnotes = @($curr_note_id);\ntags = $tag;\n}\n};\n</code></pre>"},{"location":"jpresources/#audio-hotkey","title":"Audio Hotkey","text":"<p>This script works exactly the same as stegatxins0's version, except rewritten in a more readable format. If you already have the audio hotkey setup, there is no reason to change the old script.</p> <p>To use this, follow the steps for setting up the audio hotkey, and use this script in place of step 14's <code>Argument</code>.</p> ShareX Script (click here) <pre><code>-NoProfile -Command \"function Run-Json { param( $json_map ); $json = $json_map | ConvertTo-Json -Depth 5; $data = Invoke-RestMethod -Uri http://127.0.0.1:8765 -Method Post -ContentType 'application/json; charset=UTF-8' -Body $json; return $data; }; $media_name = '$input' | Split-Path -leaf; $added_notes = Run-Json @{ action = 'findNotes'; version = 6; params = @{ query = 'added:1'; } }; $sorted_list = $added_notes.result | Sort-Object -Descending {[Long]$_}; $curr_note_id = $sorted_list[0]; Run-Json @{ action = 'updateNoteFields'; version = 6; params = @{ note = @{ id = $curr_note_id; fields = @{ SentenceAudio = \\\"[sound:$media_name]\\\"; } } } };\"\n</code></pre> Original ShareX Code (click here) <pre><code># (common begin)\nfunction Run-Json {\nparam( $json_map );\n$json = $json_map | ConvertTo-Json -Depth 5;\n$data = Invoke-RestMethod -Uri http://127.0.0.1:8765 -Method Post -ContentType `\n'application/json; charset=UTF-8' -Body $json;\nreturn $data;\n};\n# (common end)\n# gets only the file name\n$media_name = '$input' | Split-Path -leaf;\n$added_notes = Run-Json @{\naction = 'findNotes';\nversion = 6;\nparams = @{\nquery = 'added:1';\n}\n};\n$sorted_list = $added_notes.result | Sort-Object -Descending {[Long]$_};\n$curr_note_id = $sorted_list[0];\nRun-Json @{\naction = 'updateNoteFields';\nversion = 6;\nparams = @{\nnote = @{\nid = $curr_note_id;\nfields = @{\nSentenceAudio = \"[sound:$media_name]\";\n}\n}\n}\n};\n</code></pre>"},{"location":"jpresources/#anki-scripts","title":"Anki Scripts","text":"<p>These are a set of scripts that may help you to prevent doing repetitive actions when adding notes.</p> <p>Unlike the above, these scripts are not meant to be used with audio or picture files. Rather, they are stand-alone scripts that modify the most recent cards added.</p> <p>These scripts are written in two formats: one that works automatically with your usual <code>ShareX</code> setup, and one in Python for cross-platform portability.</p> <p>Warning</p> <p>Do NOT view the card in the card browser when running any script, because if you do, the affected fields may not update. Close the card browser before running the scripts.</p> <p>However, you do not need to worry about this if you are running the python script with the <code>--enable-gui-browse</code> flag.</p>"},{"location":"jpresources/#how-to-running-with-sharex","title":"How-To: Running with ShareX","text":"<p>As shown above, ShareX has the ability to run custom user scripts. However, for ShareX to only run the script and do nothing else, the hotkey must be configured with steps shown below.</p> <p>Warning</p> <p>Depending on the popularity of these scripts, the ShareX versions may be deprecated in the future in favor of the easier to use/write/maintain Python versions. The only downside of using the Python script is that the user must have Python installed.</p>"},{"location":"jpresources/#steps","title":"Steps","text":"<p>(TODO video)</p> <ol> <li>Under the main window, go to <code>Hotkey Settings</code>, and add a new hotkey.</li> <li>Click on the settings icon (of the newly added hotkey).</li> <li>In the <code>Task</code> tab (to the left):<ul> <li>Set: <code>Task</code> to <code>Screen capture</code> \u2192  <code>Capture active window</code></li> <li>Check <code>Override After Capture Tasks</code> ()</li> <li>Under <code>After Capture</code>, un-check everything, and check the following:<ul> <li><code>Save Image to File</code></li> <li><code>Perform Actions</code></li> <li><code>Delete Locally</code></li> </ul> </li> </ul> </li> <li>In the <code>Actions</code> tab (to the left):<ul> <li>Check <code>Override Actions</code> ()</li> <li>Uncheck all existing actions.</li> <li>Add a new action by clicking on <code>Add</code>.</li> <li>Set the following values of the action:<ul> <li>File Path: <code>C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe</code></li> <li>Argument: (the text in <code>Sharex Script</code> for the script you want to run)</li> </ul> </li> </ul> </li> </ol> <p>Note</p> <p>If you are adding multiple scripts with ShareX, instead of re-doing all of the steps above, you can instead duplicate the keybind, and simply set the <code>Argument</code> of the action to a different script.</p> Explanation <p>The reason that the <code>After Capture</code> settings include <code>Save Image to File</code> and <code>Delete Locally</code> is because without those settings, the <code>Perform Actions</code> section doesn't appear to run. Fortunately, the combination of <code>Save Image to File</code> and <code>Delete Locally</code> means the hotkey does the following:</p> <ul> <li>Saves the image file</li> <li>Runs the custom script</li> <li>Deletes the image file</li> </ul> <p>In other words, the image file is only temporarily created, and then deleted immediately after running the script. This effectively means that ShareX is only running the script whenever the keybind is used.</p>"},{"location":"jpresources/#how-to-running-with-python","title":"How-To: Running with Python","text":"<p>Warning</p> <p>If you use the Python script as is within the repository without copying it to a different directory, this script will be updated every time you update the repository.</p> <p>It's always good practice to not blindly run people's code on your computer. Make sure you trust the code, and double check after update!</p> <p>If you don't want to use ShareX, or you are not using Windows, you can simply run a python script with command line.</p> <pre><code># Your python version should be 3.8 or higher.\n# It may work for lower python versions, but I make no guarantee.\npython3 /path/to/jp-mining-note/tools/hotkey.py -f FUNCTION_NAME\n</code></pre> Examples (click here) <pre><code># default\npython3 /path/to/jp-mining-note/tools/hotkey.py -f update_sentence\n\n# opens card browser automatically\npython3 /path/to/jp-mining-note/tools/hotkey.py -f update_sentence --enable-gui-browse\n</code></pre> <p>If you want to use these as keybinds, I will leave it up to you to determine how to do that (as there are too many different setups and programs that people can use to create keybinds). However, some tips for ShareX and AutoKey are given below.</p> Instructions for running Python scripts in ShareX <p>If you want, you can even use the Python scripts with ShareX, so long as you have Python installed. To use Python with ShareX, follow all the steps (shown above), until you set the action values.</p> <ul> <li>The command should be the <code>DRIVE:\\PATH\\TO\\python.exe</code> (instead of the path to <code>powershell.exe</code>).</li> <li>The argument should be <code>DRIVE:\\PATH\\TO\\jp-mining-note\\tools\\hotkey.py -f FUNCTION_NAME</code>     (instead of the large one-liner.)</li> </ul> Instructions for AutoKey (Not AutoHotKey) <p>If you are using AutoKey for Linux, it should be possible to do the following instead:</p> <ol> <li> <p>Go to:  <code>Settings</code>      \u2192  <code>Configure AutoKey</code>      \u2192  <code>Script Engine</code>      \u2192  <code>User Module file</code>      \u2192  (add the <code>jp-mining-note/tools</code> directory)</p> </li> <li> <p>Create a <code>script</code> type hotkey,</p> </li> <li> <p>Within the script, run any function thusly:     </p><pre><code>import hotkey\nhotkey.FUNCTION_NAME()\n</code></pre> <p>Example: </p><pre><code>import hotkey\nhotkey.update_sentence()\n</code></pre> <p>Example with GUI: </p><pre><code>import hotkey\nhotkey._browse_anki(\"nid:1\")\nnote_id = hotkey.update_sentence()\nhotkey._browse_anki(f\"nid:{note_id}\")\n</code></pre> </li> </ol>"},{"location":"jpresources/#update-sentence-with-clipboard","title":"Update Sentence with Clipboard","text":"<p>Function Name: <code>update_sentence</code></p> <p>This script updates the sentence with the current clipboard (while preserving the bolded word), and removes the <code>SentenceReading</code> field (of the newest note added).</p> <p>This script is useful when Yomichan's parsed sentence does not match the recorded audio. This is also useful for when Yomichan's word parser doesn't match the word itself (steps shown below).</p> <p>Note</p> <p>After running this script, you must manually generate the <code>SentenceReading</code> field if you want the furigana reading. Of course, this can be done in bulk at any point, as shown here.</p> How-To: Fix incorrectly-bolded words (click here) <p>As an example, The target word \u5e0c\u671b in the sentence \u300c\u5165\u90e8\u5e0c\u671b\u306a\u3093\u3067\u3059\u3051\u3069\u2026\u300d will be parsed by Yomichan as the following: </p><pre><code>\u5165\u90e8&lt;b&gt;\u5e0c\u671b\u306a&lt;/b&gt;\u3093\u3067\u3059\u3051\u3069\u2026\n</code></pre> <p>Within the original popup, you can add two versions of the word by default:</p> <ol> <li>The one with JMdict only.     Adding this word will add the sentence with incorrect bolding.</li> <li>The one with everything else other than JMdict.     Adding this word will have the correct bold, but will be missing some definitions.</li> </ol> <p>To add the above sentence that solves both problems (no weird bold, and contains all definitions), do NOT add the word within the sentence. Instead, do the following:</p> <ol> <li> <p>Highlight over the header word itself (or the word in the orthographic forms dictionary),     and add that word instead.</p> Demo (click here) <p></p> </li> <li> <p>Copy the desired sentence.</p> </li> <li> <p>Run this script.</p> </li> </ol> <p>Note</p> <p>It is assumed that you have multiple popups enabled.</p> How the bolded word is preserved (click here) <p>The bolded word is preserved if the exact content within the bolded word is found within the clipboard, which should be almost always the case.</p> <p>For example, assume the added sentence is the following: </p><pre><code>\u3055\u3066\u306f&lt;b&gt;\u507d\u8005&lt;/b&gt;\u3060\u306a\uff01\n</code></pre> <p>As long as the clipboard contains the word \u300c\u507d\u8005\u300d, then the bold is preserved. For example, the following clipboard contents will preserve the bold: </p><pre><code>\u304b\u308f\u3044\u3052\u306e\u3042\u308b\u5973\u3058\u3083\u306a\u3044\u3002\u3055\u3066\u306f\u507d\u8005\u3060\u306a\uff01\n</code></pre> ShareX Script (click here) <pre><code>-NoProfile -Command \"function Run-Json { param( $json_map ); $json = $json_map | ConvertTo-Json -Depth 5; $data = Invoke-RestMethod -Uri http://127.0.0.1:8765 -Method Post -ContentType 'application/json; charset=UTF-8' -Body $json; return $data; }; $clipboard = (Get-Clipboard | where{$_ -ne ''}) -join ''; $added_notes = Run-Json @{ action = 'findNotes'; version = 6; params = @{ query = 'added:1'; } }; $sorted_list = $added_notes.result | Sort-Object -Descending {[Long]$_}; $curr_note_id = $sorted_list[0]; $curr_note_data = Run-Json @{ action = 'notesInfo'; version = 6; params = @{ notes = @($curr_note_id); } }; $curr_note_sent = $curr_note_data.result.fields.Sentence.value; $result_sent = ''; if ($curr_note_sent -match '&lt;b&gt;(?&lt;bolded&gt;.+)&lt;/b&gt;') { $bolded = $matches['bolded']; $result_sent = $clipboard.replace($bolded, \\\"&lt;b&gt;$bolded&lt;/b&gt;\\\"); } else { $result_sent = $clipboard; }; Run-Json @{ action = 'updateNoteFields'; version = 6; params = @{ note = @{ id = $curr_note_id; fields = @{ Sentence = $result_sent; SentenceReading = ''; } } } };\"\n</code></pre> Original ShareX Code (click here) <pre><code># (common begin)\nfunction Run-Json {\nparam( $json_map );\n$json = $json_map | ConvertTo-Json -Depth 5;\n$data = Invoke-RestMethod -Uri http://127.0.0.1:8765 -Method Post -ContentType `\n'application/json; charset=UTF-8' -Body $json;\nreturn $data;\n};\n# (common end)\n$clipboard = (Get-Clipboard | where{$_ -ne ''}) -join '';\n$added_notes = Run-Json @{\naction = 'findNotes';\nversion = 6;\nparams = @{\nquery = 'added:1';\n}\n};\n$sorted_list = $added_notes.result | Sort-Object -Descending {[Long]$_};\n$curr_note_id = $sorted_list[0];\n$curr_note_data = Run-Json @{\naction = 'notesInfo';\nversion = 6;\nparams = @{\nnotes = @($curr_note_id);\n}\n};\n$curr_note_sent = $curr_note_data.result.fields.Sentence.value;\n$result_sent = '';\nif ($curr_note_sent -match '&lt;b&gt;(?&lt;bolded&gt;.+)&lt;/b&gt;') {\n$bolded = $matches['bolded'];\n# may not replace anything\n$result_sent = $clipboard.replace($bolded, \"&lt;b&gt;$bolded&lt;/b&gt;\");\n} else {\n# default\n$result_sent = $clipboard;\n};\n# updates current card with result_sent\nRun-Json @{\naction = 'updateNoteFields';\nversion = 6;\nparams = @{\nnote = @{\nid = $curr_note_id;\nfields = @{\nSentence = $result_sent;\nSentenceReading = '';\n}\n}\n}\n};\n</code></pre>"},{"location":"jpresources/#update-additionalnotes-with-clipboard","title":"Update AdditionalNotes with Clipboard","text":"<p>Function Name: <code>update_additional_notes</code></p> <p>This script does the exact same thing as the above script, but with <code>AdditionalNotes</code> instead of <code>Sentence</code>. The tested word, if found, is also automatically highlighted.</p> <p>This is useful to copy/paste context for the sentence (the surrounding lines around the sentence).</p> ShareX Script (click here) <pre><code>-NoProfile -Command \"function Run-Json { param( $json_map ); $json = $json_map | ConvertTo-Json -Depth 5; $data = Invoke-RestMethod -Uri http://127.0.0.1:8765 -Method Post -ContentType 'application/json; charset=UTF-8' -Body $json; return $data; }; $clipboard = (Get-Clipboard | where{$_ -ne \\\"\\\"}) -join \\\"&lt;br&gt;\\\"; $added_notes = Run-Json @{ action = 'findNotes'; version = 6; params = @{ query = 'added:1'; } }; $sorted_list = $added_notes.result | Sort-Object -Descending {[Long]$_}; $curr_note_id = $sorted_list[0]; $curr_note_data = Run-Json @{ action = 'notesInfo'; version = 6; params = @{ notes = @($curr_note_id); } }; $curr_note_sent = $curr_note_data.result.fields.Sentence.value; $result_sent = ''; if ($curr_note_sent -match '&lt;b&gt;(?&lt;bolded&gt;.+)&lt;/b&gt;') { $bolded = $matches['bolded']; $result_sent = $clipboard.replace($bolded, \\\"&lt;b&gt;$bolded&lt;/b&gt;\\\"); } else { $result_sent = $clipboard; }; Run-Json @{ action = 'updateNoteFields'; version = 6; params = @{ note = @{ id = $curr_note_id; fields = @{ AdditionalNotes = $result_sent; } } } };\"\n</code></pre> Original ShareX Code (click here) <pre><code># (common begin)\nfunction Run-Json {\nparam( $json_map );\n$json = $json_map | ConvertTo-Json -Depth 5;\n$data = Invoke-RestMethod -Uri http://127.0.0.1:8765 -Method Post -ContentType `\n'application/json; charset=UTF-8' -Body $json;\nreturn $data;\n};\n# (common end)\n$clipboard = (Get-Clipboard | where{$_ -ne \"\"}) -join \"&lt;br&gt;\";\n$added_notes = Run-Json @{\naction = 'findNotes';\nversion = 6;\nparams = @{\nquery = 'added:1';\n}\n};\n$sorted_list = $added_notes.result | Sort-Object -Descending {[Long]$_};\n$curr_note_id = $sorted_list[0];\n$curr_note_data = Run-Json @{\naction = 'notesInfo';\nversion = 6;\nparams = @{\nnotes = @($curr_note_id);\n}\n};\n$curr_note_sent = $curr_note_data.result.fields.Sentence.value;\n$result_sent = '';\nif ($curr_note_sent -match '&lt;b&gt;(?&lt;bolded&gt;.+)&lt;/b&gt;') {\n$bolded = $matches['bolded'];\n# may not replace anything\n$result_sent = $clipboard.replace($bolded, \"&lt;b&gt;$bolded&lt;/b&gt;\");\n} else {\n# default\n$result_sent = $clipboard;\n};\n# updates current card with result_sent\nRun-Json @{\naction = 'updateNoteFields';\nversion = 6;\nparams = @{\nnote = @{\nid = $curr_note_id;\nfields = @{\nAdditionalNotes = $result_sent;\n}\n}\n}\n};\n</code></pre>"},{"location":"jpresources/#copy-from-previous-card","title":"Copy from Previous Card","text":"<p>Function Name: <code>copy_from_previous</code></p> <p>This script does the following:</p> <ul> <li>Set the <code>AdditionalNotes</code> and <code>Picture</code> field of the newest card to the previous (second-newest) card's fields.</li> <li>Copies all the tags of the previous card.</li> </ul> <p>This is useful for when you are adding more than one sentence with the same text box of a visual novel, as it prevents you from having to run the screenshot hotkey.</p>"},{"location":"jpresources/#how-to-use","title":"How to use","text":"<ol> <li>Create a card from the first unknown word in the text box.</li> <li>Create a card from the second unknown word in the text box.</li> <li>Run this script.</li> </ol> ShareX Script (click here) <pre><code>-NoProfile -Command \"function Run-Json { param( $json_map ); $json = $json_map | ConvertTo-Json -Depth 5; $data = Invoke-RestMethod -Uri http://127.0.0.1:8765 -Method Post -ContentType 'application/json; charset=UTF-8' -Body $json; return $data; }; $added_notes = Run-Json @{ action = 'findNotes'; version = 6; params = @{ query = 'added:1'; } }; $sorted_list = $added_notes.result | Sort-Object -Descending {[Long]$_}; $prev_note_id = $sorted_list[1]; $curr_note_id = $sorted_list[0]; $prev_note_data = Run-Json @{ action = 'notesInfo'; version = 6; params = @{ notes = @($prev_note_id); } }; Run-Json @{ action = 'updateNoteFields'; version = 6; params = @{ note = @{ id = $curr_note_id; fields = @{ Picture = $prev_note_data.result.fields.Picture.value; AdditionalNotes = $prev_note_data.result.fields.AdditionalNotes.value; } } } }; foreach ($tag in $prev_note_data.result.tags) { Run-Json @{ action = 'addTags'; version = 6; params = @{ notes = @($curr_note_id); tags = $tag; } } };\"\n</code></pre> Original ShareX Code (click here) <pre><code># (common begin)\nfunction Run-Json {\nparam( $json_map );\n$json = $json_map | ConvertTo-Json -Depth 5;\n$data = Invoke-RestMethod -Uri http://127.0.0.1:8765 -Method Post -ContentType `\n'application/json; charset=UTF-8' -Body $json;\nreturn $data;\n};\n# (common end)\n$added_notes = Run-Json @{\naction = 'findNotes';\nversion = 6;\nparams = @{\nquery = 'added:1';\n}\n};\n$sorted_list = $added_notes.result | Sort-Object -Descending {[Long]$_};\n$prev_note_id = $sorted_list[1];\n$curr_note_id = $sorted_list[0];\n$prev_note_data = Run-Json @{\naction = 'notesInfo';\nversion = 6;\nparams = @{\nnotes = @($prev_note_id);\n}\n};\n# copies picture &amp; additional notes to current note\nRun-Json @{\naction = 'updateNoteFields';\nversion = 6;\nparams = @{\nnote = @{\nid = $curr_note_id;\nfields = @{\nPicture = $prev_note_data.result.fields.Picture.value;\nAdditionalNotes = $prev_note_data.result.fields.AdditionalNotes.value;\n}\n}\n}\n};\n# copies tags\nforeach ($tag in $prev_note_data.result.tags) {\nRun-Json @{\naction = 'addTags';\nversion = 6;\nparams = @{\nnotes = @($curr_note_id);\ntags = $tag;\n}\n}\n};\n</code></pre>"},{"location":"jpresources/#orthographic-variants-fix-sentence-and-frequency","title":"Orthographic Variants: Fix Sentence and Frequency","text":"<p>Function Name: <code>fix_sent_and_freq</code></p> <p>This script does the following:</p> <ul> <li>Sets the previous note's fields to the newest note's fields:<ul> <li><code>FrequencyStylized</code></li> <li><code>Sentence</code></li> <li><code>SentenceReading</code></li> </ul> </li> <li>Deletes the newest note</li> </ul> <p>This is useful for when you want to add the the word within the Orthographic Variants dictionary. The Orthographics Variants dictionary is extremely useful for monolingual definitions, where dictionaries only contain entries for more kanjified words.</p> <p>In practice, I've personally found numerous examples of this in everyday media, so this has helped me immensely.</p> Examples (to test the dictionary on) <p>\u300c\u30b9\u30da\u30eb\u30c9\u65cf\u3078\u306e\u6050\u6016\u306f\u6050\u3089\u304f\u3053\u306e\u4e16\u754c\u306b\u6839\u3065\u3044\u3066\u3044\u308b\u3093\u3060\u308d\u3046\u300d</p> <p>\u300c\u30eb\u30fc\u306f\u305f\u304f\u3055\u3093\u3042\u308b\u306e\u3067\u3001\u4eca\u304a\u4ee3\u308f\u308a\u3092\u304a\u6301\u3061\u3057\u307e\u3059\u306d\u300d</p> <p>\u300c\u305f\u3060\u3001\u4e00\u3064\u3060\u3051\u91d8\u3092\u3055\u3055\u305b\u3066\u3082\u3089\u3046\u3051\u3069\u2026\u8cb4\u65b9\u304c\u3053\u308c\u304b\u3089\u4f55\u3092\u3059\u308b\u306b\u3057\u3066\u3082\u3001\u4ed5\u4e8b\u306f\u4eca\u307e\u3067\u901a\u308a\u3053\u306a\u3057\u3066\u3082\u3089\u3046\u308f\u3088\uff1f\u300d</p> <p>It is assumed that you have multiple popups enabled for monolingual definitions, so you can easily look up the word in the Orthographic Forms dictionary.</p>"},{"location":"jpresources/#how-to-use_1","title":"How to use","text":"<ol> <li>Create a card from the word in the Orthographic Variants dictionary.</li> <li>Create a card from the word in original sentence.</li> <li>Run this script.</li> </ol> ShareX Script (click here) <pre><code>-NoProfile -Command \"function Run-Json { param( $json_map ); $json = $json_map | ConvertTo-Json -Depth 5; $data = Invoke-RestMethod -Uri http://127.0.0.1:8765 -Method Post -ContentType 'application/json; charset=UTF-8' -Body $json; return $data; }; $added_notes = Run-Json @{ action = 'findNotes'; version = 6; params = @{ query = 'added:1'; } }; $sorted_list = $added_notes.result | Sort-Object -Descending {[Long]$_}; $prev_note_id = $sorted_list[1]; $curr_note_id = $sorted_list[0]; $curr_note_data = Run-Json @{ action = 'notesInfo'; version = 6; params = @{ notes = @($curr_note_id); } }; Run-Json @{ action = 'updateNoteFields'; version = 6; params = @{ note = @{ id = $prev_note_id; fields = @{ FrequenciesStylized = $curr_note_data.result.fields.FrequenciesStylized.value; Sentence = $curr_note_data.result.fields.Sentence.value; SentenceReading = $curr_note_data.result.fields.SentenceReading.value; } } } }; Run-Json @{ action = 'deleteNotes'; version = 6; params = @{ notes = @($curr_note_id); } };\"\n</code></pre> Original ShareX Code (click here) <pre><code># (common begin)\nfunction Run-Json {\nparam( $json_map );\n$json = $json_map | ConvertTo-Json -Depth 5;\n$data = Invoke-RestMethod -Uri http://127.0.0.1:8765 -Method Post -ContentType `\n'application/json; charset=UTF-8' -Body $json;\nreturn $data;\n};\n# (common end)\n$added_notes = Run-Json @{\naction = 'findNotes';\nversion = 6;\nparams = @{\nquery = 'added:1';\n}\n};\n$sorted_list = $added_notes.result | Sort-Object -Descending {[Long]$_};\n$prev_note_id = $sorted_list[1];\n$curr_note_id = $sorted_list[0];\n$curr_note_data = Run-Json @{\naction = 'notesInfo';\nversion = 6;\nparams = @{\nnotes = @($curr_note_id);\n}\n};\n# copies frequency, sentence, sentence reading to previous note\nRun-Json @{\naction = 'updateNoteFields';\nversion = 6;\nparams = @{\nnote = @{\nid = $prev_note_id;\nfields = @{\nFrequenciesStylized = $curr_note_data.result.fields.FrequenciesStylized.value;\nSentence = $curr_note_data.result.fields.Sentence.value;\nSentenceReading = $curr_note_data.result.fields.SentenceReading.value;\n}\n}\n}\n};\n# removes current note\nRun-Json @{\naction = 'deleteNotes';\nversion = 6;\nparams = @{\nnotes = @($curr_note_id);\n}\n};\n</code></pre>"},{"location":"jpresources/#settings-css-for-renjis-texthooker","title":"Settings / CSS for Renji's texthooker","text":"<p>I use the following stylizations to remove unnecessary padding within the document, and to behave more similarly to Anacreon's texthooker.</p> <p>Settings:</p> Setting Value Preserve Whitespace Remove Whitespace <p>Custom CSS: </p><pre><code>main &gt; p {\npadding: 0rem !important;\n}\nmain {\npadding-left: min(5%, 5rem) !important;\npadding-right: min(5%, 5rem) !important;\n}\nbody &gt; div &gt; textarea {\nfont-size: 24px !important;\n}\n</code></pre> Using a custom font (click here) <p>I set the font to be Noto Sans, but this will likely not work without downloading and installing the font first (e.g. from here). Below is the actual full CSS that I use in conjuction with the installed font:</p> <pre><code>main &gt; p {\npadding: 0rem !important;\n}\nmain {\npadding-left: min(5%, 5rem) !important;\npadding-right: min(5%, 5rem) !important;\nfont-family: \"Noto Sans CJK JP\" !important; /* &lt;-- new! */\n}\nbody &gt; div &gt; textarea {\nfont-size: 24px !important;\n}\n</code></pre>"},{"location":"jpresources/#send-text-from-anki-to-your-texthooker","title":"Send text from Anki to your texthooker","text":"<p>This is a very quick hack to have text from Anki to appear on a websocket based texthooker. This will be supported by default in jp-mining-note version <code>0.12.0.0</code>.</p> <p>Requires Python, written for Renji's texthooker.</p> Instructions (click here) <ol> <li> <p>Save as <code>server.py</code>:     </p><pre><code>import asyncio\nimport websockets\nCONNECTIONS = set()\nasync def register(websocket):\nCONNECTIONS.add(websocket)\ntry:\nasync for message in websocket:\nprint(f\"server will now echo '{message}' to all other connections\")\nconnections = [c for c in CONNECTIONS if c != websocket]\nwebsockets.broadcast(connections, message)\nawait websocket.wait_closed()\nfinally:\nCONNECTIONS.remove(websocket)\nasync def main():\nasync with websockets.serve(register, \"localhost\", 6678):\nawait asyncio.Future()  # run forever\nif __name__ == \"__main__\":\nasyncio.run(main())\n</code></pre> </li> <li> <p>Paste this on the back side of your Anki template:     </p><pre><code>&lt;script&gt;\n(() =&gt; {\nfunction sendText(id) {\nconst sentEle = document.getElementById(id);\nif (sentEle !== null) {\nconst sentence = sentEle.innerText.trim();\nif (sentence.length &gt; 0) {\nsocket.send(sentence);\n}\n}\n}\nconst url = \"ws://localhost:6678\";\nconst socket = new WebSocket(url);\nsocket.onopen = (_e) =&gt; {\nsendText(\"full_sentence\");\nsendText(\"primary_definition_raw_text\");\n};\n})();\n&lt;/script&gt;\n</code></pre> </li> <li> <p>Replace <code>full_sentence</code> and <code>primary_definition_raw_text</code> with whatever id.</p> </li> <li>Install <code>websockets</code> with pip, i.e. <code>pip3 install websockets</code></li> <li>Change the web port on the texthooker page to <code>6678</code>.</li> </ol> <p>Whenever you want to connect Anki to the texthooker page:</p> <ol> <li>Run <code>server.py</code>, i.e. <code>python3 server.py</code></li> <li>Ensure the web port is the same on the texthooker page, i.e. <code>6678</code></li> <li>Enable the websocket connection on the texthooker page.</li> </ol>"},{"location":"jpresources/#other-random-resources","title":"Other Random Resources","text":"<p>Note</p> <p>Most things here have been moved to the Setup: Everything Else page</p>"},{"location":"jpresources/#mikagu-pitch-accent-alternatives","title":"Mikagu pitch accent alternatives","text":"<ul> <li>migaku updated<ul> <li>Fork of migaku to be updated for anki version 2.1.50+</li> </ul> </li> <li>anki-jrp<ul> <li>Completely stand-alone plugin from migaku with a completely different codebase</li> <li>Only does one thing: adds pitch accent colors (along with furigana)</li> </ul> </li> </ul>"},{"location":"modding/","title":"Modding Overview","text":""},{"location":"modding/#modding-the-obvious-way","title":"Modding (The Obvious Way)","text":"<p>Throughout the documentation and within the templates alone, you will likely see warning messages to not edit the templates directly unless you are willing to lose your changes when you update the note.</p> <p>The most obvious way to mod the note is directly in the pre-built template downloaded. If you are completely fine with losing your changes upon each update, and don't want to take advantages of certain tools that comes with this note (such as compile-time options), then you can simply edit the template and ignore the rest of this page.</p>"},{"location":"modding/#modding-the-recommended-way","title":"Modding (The Recommended Way)","text":"<p>To ensure that your changes aren't lost, the recommended way to make changes to the existing templates is to add new files, rather than editing existing ones. This allows you to continuously update with the note, while having your custom files stay in place.</p> <p>Warning</p> <p>There is no guaranteed backwards compatability for anything mentioned here (especially while the note is still in beta). Although you won't lose your changes upon update, your changes might also not work on the next update. For example, if the file that you are overriding gets renamed, you will have to rename the file to match the newly renamed file.</p> <p>I will try my best to keep things backwards compatable, but given the current state of the note (particularily the CSS), it might not be possible to do most of the time. When this note comes out of beta, backward-incompatable changes should be harshly reduced.</p>"},{"location":"modding/#prerequisites","title":"Prerequisites","text":"<p>You must be able to successfully build the template in order to start modding the note.</p> <p>Click here to see how to build the template!</p>"},{"location":"moddingtips/","title":"Tips & Tricks","text":""},{"location":"moddingtips/#custom-runtime-options","title":"Custom Runtime Options","text":"<p>The runtime options file (default: <code>config/jpmn_opts.jsonc</code>) can be specified at build time.</p> <p>If you are working with modding the note, it is recommended that you create your own runtime options file, so you can edit the options at build time, while ensuring your runtime options file is up to date.</p> <p>Here is how you can create and use a custom runtime options file:</p> <ol> <li> <p>Create the local runtime options file (e.g. <code>user_jpmn_opts.jsonc</code>)</p> <pre><code>cd config\ncp jpmn_opts.jsonc user_jpmn_opts.jsonc\n</code></pre> </li> <li> <p>Change <code>opts-path</code> under <code>config/config.py</code>:</p> <pre><code>\"opts-path\": \"user_jpmn_opts.jsonc\",\n</code></pre> </li> <li> <p>(optional) Make the runtime options hard-coded to remove the file dependency     during runtime, by changing the following setting in <code>config/config.py</code>:     </p><pre><code>\"compile-options\": {\n    \"hardcoded-runtime-options\": True,\n}\n</code></pre> </li> <li> <p>Build and install the note as normal.</p> <p>Note</p> <p>If you are not using hard-coded runtime options and you have edited the contents of the local runtime options file, please run the installation script with <code>--install-options</code> to replace the existing options file in Anki's media folder.</p> </li> </ol>"},{"location":"moddingtips/#field-list-editing","title":"Field List Editing","text":"<p>This section describes import PSAs on what you should you if you want to edit the fields of the note (i.e. adding, removing, renaming, and moving).</p> <p>Fields editing in this context refers to the fields that you can edit in the <code>Fields</code> (list) menu, found under (Main window) \u2192  <code>Browse</code> \u2192  <code>Fields...</code>.</p> <p></p> <p>Note</p> <p>If you never plan on updating the note, you can safely modify the field list to your heart's content, and ignore the rest of this section.</p>"},{"location":"moddingtips/#installer-details","title":"Installer details","text":"<p>The installer, when detecting a higher version, attempts to find and apply any changes to the field list when necessary. These changes are specified under <code>tools/note_changes.py</code>.</p> <p>By default, the installer expects the field list to be completely un-changed after installation, and does many checks to verify this before and after installation.</p>"},{"location":"moddingtips/#do-not-remove-fields","title":"Do not remove fields","text":"<p>One of the checks that the installer does is to ensure that all fields are present. This is a design choice to remove as many assumptions as possible, so that it is easier for the installer to update the note.</p> <p>Note</p> <p>This design choice may be changed in the future, but will likely remain until the end of the beta release.</p> <p>If you want to remove a field, the best alternative is to do the following:</p> <ol> <li>Move the field below the <code>Comment</code> field, so the field is out of your way.</li> <li>Whenever you decide to update the note to a new version,     run the installation script with the <code>--ignore-order</code> flag.</li> </ol>"},{"location":"moddingtips/#do-not-rename-fields","title":"Do not rename fields","text":"<p>There is currently no way to let the installer know that you renamed a field. Therefore, you should not rename fields at all, as this will cause the initial field list check to fail.</p> <p>If you are completely insistent on renaming a field, you must change all templates that uses the field to match your preferred field name.</p> <p>Note</p> <p>Similarily to the above, this may be changed in the future, but will likely remain until the end of the beta release.</p>"},{"location":"moddingtips/#how-to-add-reorder-fields","title":"How to add &amp; reorder fields","text":"<p>If you want to add a field while preserving the existing field order upon updates, add the field under the <code>Comment</code> field. This is because the installer only checks the subset of fields above the <code>Comment</code> field, when verifying correctness.</p> <p>If you don't care about preserving field order, you can simply add the field anywhere you want, and then run the installation script with <code>--ignore-order</code> whenever you want to update the note to a new version.</p>"},{"location":"moddingtips/#javascript-print-statements","title":"Javascript print statements","text":"<p>Anki doesn't come with a way to use <code>console.log()</code> normally, so I made one myself.</p> <pre><code>// global logger\nLOGGER.error(\"message\");\nLOGGER.warn(\"message\");\nLOGGER.info(\"message\");\nLOGGER.debug(\"message\");\n// module-specific logger\nconst logger = JPMNLogger(\"module-name\");\nlogger.error(\"message\");\nlogger.warn(\"message\");\nlogger.info(\"message\");\nlogger.debug(\"message\");\n</code></pre> <p>The above functions prints a message of the given log level to the info circle. To see the message, hover over the info circle.</p> <p>To use the <code>debug</code> function, make sure that the <code>debug</code> option is set to <code>true</code> in the javascript options.</p>"},{"location":"moddingtips/#avoid-asynchronous-javascript-features-in-anki","title":"Avoid asynchronous javascript features in Anki","text":"Example Asynchronous Javascript <pre><code>&lt;script&gt;\n// Example 1: normal asynchronous functions\nasync function runMeAsynchronously() {\n// ...\n}\n// Example 2: promises\nfunction giveMeAPromise() {\nreturn new Promise((resolve, reject) =&gt; {\nsetTimeout(() =&gt; {\nresolve(\"Success!\");\n}, 1000);\n});\n}\ngiveMeAPromise().then(() =&gt; {\nLOGGER.warn(\"The promise is complete!\", unique=false);\n});\n&lt;/script&gt;\n&lt;!-- Example 3: anything wrapped in type=\"module\" --&gt;\n&lt;script type=\"module\"&gt;\n// everything here is run asynchronously\n// ...\n&lt;/script&gt;\n</code></pre> <p>TODO reason:</p> <ul> <li>functions can be executed multiple times</li> <li>reproducible way: use example 2 on both the front/back side of the card, and switch sides quickly<ul> <li>should be two warnings</li> </ul> </li> <li>but worst case is for cases which I don't know how to reproduce<ul> <li>rarely, asynchronous functions run more than once<ul> <li>it seems like anki randomly loads the page twice, causing all asynchronous functions to also run twice</li> </ul> </li> <li>including the async functions defined currently in modules like <code>kanji-hover</code></li> <li>to cirumvent having their actions done twice, define the affected elements outside the asynchronous section<ul> <li>the function still runs twice (so any side-effects of the function will still happen)</li> <li>however, other instances of the function should not work on the elements defined outside</li> </ul> </li> </ul> </li> <li> <p>additionally, many modules require things to be loaded before the card is shown</p> <ul> <li>Anki displays the page only when all of the synchronous javascript is ran</li> <li>If these become asynchronous, the user will be able to see split-second changes to the layout as the javascript is running</li> <li>Two solutions to this:<ul> <li>(1) To only show the page when specific asynchronous functions are complete, the entire page must be hidden,     with say, a <code>hidden</code> class on the <code>&lt;body&gt;</code> element</li> <li>Problem: if the main javascript fails, then you will get a blank page!<ul> <li>making this approach very risky</li> </ul> </li> <li>(2) Avoid asynchronous functions alltogether</li> </ul> </li> </ul> </li> <li> <p>avoiding asynchronous features makes things more predictable within anki</p> </li> </ul> Example (safer) asynchronous javascript <pre><code>let ele = document.getElementById(\"example\");\nasync function runMeAsynchronously() {\n// ...\nele.innerText += \"this should only appear once!\";\n}\n</code></pre>"},{"location":"modules/","title":"Custom JS (Modules)","text":"<p>Warning</p> <p>This entire section will be completely overhauled in version 0.12.0.0, meaning that this information will be completely changed when that version releases. See the <code>webpack</code> branch on Github if you want to see the work in progress.</p>"},{"location":"modules/#overview","title":"Overview","text":"<p>Modules (not to be confused with regular javascript modules) is a hybrid template/javascript system that allows code separation at the file level, but allows the javascript to be compiled into each template, rather than separate files.</p> <p>The biggest advantage of this over a monolithic system is that individual modules can be enabled, disabled, created, and modified at ease, all without editing the source files.</p>"},{"location":"modules/#example-hello-world","title":"Example (Hello World)","text":"<p>The following will enable a the hello world module, which prints a \"Hello world!\" at the front of any card (as a warning on the info circle).</p> <ol> <li> <p>Under <code>config/config.py</code>, add <code>\"example\"</code> to <code>enabled-modules</code>.</p> <pre><code>\"compile-options\": {\n    \"allow-user-defined-modules\": True,\n\n    \"enabled-modules\": [\n        ...\n        \"customize-open-fields\",  # Make sure a comma is here!\n        \"example\"\n    ]\n},\n</code></pre> </li> <li> <p>Under <code>config/jpmn_opts.jsonc</code> (or more preferably, your own options file specified     under <code>opts-path</code> in <code>config.py</code>),     add the following:</p> <pre><code>\"modules\": {\n  \"customize-open-fields\": {\n    ...\n  },  // Make sure there is a comma here!\n\n  \"example\": {\n    \"enabled\": true\n  }\n}\n</code></pre> </li> <li> <p>Rebuild the note, and preview any card.     The front side of any card should have a \"Hello world!\" warning,     while the back side should remain normal.</p> </li> </ol>"},{"location":"modules/#quickstart","title":"Quickstart","text":"<p>If you want to get to inserting your own javascript as soon as possible, do the following:</p> <ol> <li>Follow the steps of the example above, and make sure the example module is working.</li> <li> <p>Copy the <code>example</code> module into <code>overrides/modules</code>.</p> <p>This should result in the following file structure: </p><pre><code>overrides\n L modules\n    L example\n       L main.html\n       L main.js\n</code></pre> </li> </ol> <p>From here, all you have to do is edit the <code>main.js</code> and <code>main.html</code> to your liking.</p> <p>Note</p> <p>The <code>js</code> module is of type <code>JavascriptContainer</code>, which is defined under <code>tools/make.py</code>. This interface allows you to define javascript within certain parts of a card, and restrict it to a certain subset of templates (sides and card types). Please see the aformentioned file to view the existing interface. Likewise, see the base javascript file (<code>src/jp-mining-note/base.js</code>) to view how the interface is used.</p> <p>If you want more detailed explanations on what has been happening up until this point, continue reading below.</p>"},{"location":"modules/#enabling-disabling-modules","title":"Enabling &amp; Disabling Modules","text":"<p>Modules can be easily enabled and disabled by modifying the <code>enabled-modules</code> option under <code>config/config.py</code>. Comment out any existing module, or add any modules you want to the list.</p> <p>Additionally, if you are using modules outside the default modules that come enabled with the note (including the <code>example</code> module), the <code>allow-user-defined-modules</code> option should be set to <code>True</code>.</p>"},{"location":"modules/#modding-existing-modules","title":"Modding Existing Modules","text":"<p>Modules can be defined in the same style as the template overrides above. This means that if you want to edit a module, you can simply override the module files themselves by copying the module folder into <code>overrides/modules</code> folder.</p> <p>For example, if you want to override the <code>auto-pitch-accent</code> module, copy the <code>auto-pitch-accent</code> folder into <code>overrides/module/auto-pitch-accent</code>.</p> <p>Note</p> <p>In the quickstart, we did exactly this with the <code>example</code> module. Since the example module is completely overwritten by the user, the previous example module code is completely ignored.</p>"},{"location":"modules/#creating-more-modules","title":"Creating More Modules","text":"<p>The easiest way to create a new module is by copying the <code>example</code> folder, and renaming it to something different. This folder should be placed under <code>overrides/modules</code> under most cases. However, if you are looking to contribute to the project, place this under <code>src/modules</code> instead.</p> <p>Certain parts of the code should be renamed as well to avoid conflicts with the existing <code>example</code> module, including the <code>MOD.id</code>, import path, <code>JPMNLogger</code> constructor, and runtime option call (<code>utils.opt</code>).</p> <p>Of course, make sure all the renames are consistent. For example, all of the following should be the same:</p> <ul> <li><code>MOD.id</code></li> <li>module folder name</li> <li><code>JPMNLogger</code> constructor argument</li> </ul> <p>Afterwards, make sure to add the module id to <code>enabled-modules</code>, and ensure that <code>allow-user-defined-modules</code> is set to <code>True</code>.</p> <p>If everything is done correctly, the note should include your custom module after the next build!</p>"},{"location":"modules/#why-not-just-separate-the-code-with-files","title":"Why not just separate the code with files?","text":"<p>Short answer:  In an attempt to keep the card as stable as possible between versions.</p> <p>Long answer:  Anki specifically states this in its official documentation:</p> <p>Quote</p> <p>Javascript functionality is provided without any support or warranty.</p> <p>Many javascript-related things seem to behave strangely in Anki, which prevents the ability to separate files easily. Here have been the solutions I have tried before moving to this approach:</p> Link an external script with the <code>&lt;script&gt;</code> tag <p>There are two main problems with this approach:</p> <ol> <li> <p>On older Anki versions (2.1.49 and below), all <code>&lt;script&gt;</code> tags loads asynchronously     compared to each other.</p> <p>This means if any file must be ran before a file is loaded, then the script would fail.</p> <p>On versions 2.1.50 and above, it appears that Anki loads <code>&lt;script&gt;</code> tags synchronously. However, there is no guarantee that this will be the case for the future.</p> </li> <li> <p>Certain javascript in the main template has to be ran before loading in any file.</p> <p>This requirement exists for this note type due to the runtime-options file exists. The global <code>JPMNOpts</code> has to exist for any external files that uses runtime options to work.</p> <p>This can be fixed by importing the options separately for each file, but that naturally leads us to the examples shown in the following section.</p> </li> </ol> Regular imports within Javascript <p>All other examples of importing without a separate <code>&lt;script src=\"...\"&gt;</code> requires asynchronous javascript features, which should be avoided as much as possible.</p> <p>Examples:</p> <pre><code>&lt;script&gt;\n// https://forums.ankiweb.net/t/linking-to-external-javascript/1713\nvar injectScript = (src) =&gt; {\nreturn new Promise((resolve, reject) =&gt; { // a Promise is an asynchronous feature!\nconst script = document.createElement('script');\nscript.src = src;\nscript.async = true;\nscript.onload = resolve;\nscript.onerror = reject;\ndocument.head.appendChild(script);\n});\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/import\n// this import function is an asynchronous function!\n(async () =&gt; {\nawait import(\"/modules/my-module.js\");\n// ...\n})();\n&lt;/script&gt;\n&lt;!-- type=\"module\" forces this entire script to run asynchronously! --&gt;\n&lt;script type=\"module\"&gt;\n// for the `import` statement to work, the script must be of type=\"module\"\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import\nimport { export1 } from \"module-name\";\n&lt;/script&gt;\n</code></pre> <p>In conclusion, this is a design decision made after lots of trial and error when attempting to work with Anki's Javascript parser.</p> <p>I believe this is the best way to ensure that the note stays resilient across Anki updates, as the javascript itself has very few hacks to get it to behave well.</p>"},{"location":"overrides/","title":"Custom HTML (Overrides)","text":""},{"location":"overrides/#overview","title":"Overview","text":"<p>An easy way to override and extend parts of the card templates is by using an <code>overrides</code> folder. This folder (specified under <code>config.py</code> under the <code>templates-override-folder</code> option) allows you to override any file under the <code>src</code> folder (outside of <code>scss</code> files).</p> <p>Primarily, this allows you to override sections of template code found under <code>src/jp-mining-note</code>, such as <code>src/jp-mining-note/partials/hint.html</code>.</p> <p>The structure of the <code>overrides</code> folder must match the structure in the <code>src</code> folder. For example, if you want to override the hint file (<code>src/jp-mining-note/partials/hint.html</code>), the new file must be created under <code>overrides/jp-mining-note/partials/hint.html</code></p>"},{"location":"overrides/#example-add-external-links","title":"Example (Add external links)","text":"<p>Warning</p> <p>The following is deprecated starting from Version 0.10.3.0. Version 0.10.3.0 allows the user to customize external links in the compile options (<code>config.py</code>).</p> <p>This is only here to serve as a placeholder example (while I try to think of other practical examples people would use). Let me know if you have any ideas!</p> <p>Let's say we want to rewrite the <code>Extra Info</code> section to have external links that search for the tested word.</p> <ol> <li> <p>Look for the partial within the <code>src</code> folder.      This leads us to the <code>src/jp-mining-note/partials/extra_info.html</code> file.</p> </li> <li> <p>Override the partial.      Now that we know the location of the partial, we create the same file in <code>overrides</code>.     This new file should be of the path     <code>overrides/jp-mining-note/partials/extra_info.html</code>.</p> </li> <li> <p>Write the code.      Using the partial under <code>src</code> as an example, the following code is     a modified version of the original HTML where we removed the dependency     on the <code>PAGraphs</code> and <code>UtilityDictionaries</code> fields.     Additionally, at the very bottom, a link to Jisho and Yourei is provided.</p> <p>Copy and paste the code below to your newly created file (<code>overrides/jp-mining-note/partials/extra_info.html</code>).</p> Extra Info with External Links <pre><code>&lt;details class=\"glossary-details glossary-details--small\" id=\"extra_info_details\"&gt;\n&lt;summary&gt;Extra Info&lt;/summary&gt;\n&lt;blockquote class=\"glossary-blockquote glossary-blockquote--small highlight-bold\"&gt;\n&lt;div class=\"glossary-text glossary-text--extra-info\"&gt;\n{% call IF(\"PAGraphs\") %}\n&lt;div class=\"pa-graphs\"&gt;\n{{ T(\"PAGraphs\") }}\n&lt;/div&gt;\n{% endcall %}\n{% call IF(\"UtilityDictionaries\") %}\n&lt;div class=\"utility-dicts\"&gt;\n{{ T(\"UtilityDictionaries\") }}\n&lt;/div&gt;\n{% endcall %}\n&lt;a href=\"https://jisho.org/search/{{ T('Word') }}\"&gt;\u8f9e\u66f8&lt;/a\n&gt;\u30fb&lt;a href=\"http://yourei.jp/{{ T('Word') }}\"&gt;\u7528\u4f8b&lt;/a&gt;\n&lt;/div&gt;\n&lt;/blockquote&gt;\n&lt;/details&gt;\n</code></pre> </li> <li> <p>Rebuild and reinstall the template.      After rebuilding and reinstalling, your <code>Extra Info</code> section should now have two links     at the bottom.</p> </li> </ol>"},{"location":"personalsetup/","title":"Personalsetup","text":"<p>Welcome to my (hidden) personal setup page! This section is very likely outdated and is not very easy to go through.</p> <p>If you want to use this note type, I recommend looking at other pages of the wiki.</p>"},{"location":"personalsetup/#texthooker-css-renji","title":"Texthooker CSS (Renji)","text":"<pre><code>main &gt; p {\n  padding: 0rem !important;\n}\n\nmain {\n  padding-left: min(5%, 5rem) !important;\n  padding-right: min(5%, 5rem) !important;\n  font-family: \"Noto Sans CJK JP\" !important;\n}\n</code></pre>"},{"location":"personalsetup/#anki","title":"Anki","text":"<p>plugins:</p> <ul> <li><code>1344485230 1225470483 2055492159 580654285</code><ul> <li>ajt furigana / ajt pitch accent / ankiconnect / local forvo</li> <li>config under normal setup page</li> <li>custom audio sources: <code>http://localhost:8770/?expression={expression}&amp;reading={reading}</code></li> </ul> </li> <li>local audio plugin w/ sqlite<ul> <li>get audio zips from existing computer / backup <pre><code>.\n\u251c\u2500\u2500 jpod_alternate_files\n\u2502   \u2514\u2500\u2500 \u3088\u3080 - \u8aad\u3080.mp3\n\u2502   \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 jpod_files\n\u2502   \u2514\u2500\u2500 \u3088\u3080 - \u8aad\u3080.mp3\n\u2502   \u2514\u2500\u2500 ...\n\u2514\u2500\u2500 nhk16_files\n    \u251c\u2500\u2500 audio\n    \u2502   \u2514\u2500\u2500 20170616125910.aac\n    \u2502   \u2514\u2500\u2500 ...\n    \u2514\u2500\u2500 entries.json\n</code></pre></li> </ul> </li> <li>forvo plugin</li> </ul>"},{"location":"personalsetup/#yomichan","title":"Yomichan","text":"<ul> <li>import settings from an existing computer / backup drive</li> <li>TMW dicts</li> <li>Yomichan settings \u2192  \"Popup Appearance\":</li> <li>\"Compact glossaries\": on</li> <li>\"Compact tags\": off,</li> </ul> <p>monolingual:</p> <ul> <li>hold shift: bilingual (at any level)</li> <li>mouseover: monolingual</li> </ul> <p>monolingual shift:</p> <ul> <li>hold shift:<ul> <li>access monolingual at first level</li> <li>bilingual at all other levels</li> </ul> </li> <li>mouseover to access monolingual at other levels</li> </ul> <p>bilingual:</p> <ul> <li>mouseover: bilingual</li> </ul> <p>pa:</p> <ul> <li>hold shift: pitch accent and utilities</li> </ul> Yomichan Template Options <pre><code>{{~! NOTE: this MUST be put at the very top of the templates section! ~}}\n{{~! ================ Dictionary Categorization Options ================= ~}}\n{{~! valid values: \"bilingual\", \"monolingual\" ~}}\n{{~#set \"opt-first-definition-type\" \"monolingual\"}}{{/set~}}\n{{~! matches most JMdict dictionaries, \u65b0\u548c\u82f1 and \u65e5\u672c\u8a9e\u6587\u6cd5\u8f9e\u5178(\u5168\u96c6)~}}\n{{~#set \"bilingual-dict-regex\"~}} ^(([Jj][Mm][Dd]ict)(?! Surface Forms)(.*)|\u65b0\u548c\u82f1|\u65e5\u672c\u8a9e\u6587\u6cd5\u8f9e\u5178\\(\u5168\u96c6\\)|ADD_BILINGUAL_DICTIONARIES_HERE)$ {{~/set~}}\n{{~#set \"utility-dict-regex\"~}} ^(NHK\u65e5\u672c\u8a9e\u767a\u97f3\u30a2\u30af\u30bb\u30f3\u30c8\u65b0\u8f9e\u5178|\u30b7\u30f3\u30fb\u6f22\u5b57\u9063\u3044\u53c2\u8003|[Jj][Mm][Dd]ict( Surface)? Forms)$ {{~/set~}}\n{{~#set \"ignored-dict-regex\"~}} ^(\u65b0\u548c\u82f1)$ {{~/set~}}\n{{~! ====================== Selected Text Options ======================= ~}}\n{{set \"opt-selection-text-enabled\"               true}}\n{{set \"opt-selection-text-dictionary\"            true}}\n{{set \"opt-selection-text-glossary\"              true}}\n{{set \"opt-selection-text-glossary-attempt-bold\" true}}\n{{~! ==================== Frequency Sorting Options ===================== ~}}\n{{~! See here for the official documentation on how these options work:\nhttps://github.com/MarvNC/JP-Resources#freq-settings ~}}\n{{~#set \"opt-ignored-freq-dict-regex\"~}} ^(JLPT_Level)$ {{~/set~}}\n{{~#set \"opt-keep-freqs-past-first-regex\"~}} ^()$ {{~/set~}}\n{{~set \"opt-no-freq-default-value\" 9999999 ~}}\n{{~set \"opt-freq-sorting-method\" \"harmonic\" ~}} {{~! \"min\", \"first\", \"avg\", \"harmonic\" ~}}\n{{~set \"opt-grammar-override\" true ~}}\n{{~set \"opt-grammar-override-value\" 0 ~}}\n{{~#set \"opt-grammar-override-dict-regex\"~}} ^(\u65e5\u672c\u8a9e\u6587\u6cd5\u8f9e\u5178\\(\u5168\u96c6\\)|\u6bce\u65e5\u306e\u3093\u3073\u308a\u65e5\u672c\u8a9e\u6559\u5e2b|JLPT\u6587\u6cd5\u89e3\u8aac\u307e\u3068\u3081|\u3069\u3093\u306a\u3068\u304d\u3069\u3046\u4f7f\u3046 \u65e5\u672c\u8a9e\u8868\u73fe\u6587\u578b\u8f9e\u5178|\u7d75\u3067\u308f\u304b\u308b\u65e5\u672c\u8a9e)$ {{~/set~}}\n{{~! ============== ORIGINAL YOMICHAN TEMPLATE CODE BELOW ============== ~}}\n</code></pre>"},{"location":"personalsetup/#monolingual-profile","title":"monolingual profile","text":"<ul> <li>scale: 110%</li> <li>condition: modifier keys are shift</li> </ul> CSS <pre><code>/*\n * ========\n *  global\n * ========\n */\nbutton[title^=\"Add reading\"] {\ndisplay:none;\n}\n[data-sc-ortho=\"table\"] td {\ntext-align: center;\n}\n.headword-term ruby rt {\nuser-select: none\n}\n/* Taken from: https://github.com/MarvNC/yomichan-dictionaries/#yomichan-css-for-kanji-dictionaries */\n/* remove misc dict classifications/codepoints/stats */\n.kanji-glyph-data {\nwidth: 100%\n}\n.kanji-glyph-data &gt; tbody &gt; tr:nth-child(n + 3) {\ndisplay: none;\n}\n/* remove stroke diagram, freq, header for next entries */\ndiv.entry[data-type='kanji']:nth-child(n + 2) .kanji-glyph-container,\ndiv.entry[data-type='kanji']:nth-child(n + 2) [data-section-type='frequencies'],\ndiv.entry[data-type='kanji']:nth-child(n + 2) table.kanji-glyph-data &gt; tbody &gt; tr:first-child {\ndisplay: none;\n}\n/* remove 'No data found' */\n.kanji-info-table-item-value-empty {\ndisplay: none;\n}\n/* remove horizontal lines */\n.entry + .entry[data-type='kanji'],\ndiv#dictionary-entries &gt; div.entry:nth-child(n + 2) .kanji-glyph-data &gt; tbody &gt; tr &gt; * {\nborder-top: none !important;\n}\n/*\n * ============\n *  global end\n * ============\n */\n/* only shows the first 2 pitch dictionaries */\nli.pronunciation-group:nth-child(n+3) {\ndisplay: none;\n}\n/* makes \u5927\u8f9e\u6cc9 and NHK have white text, and all other pitch dictionaries have grey text */\n.tag[data-category=\"pronunciation-dictionary\"] {\n--tag-text-color: #c8bfdb;\n}\n.tag[data-details=\"\u5927\u8f9e\u6cc9\"], .tag[data-details=\"NHK\"] {\n--tag-text-color: #FFFFFF;\n}\nli.definition-item[data-dictionary='NHK\u65e5\u672c\u8a9e\u767a\u97f3\u30a2\u30af\u30bb\u30f3\u30c8\u65b0\u8f9e\u5178'] {\ndisplay: none;\n}\nli.definition-item[data-dictionary='JMdict (English)'] .gloss-list {\nopacity: 0;\n}\nli.definition-item[data-dictionary='JMdict (English)']:hover .gloss-list {\nopacity: 1;\n}\nli.definition-item[data-dictionary='\u65b0\u548c\u82f1'] .gloss-list {\nopacity: 0;\n}\nli.definition-item[data-dictionary='\u65b0\u548c\u82f1']:hover .gloss-list {\nopacity: 1;\n}\nli.definition-item[data-dictionary='\u65e5\u672c\u8a9e\u6587\u6cd5\u8f9e\u5178(\u5168\u96c6)'] .gloss-list {\nopacity: 0;\n}\nli.definition-item[data-dictionary='\u65e5\u672c\u8a9e\u6587\u6cd5\u8f9e\u5178(\u5168\u96c6)']:hover .gloss-list {\nopacity: 1;\n}\n</code></pre>"},{"location":"personalsetup/#bilingual-profile","title":"bilingual profile","text":"<ul> <li>scale: 100%</li> <li>NHK\u65e5\u672c\u8a9e\u767a\u97f3\u30a2\u30af\u30bb\u30f3\u30c8\u65b0\u8f9e\u5178 and \u30b7\u30f3\u30fb\u6f22\u5b57\u9063\u3044\u53c2\u8003 should have lower priority compared to bilingual dicts</li> <li>condition: modifier keys are ctrl</li> </ul> CSS <pre><code>/*\n * ========\n *  global\n * ========\n */\nbutton[title^=\"Add reading\"] {\ndisplay:none;\n}\n[data-sc-ortho=\"table\"] td {\ntext-align: center;\n}\n.headword-term ruby rt {\nuser-select: none\n}\n/* Taken from: https://github.com/MarvNC/yomichan-dictionaries/#yomichan-css-for-kanji-dictionaries */\n/* remove misc dict classifications/codepoints/stats */\n.kanji-glyph-data {\nwidth: 100%\n}\n.kanji-glyph-data &gt; tbody &gt; tr:nth-child(n + 3) {\ndisplay: none;\n}\n/* remove stroke diagram, freq, header for next entries */\ndiv.entry[data-type='kanji']:nth-child(n + 2) .kanji-glyph-container,\ndiv.entry[data-type='kanji']:nth-child(n + 2) [data-section-type='frequencies'],\ndiv.entry[data-type='kanji']:nth-child(n + 2) table.kanji-glyph-data &gt; tbody &gt; tr:first-child {\ndisplay: none;\n}\n/* remove 'No data found' */\n.kanji-info-table-item-value-empty {\ndisplay: none;\n}\n/* remove horizontal lines */\n.entry + .entry[data-type='kanji'],\ndiv#dictionary-entries &gt; div.entry:nth-child(n + 2) .kanji-glyph-data &gt; tbody &gt; tr &gt; * {\nborder-top: none !important;\n}\n/*\n * ============\n *  global end\n * ============\n */\nli.definition-item[data-dictionary='\u65fa\u6587\u793e\u56fd\u8a9e\u8f9e\u5178 \u7b2c\u5341\u4e00\u7248'] {\ndisplay: none;\n}\nli.definition-item[data-dictionary='\u660e\u93e1\u56fd\u8a9e\u8f9e\u5178'] {\ndisplay: none;\n}\nli.definition-item[data-dictionary='\u660e\u93e1\u56fd\u8a9e\u8f9e\u5178 \u7b2c\u4e8c\u7248'] {\ndisplay: none;\n}\nli.definition-item[data-dictionary='\u30cf\u30a4\u30d6\u30ea\u30c3\u30c9\u65b0\u8f9e\u6797'] {\ndisplay: none;\n}\nli.definition-item[data-dictionary='\u65b0\u660e\u89e3\u56fd\u8a9e\u8f9e\u5178 \u7b2c\u4e94\u7248'] {\ndisplay: none;\n}\nli.definition-item[data-dictionary='\u30c7\u30b8\u30bf\u30eb\u5927\u8f9e\u6cc9'] {\ndisplay: none;\n}\nli.definition-item[data-dictionary='\u6f22\u5b57\u6e90'] {\ndisplay: none;\n}\nli.definition-item[data-dictionary='\u5b9f\u7528\u65e5\u672c\u8a9e\u8868\u73fe\u8f9e\u5178'] {\ndisplay: none;\n}\nli.definition-item[data-dictionary='\u6bce\u65e5\u306e\u3093\u3073\u308a\u65e5\u672c\u8a9e\u6559\u5e2b'] {\ndisplay: none;\n}\nli.definition-item[data-dictionary='\u5b66\u7814 \u56db\u5b57\u719f\u8a9e\u8f9e\u5178'] {\ndisplay: none;\n}\nli.definition-item[data-dictionary='\u65b0\u660e\u89e3\u56db\u5b57\u719f\u8a9e\u8f9e\u5178'] {\ndisplay: none;\n}\n/* only shows the first 2 pitch dictionaries */\nli.pronunciation-group:nth-child(n+3) {\ndisplay: none;\n}\n/* makes \u5927\u8f9e\u6cc9 and NHK have white text, and all other pitch dictionaries have grey text */\n.tag[data-category=\"pronunciation-dictionary\"] {\n--tag-text-color: #c8bfdb;\n}\n.tag[data-details=\"\u5927\u8f9e\u6cc9\"], .tag[data-details=\"NHK\"] {\n--tag-text-color: #FFFFFF;\n}\n</code></pre>"},{"location":"personalsetup/#pa-and-grammar-profile","title":"PA and grammar profile","text":"<ul> <li>scale: 100%</li> </ul> CSS <pre><code>/*\n * ========\n *  global\n * ========\n */\nbutton[title^=\"Add reading\"] {\ndisplay:none;\n}\n[data-sc-ortho=\"table\"] td {\ntext-align: center;\n}\n.headword-term ruby rt {\nuser-select: none\n}\n/* Taken from: https://github.com/MarvNC/yomichan-dictionaries/#yomichan-css-for-kanji-dictionaries */\n/* remove misc dict classifications/codepoints/stats */\n.kanji-glyph-data {\nwidth: 100%\n}\n.kanji-glyph-data &gt; tbody &gt; tr:nth-child(n + 3) {\ndisplay: none;\n}\n/* remove stroke diagram, freq, header for next entries */\ndiv.entry[data-type='kanji']:nth-child(n + 2) .kanji-glyph-container,\ndiv.entry[data-type='kanji']:nth-child(n + 2) [data-section-type='frequencies'],\ndiv.entry[data-type='kanji']:nth-child(n + 2) table.kanji-glyph-data &gt; tbody &gt; tr:first-child {\ndisplay: none;\n}\n/* remove 'No data found' */\n.kanji-info-table-item-value-empty {\ndisplay: none;\n}\n/* remove horizontal lines */\n.entry + .entry[data-type='kanji'],\ndiv#dictionary-entries &gt; div.entry:nth-child(n + 2) .kanji-glyph-data &gt; tbody &gt; tr &gt; * {\nborder-top: none !important;\n}\n/*\n * ============\n *  global end\n * ============\n */\nli.definition-item[data-dictionary='\u65fa\u6587\u793e\u56fd\u8a9e\u8f9e\u5178 \u7b2c\u5341\u4e00\u7248'] {\ndisplay: none;\n}\nli.definition-item[data-dictionary='\u660e\u93e1\u56fd\u8a9e\u8f9e\u5178'] {\ndisplay: none;\n}\nli.definition-item[data-dictionary='\u660e\u93e1\u56fd\u8a9e\u8f9e\u5178 \u7b2c\u4e8c\u7248'] {\ndisplay: none;\n}\nli.definition-item[data-dictionary='\u30cf\u30a4\u30d6\u30ea\u30c3\u30c9\u65b0\u8f9e\u6797'] {\ndisplay: none;\n}\nli.definition-item[data-dictionary='\u65b0\u660e\u89e3\u56fd\u8a9e\u8f9e\u5178 \u7b2c\u4e94\u7248'] {\ndisplay: none;\n}\nli.definition-item[data-dictionary='\u30c7\u30b8\u30bf\u30eb\u5927\u8f9e\u6cc9'] {\ndisplay: none;\n}\nli.definition-item[data-dictionary='\u6f22\u5b57\u6e90'] {\ndisplay: none;\n}\nli.definition-item[data-dictionary='\u5b9f\u7528\u65e5\u672c\u8a9e\u8868\u73fe\u8f9e\u5178'] {\ndisplay: none;\n}\nli.definition-item[data-dictionary='\u5b66\u7814 \u56db\u5b57\u719f\u8a9e\u8f9e\u5178'] {\ndisplay: none;\n}\nli.definition-item[data-dictionary='\u65b0\u660e\u89e3\u56db\u5b57\u719f\u8a9e\u8f9e\u5178'] {\ndisplay: none;\n}\nli.definition-item[data-dictionary='JMdict (English)'] {\ndisplay: none;\n}\nli.definition-item[data-dictionary='\u65b0\u548c\u82f1'] {\ndisplay: none;\n}\n</code></pre>"},{"location":"personalsetup/#phone-profile","title":"Phone profile","text":"<ul> <li>because it's a phone, less dictionaries are going to be installed (for performance reasons)<ul> <li>anki cards and searches will be less detailed than the ideal max</li> </ul> </li> </ul> List of dictionaries <ul> <li> \u65fa\u6587\u793e\u56fd\u8a9e\u8f9e\u5178 \u7b2c\u5341\u4e00\u7248 rev.OUKOKU11_1.6</li> <li> \u660e\u93e1\u56fd\u8a9e\u8f9e\u5178 \u7b2c\u4e8c\u7248 rev.MEIKYO2.v1</li> <li> \u30cf\u30a4\u30d6\u30ea\u30c3\u30c9\u65b0\u8f9e\u6797 rev.shinjirin</li> <li> \u65b0\u660e\u89e3\u56fd\u8a9e\u8f9e\u5178 \u7b2c\u4e94\u7248 rev.Shinmeikai5</li> <li> \u30c7\u30b8\u30bf\u30eb\u5927\u8f9e\u6cc9 rev.daijisen_20210506;2021-07-27</li> <li> \u5b9f\u7528\u65e5\u672c\u8a9e\u8868\u73fe\u8f9e\u5178 rev.jitsuyou1</li> <li> <p> \u6bce\u65e5\u306e\u3093\u3073\u308a\u65e5\u672c\u8a9e\u6559\u5e2b rev.nihongo_no_sensei_v_1.03 ;2022-04-30;embedded urls, p of speech indicators(N5-N0)</p> </li> <li> <p> \u65b0\u660e\u89e3\u56db\u5b57\u719f\u8a9e\u8f9e\u5178 rev.shinmeikai_yojijukugo;2021-07-12</p> </li> <li> \u6bce\u65e5\u306e\u3093\u3073\u308a\u65e5\u672c\u8a9e\u6559\u5e2b rev.nihongo_no_sensei_v_1.03 ;2022-04-30;embedded urls, p of speech indicators(N5-N0)</li> <li> NHK\u65e5\u672c\u8a9e\u767a\u97f3\u30a2\u30af\u30bb\u30f3\u30c8\u65b0\u8f9e\u5178 rev.1.0--&gt;</li> <li> JMDict Surface Forms rev.JMdict 2022-07-19</li> <li> JMdict (English) rev.jmdict4</li> <li> \u65b0\u548c\u82f1 rev.Shinwaei1</li> <li> \u65e5\u672c\u8a9e\u6587\u6cd5\u8f9e\u5178(\u5168\u96c6) rev.DOJG_v1.01;2022-04-30;better formatting</li> <li> Anime &amp; Jdrama Freq: rev.frequency1</li> <li> Innocent Ranked rev.frequency1</li> <li> JPDB rev.JPDB_by-frequency-global_2022-05-10T03:27:02.930Z</li> <li> VN Freq rev.frequency1</li> <li> KANJIDIC (English) rev.kanjidic2</li> <li> NHK rev.pitch_1.0.1.1</li> <li> \u5927\u8f9e\u6cc9 rev.pitch_1.0.0.1</li> <li> \u30a2\u30af\u30bb\u30f3\u30c8\u8f9e\u5178 rev.pitch1</li> <li> Kanjium rev.pitch1</li> </ul> CSS <pre><code>/*\n * ========\n *  global\n * ========\n */\nbutton[title^=\"Add reading\"] {\ndisplay:none;\n}\n[data-sc-ortho=\"table\"] td {\ntext-align: center;\n}\n.headword-term ruby rt {\nuser-select: none\n}\n/* Taken from: https://github.com/MarvNC/yomichan-dictionaries/#yomichan-css-for-kanji-dictionaries */\n/* remove misc dict classifications/codepoints/stats */\n.kanji-glyph-data {\nwidth: 100%\n}\n.kanji-glyph-data &gt; tbody &gt; tr:nth-child(n + 3) {\ndisplay: none;\n}\n/* remove stroke diagram, freq, header for next entries */\ndiv.entry[data-type='kanji']:nth-child(n + 2) .kanji-glyph-container,\ndiv.entry[data-type='kanji']:nth-child(n + 2) [data-section-type='frequencies'],\ndiv.entry[data-type='kanji']:nth-child(n + 2) table.kanji-glyph-data &gt; tbody &gt; tr:first-child {\ndisplay: none;\n}\n/* remove 'No data found' */\n.kanji-info-table-item-value-empty {\ndisplay: none;\n}\n/* remove horizontal lines */\n.entry + .entry[data-type='kanji'],\ndiv#dictionary-entries &gt; div.entry:nth-child(n + 2) .kanji-glyph-data &gt; tbody &gt; tr &gt; * {\nborder-top: none !important;\n}\n/*\n * ============\n *  global end\n * ============\n */\n/* Only shows the first 2 frequency lists */\nspan.frequency-group-item:nth-child(n+3) {\ndisplay: none;\n}\n</code></pre>"},{"location":"personalsetup/#yomichan-fields","title":"Yomichan Fields","text":"Example Anki Fields Yomichan Format Key <code>{expression}</code> Word <code>{expression}</code> WordReading <code>{furigana-plain}</code> PAOverride PAOverrideText AJTWordPitch PrimaryDefinition <code>{jpmn-primary-definition}</code> PrimaryDefinitionPicture Sentence <code>{cloze-prefix}&lt;b&gt;{cloze-body}&lt;/b&gt;{cloze-suffix}</code> SentenceReading AltDisplay AltDisplayPASentenceCard AdditionalNotes IsSentenceCard IsClickCard <code>{jpmn-filled-if-word-is-not-hiragana}</code> IsHoverCard IsTargetedSentenceCard <code>{jpmn-filled-if-word-is-hiragana}</code> PAShowInfo <code>1</code> PATestOnlyWord <code>1</code> PADoNotTest PASeparateWordCard PASeparateSentenceCard SeparateClozeDeletionCard Hint HintNotHidden Picture WordAudio <code>{audio}</code> SentenceAudio PAGraphs <code>{jpmn-pitch-accent-graphs}</code> PAPositions <code>{jpmn-pitch-accent-positions}</code> PASilence <code>[sound:_silence.wav]</code> WordReadingHiragana <code>{jpmn-word-reading-hiragana}</code> FrequenciesStylized <code>{jpmn-frequencies}</code> FrequencySort <code>{jpmn-frequency-sort}</code> YomichanWordTags <code>{tags}</code> SecondaryDefinition <code>{jpmn-secondary-definition}</code> ExtraDefinitions <code>{jpmn-extra-definitions}</code> UtilityDictionaries <code>{jpmn-utility-dictionaries}</code> Comment <code>DICTIONARY:\u300c{_jpmn-get-primary-definition-dict}\u300d&lt;br&gt;SELECTION:\u300c{_jpmn-selection-text}\u300d</code>"},{"location":"personalsetup/#discord","title":"Discord","text":""},{"location":"personalsetup/#custom-css","title":"Custom CSS","text":"<pre><code>:lang(ja), :lang(ja-JP) {\n--font-primary: Whitney, \"Noto Sans CJK JP\", \"Hiragino Sans\", \"\u30d2\u30e9\u30ae\u30ce\u89d2\u30b4 ProN W3\",\"Hiragino Kaku Gothic ProN\",\"\u30e1\u30a4\u30ea\u30aa\",Meiryo,Osaka,\"MS PGothic\",\"Helvetica Neue\",Helvetica,Arial,sans-serif;\n}\ncode {\nfont-family: Ubuntu Mono, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif, Consolas,Andale Mono WT,Andale Mono,Lucida Console,Lucida Sans Typewriter,DejaVu Sans Mono,Bitstream Vera Sans Mono,Liberation Mono,Nimbus Mono L,Monaco,Courier New,Courier,monospace !important;\n}\n</code></pre>"},{"location":"personalsetup/#mobile-changes","title":"Mobile Changes","text":"<ul> <li>the following are notes of what to change for mobile support</li> <li>nothing is set in stone, etc. etc. things are likely not even implemented yet</li> </ul>"},{"location":"personalsetup/#other","title":"Other","text":"<ul> <li>TMW github source since I keep losing this link</li> </ul>"},{"location":"preface/","title":"Preface","text":"<p>Before committing and going through the setup process, it would be best to make sure that the note aligns with exactly what you want.</p>"},{"location":"preface/#supported-systems","title":"Supported Systems","text":"<p>The most important step is to see if jp-mining-note (JPMN) works on your device.</p>"},{"location":"preface/#card-creation-yomichan","title":"Card Creation (Yomichan)","text":"<p>The card creation process requires a working instances of Yomichan, Anki-Connect, and Anki.</p> <p>By default, this works on PC (Windows, Mac, Linux), and the instructions shown will be for PC. However, with the proper setup, one can also create cards on the following platforms:</p> <ul> <li>Android (including Android based e-readers such as ONYX BOOX)</li> <li>Kindle (export to PC to create)</li> </ul> <p>I'm not aware of a workflow for iOS that works with Yomichan.</p>"},{"location":"preface/#anki-desktop","title":"Anki Desktop","text":"<p>Primary support is given to the latest stable Anki versions (2.1.54+ &amp; Qt6). Limited support will be given for older versions of Anki. With that being said, JPMN should work for Anki versions 2.1.49+.</p>"},{"location":"preface/#mobile-ankidroid-and-ankimobile","title":"Mobile (AnkiDroid and AnkiMobile)","text":"<p>Mobile support is slowly being worked on,1 but JPMN (on mobile) is currently not stable. Do not expect the note to work on mobile. Therefore, if you absolutely must use Anki on mobile, I recommend not using this note.</p>"},{"location":"preface/#ankiweb","title":"AnkiWeb","text":"<p>There is no support for AnkiWeb, and there are no plans to support AnkiWeb.</p>"},{"location":"preface/#themes","title":"Themes","text":"<p>Both light mode and dark mode are supported. However, dark mode is recommended as the main theme of this note.</p>"},{"location":"preface/#updating","title":"Updating","text":"<p>If you ever wish to update the note, this can only be done on PC, and cannot be done on mobile. The note does not auto-update; you must manually update the note.</p>"},{"location":"preface/#theme-design-principles","title":"Theme &amp; Design Principles","text":""},{"location":"preface/#made-for-japanese-learning","title":"Made for Japanese Learning","text":"<p>The absolute fundamental goal of this note type is to make learning Japanese easier. Every feature you see is to simply make this learning process easier and smoother.</p>"},{"location":"preface/#minimalistic-design","title":"Minimalistic Design","text":"<p>This note is visually designed to be minimalistic because the fundamental goal is to learn Japanese, not to have eye catching graphics.</p>"},{"location":"preface/#minimal-dependencies","title":"Minimal Dependencies","text":"<p>The only fundamental dependencies are <code>Yomichan</code> (to create the note) and the <code>Anki-Connect</code> add-on (to export the note from <code>Yomichan</code>, update the note, and for certain features to work within the note). Absolutely nothing else is required. This helps with maintaining stability across various Anki versions.</p>"},{"location":"preface/#modularized-customizable-extendable","title":"Modularized, Customizable &amp; Extendable","text":"<p>This project ships with built-in tools to easily disable/enable features, or even completely remove them from the base template via compile-time options. Additionally, there are many built-in ways to extend the note to suit your exact needs.</p>"},{"location":"preface/#free-open-source","title":"Free &amp; Open Source","text":"<p>Everything here, including the documentation itself, is completely free and open source, licensed under MIT. Rest easy knowing you will keep full ownership of your note, forever.</p>"},{"location":"preface/#alternatives","title":"Alternatives","text":"<p>There are many, many Anki templates out there in the wild. The following page is my attempt to assemble together some of the the popular and/or interesting card templates.</p>"},{"location":"preface/#setup","title":"Setup","text":"<p>Excited to take this note on a whirl?</p> <p>Click here to set it up!</p> <ol> <li> <p>Written as of 2022/10/31.\u00a0\u21a9</p> </li> </ol>"},{"location":"runtimeoptions/","title":"Runtime Options","text":"<p>Runtime options are card options that are applied globally to all JPMN cards. This differs from binary fields, as binary options are options that only affects the one note.</p>"},{"location":"runtimeoptions/#accessing-editing","title":"Accessing &amp; Editing","text":"<p>To access the runtime options, navigate to your profile's media folder, and open the <code>_jpmn-options.js</code> file as a text file.</p> <p>The contents of the file should look something like the following: </p><pre><code>var JPMNOpts = (function (my) {\nmy.settings = {\n// ... (a bunch of settings)\n}\nreturn my;\n}(JPMNOpts || {}));\n</code></pre> <p>Note</p> <p>To open the file as a text file on Windows, right click the file and select <code>Edit</code>. Do not double-click the file.</p> <p>TODO add demo for windows to opening the file &amp; editing</p>"},{"location":"runtimeoptions/#special-option-values","title":"Special Option Values","text":"<p>New in version <code>0.11.0.0</code> (latest version: <code>0.11.0.3</code>)</p> <p>All runtime options can take special values, which are always formatted as the following:</p> <pre><code>{\n\"type\": \"IDENTIFIER_STRING\",\n// other options ...\n},\n</code></pre> <p>For example, take any key-value pair, such as: </p><pre><code>\"enabled\": true,\n</code></pre> <p>This can be changed to: </p><pre><code>\"enabled\": {\n\"type\": \"...\"\n// other options...\n},\n</code></pre> <p></p>"},{"location":"runtimeoptions/#pc-mobile-type","title":"<code>pc-mobile</code> Type","text":"<p>New in version <code>0.11.0.0</code> (latest version: <code>0.11.0.3</code>)</p> <p>The <code>pc-mobile</code> type allows you to specify different values depending if you are using Anki on a mobile device, or PC (non-mobile).</p> <p>This is formatted as the following:</p> <pre><code>{\n\"type\": \"pc-mobile\",\n\"pc\": VALUE_FOR_PC,\n\"mobile\": VALUE_FOR_MOBILE\n},\n</code></pre> Example (click here) <p>Take a sample key-value pair: </p><pre><code>\"enabled\": true,\n</code></pre> <p>The value can be changed to be <code>true</code> for PC, and <code>false</code> for mobile.</p> <pre><code>\"enabled\": {\n\"type\": \"pc-mobile\",\n\"pc\": true,\n\"mobile\": false\n},\n</code></pre> <p></p>"},{"location":"runtimeoptions/#viewport-width-is-type","title":"<code>viewport-width-is</code> Type","text":"<p>New in version <code>0.11.0.0</code> (latest version: <code>0.11.0.3</code>)</p> <p>The <code>viewport-width-is</code> type allows you to specify different values depending on the screen width. Note that the viewport width is read for each card flip. This means that viewport width changes after resizing a window will not be detected, and will only be updated when you flip the side or go to a new card.</p> <p>This is formatted as the following:</p> <pre><code>{\n\"type\": \"viewport-width-is\",\n\"value\": AN_INTEGER, // measured in pixels\n\"greater\": VALUE_FOR_GREATER, // the value used if the current width is greater than \"value\"\n\"lesser\": VALUE_FOR_LESSER // the value used if the current width is lesser than (or equal to) \"value\"\n},\n</code></pre> Example (click here) <p>This will enable <code>pa-indicator-color-quotes</code> on screens that have a viewport width of 1300 pixels or less.</p> <pre><code>\"pa-indicator-color-quotes\": {\n\"type\": \"viewport-width-is\",\n\"value\": 1300,\n\"greater\": false,\n\"lesser\": true\n},\n</code></pre>"},{"location":"runtimeoptions/#troubleshooting","title":"Troubleshooting","text":"<p>TODO record specific errors</p> <p>If you have any error, or an option is simply not working, please check the following:</p> <ol> <li> <p>There are commas and double-quotes in the correct places.</p> Example (click here) <pre><code>\"add-image-if-contains-tags\": [\n{\n\"tags\": [\"sample_tag\"], // &lt;-- HERE\n\"file-name\": \"_sample_image.png\"\n}, // &lt;-- HERE\n{\n\"tags\": [\"something\", \"something2\"], // &lt;-- HERE\n\"file-name\": \"_contains_both_tags.png\"\n}\n], // &lt;-- HERE\n// ...\n</code></pre> </li> <li> <p>If a runtime option is not working,     ensure that the     runtime options file is updated.     The option may have been renamed or repositioned.</p> </li> <li> <p>If an error is saying that an option doesn't exist, just like for the above, ensure     that the runtime options file is updated.</p> </li> </ol>"},{"location":"setup/","title":"Setup: Installing","text":""},{"location":"setup/#overview","title":"Overview","text":"<p>A full sentence mining workflow requires two main parts:</p> <ol> <li>Text to make the cards from.</li> <li>The card exporter, to create cards from the text.<ul> <li>And optionally, the image and sentence audio from the media (if the media has either).</li> </ul> </li> </ol> <p>These next few sections (Installing, Anki and Yomichan) are all dedicated to providing the minimal setup to setup the card exporter to create cards with this note type.</p> <p>Getting the text (the first part) and getting the image and sentence audio (the optional part of part two) are not heavily focused on within this site, but can be found under Setup: Everything Else page.</p> <p>Note</p> <p>There's quite a few things to setup to use this note. If you ever get lost, remember that this site has a search bar!</p>"},{"location":"setup/#installing-anki","title":"Installing Anki","text":"<p>Download and install Anki from the official website if you haven't already. I recommend downloading the latest version, to avoid having to do extra steps during the setup.</p>"},{"location":"setup/#installing-jp-mining-note","title":"Installing jp-mining-note","text":"<p>There are two ways of installing the note:</p> Option 1: The Automatic Way (click here) <p>If you know what <code>git</code> and <code>python</code> is, here's all you have to do:</p> WindowsMacOS &amp; Linux <pre><code>git clone \"https://github.com/Aquafina-water-bottle/jp-mining-note.git\"\ncd jp-mining-note\n\n:: Ensure you have Anki open, and with anki-connect running\n:: Also ensure that you have python 3.10+ installed.\n:: It *MAY* work with lower versions of python, but I make no such guarantee. ;)\npython tools\\install.py\n</code></pre> <pre><code>git clone \"https://github.com/Aquafina-water-bottle/jp-mining-note.git\"\ncd jp-mining-note\n\n# Ensure you have Anki open, and with anki-connect running\n# Also ensure that you have python 3.10+ installed.\n# It *MAY* work with lower versions of python, but I make no such guarantee. ;)\n# You may have to use `python3` instead of `python`.\npython tools/install.py\n</code></pre> <p>The above does the following:</p> <ul> <li>Installs the latest stable version of the note</li> <li>Installs the fonts required for the note</li> </ul> <p>If the above made no sense to you, or you just want to install this normally, see the second option below.</p> Option 2: The Manual Way (click here) <ol> <li>Go to the     releases page     and download the cards from the latest release.     You should download the <code>{version}-jpmn_example_cards.apkg</code> file.</li> <li> <p>After you download the cards, import them by navigating to Anki by doing the following:</p> <p><code>File</code> (top left corner) \u2192  <code>Import...</code></p> </li> <li> <p>By default, the custom fonts do not come with the <code>.apkg</code> file.     To install these fonts, head over to this repository's     media folder     and download the 4 <code>.otf</code> files.</p> </li> <li>Move the <code>.otf</code> files into the media folder     of your profile (<code>Anki2/PROFILENAME/collections.media</code>).</li> </ol> <p></p>"},{"location":"setup/#verifying-the-note-works","title":"Verifying the Note Works","text":"<p>You should see a deck <code>JPMN-Examples</code> in your collection. View one of the cards and make sure the card looks similar to the one below:</p> Dark ThemeLight Theme <p></p> <p></p> <p>Please check the following in particular:</p> <ol> <li> <p>The fonts should match with the above example.</p> <p>If the fonts don't match, try restarting Anki. If the fonts still don't match, the note was likely installed with \"Option 2: The Manual Way\". Please verify you manually installed the fonts and placed them in the correct folder (see steps 3 and 4).</p> <p> </p> </li> <li> <p>Notice how at the top left corner, the info circle (the \"i\" encased within the circle)     is the default grey color.</p> <p>If this circle is red or orange, there may be something wrong with the template. Please see this section for basic troubleshooting.</p> </li> <li> <p>Clicking on the image to zoom should work out of the box.</p> <p>Kanji hover may not work yet. If it doesn't work, read the Anki-Connect setup instructions on the next page.</p> </li> <li> <p>If the furigana on your card seems to appear higher above the kanji compared to the picture,     see the Fix Ruby Positioning option.</p> </li> <li> <p>If the frequency list on the top right appears to be squished (with no spacing between the elements)     see the FAQ on     fixing the frequency list display.</p> </li> </ol>"},{"location":"setup/#anki-setup","title":"Anki Setup","text":"<p>This note requires some additional setup to Anki. In particular, some add-ons are required for the note to work.</p> <p>Click here see how to setup Anki!</p>"},{"location":"setupanki/","title":"Setup: Anki","text":""},{"location":"setupanki/#new-to-anki","title":"New to Anki?","text":"<p>If you have never used Anki before, I recommend using fsrs4anki to get more optimized settings than the default settings.</p> <p>That article showcases only one way of setting up Anki's settings for language learning. Feel free to view some other examples here.</p>"},{"location":"setupanki/#updating-anki","title":"Updating Anki","text":"<p>It is highly recommended that you are using the latest (stable) Anki version (or as close as you can get to the latest Anki version). This includes using the Qt6 version instead of Qt5 if possible.</p> <p>Using the latest version of Anki is recommended for the following reasons:</p> <ul> <li>The note is primarily tested and maintained on the latest versions of Anki.</li> <li>There are a few minor but known bugs that this note type has with older Anki versions.     These bugs do not exist in newer Anki versions.</li> </ul> <p>Worst case scenario, if any essential add-ons no longer work, you can always downgrade back to a previous version.</p> <p>If you aren't upgrading Anki from an older version, you can skip the rest of this section.</p> Tips on Updating Anki (click here) <p></p>Official Documentation <p>The official documentation on how to install and upgrade Anki is shown below:</p> <p>Windows\u30fbMacOS\u30fbLinux</p> <p>Note that for all three, there are additional sections in the table of contents to the left that could be helpful.</p> <p></p>Add-ons Breaking <p>If an add-on (that worked in a previous version of Anki) no longer works, you have a few options you can try:</p> <ul> <li>As a sanity check, click the <code>Check for Updates</code> button on Anki's <code>Addons</code> window.</li> <li> <p>Check that the add-on supports the current version of Anki in the official AnkiWeb page.     If the page says that the current Anki version is supported,     try reinstalling it again from AnkiWeb.</p> <p>Occasionally, the <code>Check for Updates</code> button doesn't properly work, so this method ensures that your addon is actually updated.</p> </li> </ul>"},{"location":"setupanki/#dark-mode","title":"Dark Mode","text":"<p>Although light mode is supported, the recommended theme for this note is dark mode. With that being said, changing the theme is completely optional.</p> <p>The note automatically adjusts according to Anki's theme. To change Anki's theme, head over to:</p> <p><code>Tools</code> \u2192  <code>Preferences</code> \u2192  <code>Basic</code> \u2192  <code>Theme (dropdown)</code></p> <p></p> <p>Note</p> <p>The note's theme currently cannot be forced to be a particular theme without changing Anki's settings.</p>"},{"location":"setupanki/#anki-add-ons","title":"Anki Add-ons","text":"<p>There are certain add-ons that must be installed for this note type to work.</p>"},{"location":"setupanki/#conflicting-add-ons","title":"Conflicting Add-ons","text":"<p>There are no conflicting add-ons, since I'm not aware of any currently. Let me know if you find one!</p>"},{"location":"setupanki/#downloading-add-ons","title":"Downloading Add-ons","text":"<p>To download an add-on, copy the add-on's code, and navigate to the following to paste the code: </p> <p><code>Tools</code> \u2192  <code>Add-ons</code> \u2192  <code>Get Add-ons...</code></p> <p></p>"},{"location":"setupanki/#required-add-ons","title":"Required Add-ons","text":""},{"location":"setupanki/#anki-connect","title":"Anki-Connect","text":"<p>Code: <code>2055492159</code></p> <p>Required for Yomichan and most other Anki-related automated tasks to work. I use the default config that comes with the add-on.</p> <p>Note for Anki versions 2.1.49 and below</p> <p>Anki versions 2.1.49 and below require a hack to the Anki-Connect config for certain features within the card to work. In particular, Anki-Connect is used for the \"Kanji Hover\" feature and the \"Open Fields on New Card\" feature.</p> <p>To make those features work, add <code>\"null\"</code> to the <code>webCorsOriginList</code> list in the Anki-Connect config file. An example of how the config should look is shown below:</p> <pre><code>\"webCorsOriginList\": [\n    \"http://localhost\",\n    \"null\"\n]\n</code></pre> <p>Of course, this isn't very safe and it is highly recommended that you upgrade Anki to avoid this problem.</p> <p>If you aren't interested in those features, you can skip this step and disable them in the runtime options.</p>"},{"location":"setupanki/#optional-add-ons","title":"Optional Add-ons","text":"<p>These are a set of optional, but useful add-ons that can easily work with the card. If this is your first time here, I recommend skimming through the descriptions and choosing the add-ons that seem appealing for you.</p> <p>Note</p> <p>Make sure to head over to the final steps section afterwards!</p> <p></p>"},{"location":"setupanki/#css-injector","title":"CSS Injector","text":"<p>Code: <code>181103283</code></p> <p>I strongly recommend using this, because if you don't use this, the fields within the Anki field editor won't have certain stylizations that makes the field actually interpretable.</p> <p></p> <p>There are two ways of using css injector with this note type:</p> Option 1: Automatically updates with the card (recommended) WindowsMacOSLinux <p>As a preliminary step, you will have to remove the empty <code>field.css</code> and <code>editor.css</code> files that comes with the add-on. That can be done through command line (below), or you can simply navigate to the <code>Anki2/addons21/181103283/user_files</code> folder (within the addons folder) and delete both <code>css</code> files.</p> <pre><code>:: be sure to change USERNAME to your computer username!\ndel \"C:\\Users\\USERNAME\\AppData\\Roaming\\Anki2\\addons21\\181103283\\user_files\\field.css\"\ndel \"C:\\Users\\USERNAME\\AppData\\Roaming\\Anki2\\addons21\\181103283\\user_files\\editor.css\"\n</code></pre> <p>Afterwards, open command prompt with elevated permissions.</p> <p>Note</p> <p>Be sure to open command prompt, and not PowerShell. If you've never used command prompt before, see this.</p> <p>With command prompt opened, run the following command:</p> <pre><code>:: be sure to change USERNAME to your computer username and PROFILENAME to your Anki profile.\n:: There are **two** USERNAME's to replace, and **one** PROFILENAME to replace\n:: in the commands below.\n:: Make sure to replace all the fields!\nmklink \"C:\\Users\\USERNAME\\AppData\\Roaming\\Anki2\\addons21\\181103283\\user_files\\field.css\" \"C:\\Users\\USERNAME\\AppData\\Roaming\\Anki2\\PROFILENAME\\collection.media\\_field.css\"\nmklink \"C:\\Users\\USERNAME\\AppData\\Roaming\\Anki2\\addons21\\181103283\\user_files\\editor.css\" \"C:\\Users\\USERNAME\\AppData\\Roaming\\Anki2\\PROFILENAME\\collection.media\\_editor.css\"\n</code></pre> <p>As a preliminary step, you will have to remove the empty <code>field.css</code> and <code>editor.css</code> files that comes with the add-on. That can be done through command line (below), or you can simply navigate to the <code>Anki2/addons21/181103283/user_files</code> folder (within the addons folder) and delete both <code>css</code> files.</p> <pre><code>rm \"$HOME/Library/Application Support/Anki2/addons21/181103283/user_files/field.css\"\nrm \"$HOME/Library/Application Support/Anki2/addons21/181103283/user_files/editor.css\"\n</code></pre> <p>Afterwards, run the following command: </p><pre><code># be sure to change `PROFILENAME` to your Anki profile\nln -s \"$HOME/Library/Application Support/Anki2/PROFILENAME/collection.media/_field.css\" \"$HOME/Library/Application Support/Anki2/addons21/181103283/user_files/field.css\"\nln -s \"$HOME/Library/Application Support/Anki2/PROFILENAME/collection.media/_editor.css\" \"$HOME/Library/Application Support/Anki2/addons21/181103283/user_files/editor.css\"\n</code></pre> <p>As a preliminary step, you will have to remove the empty <code>field.css</code> and <code>editor.css</code> files that comes with the add-on. That can be done through command line (below), or you can simply navigate to the <code>Anki2/addons21/181103283/user_files</code> folder (within the addons folder) and delete both <code>css</code> files.</p> <pre><code>rm \"$HOME/.local/share/Anki2/addons21/181103283/user_files/field.css\"\nrm \"$HOME/.local/share/Anki2/addons21/181103283/user_files/editor.css\"\n</code></pre> <p>Afterwards, run the following command: </p><pre><code># be sure to change `PROFILENAME` to your Anki profile\nln -s \"$HOME/.local/share/Anki2/PROFILENAME/collection.media/_field.css\" \"$HOME/.local/share/Anki2/addons21/181103283/user_files/field.css\"\nln -s \"$HOME/.local/share/Anki2/PROFILENAME/collection.media/_editor.css\" \"$HOME/.local/share/Anki2/addons21/181103283/user_files/editor.css\"\n</code></pre> Option 2: Manually without respecting updates <ol> <li>Navigate to css injector addon folder     (<code>Anki2/addons21/181103283/user_files</code>)</li> <li>Remove the existing <code>field.css</code> and <code>editor.css</code> files</li> <li>Copy the <code>_field.css</code> file and <code>_editor.css</code> file     (found under your profile's media folder)     into the css injector add-on directory.</li> <li>Rename <code>_field.css</code> to <code>field.css</code>.</li> <li>Rename <code>_editor.css</code> to <code>editor.css</code>.</li> </ol> <p>Note</p> <p>If either of the two css files ever update, you will have to manually copy and rename the file again.</p> <p></p>"},{"location":"setupanki/#ajt-japanese","title":"AJT Japanese","text":"<p>Code: <code>1344485230</code></p> <p>This is an add-on that automatically adds furigana and pitch accents to cards upon Yomichan card creation. Previously known as <code>AJT Furigana</code>, and now comes packaged with <code>AJT Pitch Accent</code>.</p> <p>If this add-on is not used, then the following features will be missing:</p> <ul> <li>Automatically generated furigana</li> <li>Devoiced and nasal information to pitch accents</li> <li>Less coverage on pitch accents<ul> <li>If your Yomichan pitch accent dictionaries did not contain any pitch accent info for the word   but the add-on does, then it will use the add-on data.   This will likely happen for expressions containing more than one word.   Fortunately, AJT Japanese can usually detect the existence of multiple words,   and add the pitch accent for each individual word.</li> </ul> </li> </ul>"},{"location":"setupanki/#config-changes","title":"Config Changes","text":"<p>The config of the add-on must be changed to work with this note.</p> <p>To change the config of any Anki add-on, head over to:</p> <p><code>Tools</code> \u2192  <code>Add-ons</code> \u2192  (select the add-on) \u2192  <code>Config</code>.</p> Click here to see the full AJT Japanese config <p>The important things to change in the config are:</p> <ul> <li><code>generate_on_note_add</code></li> <li><code>fields</code></li> <li><code>profiles</code></li> <li><code>pitch_accent.reading_separator</code></li> <li><code>pitch_accent.word_separator</code></li> <li><code>pitch_accent.maximum_results</code></li> </ul> <pre><code>{\n\"generate_on_note_add\": true, // (1)!\n\"regenerate_readings\": false,\n\"cache_lookups\": 1024,\n\"last_file_save_location\": \"\",\n\"styles\": { // (2)!\n\"&amp;#42780;\": \"&lt;span class=\\\"downstep\\\"&gt;&lt;span class=\\\"downstep-inner\\\"&gt;&amp;#42780;&lt;/span&gt;&lt;/span&gt;\",\n\"class=\\\"overline\\\"\": \"style=\\\"text-decoration:overline;\\\" class=\\\"pitchoverline\\\"\"\n},\n\"profiles\": [ // (3)!\n{\n\"name\": \"Add pitch accent html\",\n\"note_type\": \"JP Mining Note\",\n\"source\": \"Word\",\n\"destination\": \"AJTWordPitch\",\n\"mode\": \"pitch\",\n\"output_format\": \"html\",\n\"split_morphemes\": false\n},\n{\n\"name\": \"Add pitch accent number -- UNUSED BY jp-mining-note\",\n\"note_type\": \"AJT_JAPANESE_IGNORE_PROFILE\",\n\"source\": \"VocabKanji\",\n\"destination\": \"VocabPitchNum\",\n\"mode\": \"pitch\",\n\"output_format\": \"number\",\n\"split_morphemes\": false\n},\n{\n\"name\": \"Add furigana for sentence\",\n\"note_type\": \"JP Mining Note\",\n\"source\": \"Sentence\",\n\"destination\": \"SentenceReading\",\n\"mode\": \"furigana\",\n\"split_morphemes\": true\n},\n{\n\"name\": \"Add furigana for word -- UNUSED BY jp-mining-note\",\n\"note_type\": \"AJT_JAPANESE_IGNORE_PROFILE\",\n\"source\": \"VocabKanji\",\n\"destination\": \"VocabFurigana\",\n\"mode\": \"furigana\",\n\"split_morphemes\": false\n}\n],\n\"pitch_accent\": {\n\"lookup_shortcut\": \"Ctrl+8\",\n\"output_hiragana\": false,\n\"kana_lookups\": true,\n\"skip_numbers\": true,\n\"reading_separator\": \"\u30fb\", // (4)!\n\"word_separator\": \"\u3001\",\n\"blocklisted_words\": \"\u3053\u3068,\u3078,\u304b,\u3088,\u3093,\u3060,\u3073,\u306e,\u3084,\u306d,\u3070,\u3066,\u3068,\u305f,\u304c,\u306b,\u306a,\u306f,\u3082,\u307e\u3059,\u304b\u3089,\u3044\u308b,\u305f\u3061,\u3066\u308b,\u3046,\u307e\u3057\u3087,\u305f\u3044,\u3059\u308b,\u3067\u3059,\u306a\u3044\",\n\"maximum_results\": 100, // (5)!\n\"discard_mode\": \"keep_first\"\n},\n\"furigana\": {\n\"database_lookups\": true,\n\"skip_numbers\": true,\n\"prefer_literal_pronunciation\": false,\n\"reading_separator\": \", \",\n\"blocklisted_words\": \"\u4eba\",\n\"mecab_only\": \"\u5f7c,\u732b,\u9996,\u6bcd,\u9854,\u6728,\u982d,\u79c1,\u5f1f,\u7a7a,\u4f53,\u884c\u304f\",\n\"counters\": \"\u3064,\u6708,\u65e5,\u4eba,\u7b4b,\u96bb,\u4e01,\u54c1,\u756a,\u679a,\u6642,\u56de,\u5186,\u4e07,\u6b73,\u9650,\u4e07\u4eba\",\n\"maximum_results\": 1, // (6)!\n\"discard_mode\": \"keep_first\"\n},\n\"context_menu\": {\n\"generate_furigana\": true,\n\"to_katakana\": true,\n\"to_hiragana\": true,\n\"literal_pronunciation\": true\n},\n\"toolbar\": { // (7)!\n\"regenerate_all_button\": {\n\"enabled\": false,\n\"shortcut\": \"Alt+P\",\n\"text\": \"\u518d\"\n},\n\"furigana_button\": {\n\"enabled\": false,\n\"shortcut\": \"\",\n\"text\": \"\u632f\"\n},\n\"hiragana_button\": {\n\"enabled\": false,\n\"shortcut\": \"\",\n\"text\": \"\u5e73\"\n},\n\"clean_furigana_button\": {\n\"enabled\": false,\n\"shortcut\": \"\",\n\"text\": \"\u524a\"\n}\n}\n}\n</code></pre> <ol> <li> <p>This ensures that the pitch accent and furigana is added upon initial note creation.     Note that this is technically optional.     If you are likely to change the sentence after adding the note,     then it is possible to leave this as <code>false</code>,     and bulk add the furigana later.     However, this will also disable automatic generation of pitch accents.</p> </li> <li> <p><code>styles</code> adds custom stylization that creates the pitch accent lines and downsteps as you see     in the example note.     Without this, the default styles will look like the word     you see in the official add-on page.</p> </li> <li> <p>The <code>Add pitch accent number</code> and <code>Add furigana for word</code> profiles are not used.     In order to disable them, the note type is set to <code>AJT_JAPANESE_IGNORE_PROFILE</code>,     which only matches note types containing the string <code>AJT_JAPANESE_IGNORE_PROFILE</code>.     It is very unlikely that your Anki notes will unintentionally contain this string.</p> </li> <li> <p>This makes the separators behave like the old version, and has to be changed to this     for the default config of jp-mining-note to work.</p> </li> <li> <p>This is set to a high number in order for many pitch accents to be displayed for long expressions.     This is fine because the pitch accent display is usually overwritten by     the <code>PAPositions</code> field, so it's rare to see the <code>AJTWordPitch</code> field results anyways.     Additionally, a higher number increases the sample size for the internal     auto-pitch-accent module, to better search for devoiced and nasal markers.</p> </li> <li> <p>This is to restrict the generated furigana to only show one reading.     Feel free to leave this as the default (<code>3</code>).</p> </li> <li> <p>I personally have the buttons removed because I don't want it to clutter up the editor toolbar.     Feel free to have these enabled.</p> </li> </ol>"},{"location":"setupanki/#additional-info","title":"Additional Info","text":"<p>Furigana generation is occasionally incorrect, so if you plan on using furigana regularly, you should double-check the readings to make sure they are correct.</p> JapaneseSupport v.s. AJT Japanese (Furigana) <p>If you use JapaneseSupport, bolded words and other styles within a field are not transferred over from the original field to the reading field. Additionally, JapaneseSupport does not have an option to automatically add the reading upon card creation. AJT Japanese supports both of those of those features.</p> <p></p>"},{"location":"setupanki/#final-steps-after-installing-add-ons","title":"Final Steps: After Installing Add-ons","text":"<p>After the above setup, make sure to restart Anki for the add-ons and config changes to take effect. If the css injector add-on is installed correctly, your Anki field editor should now have color!</p> <p>Additionally, now that Anki-Connect is installed, kanji hover should also be functioning. Hover over a kanji within the word reading to make sure that a popup appears. In particular, the \u8005 kanji in the example \u507d\u8005 and \u4e0d\u5be9\u8005 cards should point to each other.</p> <p>Note</p> <p>Hovering over the other kanjis will display a <code>Kanji not found.</code> message, because the template only searches for kanjis within existing jp-mining-note cards.</p> <p>If you wish to see usages of the kanji within words outside of your deck, I highly recommend using Marv's JPDB Kanji Yomichan Dictionary.</p>"},{"location":"setupanki/#transfer-existing-notes","title":"Transfer Existing Notes","text":"<p>If you wish to transfer existing cards into this note type (say, to make kanji hover work on existing cards), please see this page.</p>"},{"location":"setupanki/#updating-the-note","title":"Updating the Note","text":"<p>If you wish to update the note, follow the steps in this page.</p> <p>This note does not auto-update. This should keep your setup stable, as long as you do not update Anki.</p> <p>When updating Anki, don't forget to check if there is a new version of this note available, because this note should update along with Anki.</p>"},{"location":"setupanki/#setting-up-yomichan","title":"Setting up Yomichan","text":"<p>Of course, you can have an Anki template, but what's the point of it if you can't make cards with it?</p> <p>We will use Yomichan to create these cards.</p> <p>Click here see how to setup Yomichan!</p>"},{"location":"setupeverythingelse/","title":"Setup: Everything Else","text":""},{"location":"setupeverythingelse/#overview","title":"Overview","text":"<p>This page is dedicated to providing resources on how to do the following:</p> <ol> <li>Getting the actual text to use Yomichan on.</li> <li>Getting the pictures and/or sentence audio from the media.</li> </ol> <p>There are plenty of well established resources out there on how to do just that, ranging from software to written &amp; video guides. Instead of repeating what others have already said, those programs and guides will be linked.</p> <p>If you are looking to setup jp-mining-note, see this page instead.</p> <p>Note</p> <p>If you already have a sentence mining workflow, you can likely skip to this section.</p>"},{"location":"setupeverythingelse/#troubleshooting-support","title":"Troubleshooting &amp; Support","text":"<p>If you are having troubles with any of the guides or programs below, I unfortunately will not be able to provide very detailed support.</p> <p>Instead, I would recommend that you contact the creators of the guides / programs, or the communities surrounding said guides / programs.</p> <p>Additionally, the guides listed here do not use JPMN, and instead link to other note types. This shouldn't be an issue as long as you change the appropriate the field names.</p>"},{"location":"setupeverythingelse/#getting-the-text-to-create-the-cards","title":"Getting the Text to Create the Cards","text":"<p>I use a texthooker setup, which is able to extract subtitles or text into the browser. Once the text is on the browser, you can use Yomichan to select the word and create the Anki card (by clicking on the green plus button).</p> <p>The standard texthooker setup works for most games, and any show with subtitle files.</p>"},{"location":"setupeverythingelse/#texthooker-websocket-based","title":"Texthooker: Websocket based","text":"<p>These pages display the hooked content, where the hooked content is communicated via Websockets. Websocket based texthookers are better than the classic clipboard-based texthookers in almost every aspect:</p> <ul> <li>They are generally faster and more reliable.</li> <li>They do not flood your clipboard.</li> <li>They do not require an extension that constantly polls the clipboard.</li> </ul> <p>However, it requires more specialized coordination between programs.</p> Resources (click here) <ul> <li> <p>Renji's Texthooker Page (recommended)</p> <ul> <li>I use these settings to make the text more compressed.</li> <li>This texthooker page comes with built in support for both websockets and     clipboard inserter plugins.</li> </ul> </li> <li> <p>exSTATic (recommended for stats lovers)</p> <ul> <li>Its primary use is for automatic stats collection and visualizing said statistics.</li> <li>Integrates seamlessly with many workflows.</li> <li>Uses a custom texthooker page, which connects with Textractor with its own custom extension.</li> <li>A video installation guide is available on the project's README page.</li> </ul> </li> </ul> <p>Supported Workflows:</p> <ul> <li>Textractor with textractor-websocket or TextractorSender</li> <li>mpv with mpv_websocket</li> </ul> Legacy Resources (click here) <p>These resources are considered legacy, and I highly recommend using the standard resources above in favor of these.</p> <ul> <li> <p>Marv's Websocket Userscript</p> <ul> <li>A more featureful version of the patch below.</li> <li>Written for Anacreon's texthooker page.</li> </ul> </li> <li> <p>Zetta's Custom Patch</p> <ul> <li>Patch Instructions for existing clipboard-based texthookers.</li> <li>This patch is intended to be used in conjunction with     this Textractor extension.</li> <li>This patch was written for Anacreon's texthooker page.     However, it will likely work for most other texthooker pages.</li> </ul> Instructions to use the patch (click here) <p>Warning</p> <p>This is a monkey patch, even according to the author. Now that better alternatives have came out (see above), I recommend to use said alternatives.</p> <ol> <li>Download your favorite texthooker page into a raw html file.</li> <li>Copy/paste the code below to the very end of the raw html file.</li> <li>If you are currently viewing the page, refresh.</li> </ol> <p></p><pre><code>&lt;script&gt;\nlet socket = null;\nlet wsStatusElem = null;\nconst createStatusElem = () =&gt; {\nwsStatusElem = document.createElement(\"span\")\nlet node = document.getElementById('menu').firstChild\nwsStatusElem.setAttribute(\"class\", \"menuitem\")\nwsStatusElem.addEventListener('click', (e) =&gt; {\nif(wsStatusElem.innerText == \"Reconnect\") {\nconnect()\n}\n})\nnode.insertBefore(wsStatusElem, node.firstChild)\n}\nconst updateStatus = (connected) =&gt; {\nif(wsStatusElem === null) { createStatusElem() }\nwsStatusElem.innerText = connected ? \"Connected\" : \"Reconnect\"\nwsStatusElem.style.cssText = \"margin-right: 1.5em; display: inline-block;\"\nwsStatusElem.style.cssText += connected ? \"color:rgb(24, 255, 24);\" : \"color:rgb(255, 24, 24);\"\n}\nconst connect = () =&gt; {\nsocket = new WebSocket(\"ws://localhost:6677/\")\nsocket.onopen = (e) =&gt; { updateStatus(true) }\nsocket.onclose = (e) =&gt; { updateStatus(false) }\nsocket.onerror = (e) =&gt; { updateStatus(false); console.log(`[error] ${e.message}`) }\nsocket.onmessage = (e) =&gt; {\nlet container = document.getElementById('textlog')\nlet textNode = document.createElement(\"p\")\ntextNode.innerText = e.data\ndocument.body.insertBefore(textNode, null)\n}\n}\nconnect()\n&lt;/script&gt;\n</code></pre>  (Original discord message, on TMW server. Thanks Zetta#3033 for the code.)  </li> </ul>"},{"location":"setupeverythingelse/#texthooker-clipboard-based","title":"Texthooker: Clipboard based","text":"<p>These pages display the hooked content, where the hooked content is communicated via automated clipboard (copy/paste) tools. Most classic setups documented are for clipboard based texthooker pages.</p> Resources (click here) <ul> <li>Original Clipboard Inserter (Extension) (Chromium-based browsers)<ul> <li>WARNING: No longer works on Firefox     as of Firefox version 107.0. Use the extension below if you are using Firefox.</li> </ul> </li> <li>Lap Clipboard Inserter (Extension) (Firefox)<ul> <li>Updated version of the above.</li> <li>Works on Firefox, but Chrome (manifest 3) support is currently not supported.     Use the first extension if you are using a chromium based browser.</li> </ul> </li> <li>Renji's Texthooker Page (recommended)<ul> <li>Open source and more featureful alternative to the more popular Anacreon's texthooker page.</li> <li>I use these settings to make the text more compressed.</li> </ul> </li> <li>Anacreon's Texthooker Page</li> <li>TMW's Texthooker Page</li> </ul> Guides (click here) <ul> <li>stegatxins0's mining guide: Texthooker (recommended)</li> <li>TMW: Texthooker &amp; Visual Novels</li> <li>Lazy Guide: Texthooker</li> <li>Anime Cards: Texthooker &amp; Visual Novels</li> </ul>"},{"location":"setupeverythingelse/#game-like-content-getting-text","title":"Game-Like Content: Getting Text","text":"<p>The following are primarily for text-heavy games, such as visual novels.</p> Resources (click here) <ul> <li>Textractor (recommended)</li> <li>agent<ul> <li>This is a good fallback for when Textractor doesn't work</li> </ul> </li> </ul> Guides (click here) <ul> <li>TMW: Installing Visual Novels</li> <li>TMW: Texthooker &amp; Visual Novels</li> <li>Anime Cards: Texthooker &amp; Visual Novels (slightly outdated compared to others)</li> <li>Lazy Guide: Playing Visual Novels on Mobile</li> <li>Playing Emulated DS, 3DS, PSP and Gameboy Advanced games on Android devices<ul> <li>Contact info: <code>OrangeLightX#2907</code>      on the Refold (JP) Discord server or TMW server</li> </ul> </li> <li>See this section     to get sentence audio and images</li> </ul>"},{"location":"setupeverythingelse/#video-content-getting-text-sentence-audio-picture","title":"Video Content: Getting Text, Sentence Audio, Picture","text":"<p>Video content includes streamed content (Youtube, Netflix, etc.) and locally downloaded files.</p> Resources (click here) <ul> <li>mpvacious (recommended for downloaded videos / if you are using mpv)<ul> <li>Add-on for MPV, a cross platform media player. Personally tested.</li> <li>Basically universal codec support since it uses mpv.</li> <li>This addon has capabilities to     extract the video clip itself     as the form of a gif (autoplayable webp).</li> </ul> </li> <li>asbplayer (recommended for streamed sites)<ul> <li>Cross platform (chromium) browser video player. Personally tested.</li> <li>Codec support is based on the browser used.</li> <li>Works on video streaming sites, as well as downloaded videos.</li> </ul> </li> <li>Animebook<ul> <li>Cross platform (chromium) browser video player.</li> <li>Codec support is based on the browser used.</li> </ul> </li> <li>All of the above require subtitle files to function.     See     here     and/or     here     for some websites where you can get subtitles from.</li> <li>One challenge for video content is that subtitles are usually not aligned properly     if the subtitles are downloaded separately from the video.     I've always used a combination of     mkvextract     (to extract the subtitle file from the <code>.mkv</code> file)     and     alass     (to align the native subtitles with reference subtitles, usually in a different language)     to get the job done.     If you want more options, see     this page.</li> </ul> <p>Other:</p> <ul> <li>jidoujisho<ul> <li>Android e-book reader and media player. Advertises itself as an all-in-one app.</li> <li>See this note on jidoujisho.</li> </ul> </li> <li>Immersive<ul> <li>Add-on for MPV. Alternative to mpvacious.</li> <li>WARNING: This is potentially outdated and/or abandoned.     The most recent commit as of writing (2022/10/19) was done in 2022/01/27.     This is listed here for completeness only.</li> </ul> </li> </ul> Guides (click here) <ul> <li>Shiki's mining workflow (asbplayer)<ul> <li>Contact info: <code>boundary-of-emptiness#3065</code>      on the Refold (JP) Discord server</li> </ul> </li> <li>Tigy01's mining workflow (asbplayer)<ul> <li>Contact info: <code>Tigy01#1231</code>      on the Refold (JP) Discord server</li> </ul> </li> <li>Cade's sentence mining guide (animebook)<ul> <li>Contact info: <code>eminent#8189</code>      on Perdition's server or TMW server</li> </ul> </li> </ul>"},{"location":"setupeverythingelse/#manga-getting-text","title":"Manga: Getting Text","text":"mokuro (recommended) <p>mokuro pre-processes manga, so you don't have to run any OCR program afterwards.</p> <p>Guides:</p> <ul> <li>Lazy guide (recommended)<ul> <li>(For Windows users) Make sure to check the \"Add Python to Path\" on install.</li> <li>If you are using online processing (google colab), be sure that you are   using the gpu   to speed up the process.</li> </ul> </li> <li>Josuke's mokuro setup guide<ul> <li>Contact info: <code>Josuke#7212</code>      on the Refold (JP) Discord server</li> <li>This doesn't include instructions on how to process online (whereas the Lazy guide does)</li> </ul> </li> </ul> <p>Other Resources:</p> <ul> <li>If you are on Android, this can be paired with     Anki Connect for Android     to create Anki cards.</li> <li>WeebAlt's RemoteMokuro setup<ul> <li>This includes setup instructions on using Mokuro remotely (from google drive, i.e. no disk storage)</li> </ul> </li> </ul> <p>If any error occurs, check the following:</p> <ul> <li> <p>Check your Python version (<code>python --version</code>, or <code>python3 --version</code>).     Python 3.10 is not supported yet.</p> <p>If your Python version is too old, I recommend using pyenv (for Linux users). Linux users can use the automatic installer. For Windows users, it should be sufficient to uninstall <code>mokuro</code>, install a newer version of Python, and then re-install mokuro with the newer version.</p> </li> <li> <p>Make sure your directory is a string and not a number. For example, <code>mokuro ./01</code> on unix, and <code>mokuro .\\01</code> on Windows.</p> </li> </ul> Manga OCR <p>Manga OCR allows you to automatically OCR any image. As the name suggests, this works best on manga.</p> <p>Guides:</p> <ul> <li>Lazy guide (Windows)</li> </ul>"},{"location":"setupeverythingelse/#books-epubs-htmlz-pdf","title":"Books (EPUBs, HTMLZ, PDF)","text":"<p>As long as you're not using a scan (image-based), the text should already be available. Below will list a few ways to view these files in a browser to Yomichan.</p> Resources (click here) <ul> <li>\u30c3\u30c4 Ebook Reader (EPUBs, HTMLZ) (recommended)</li> <li>Mozilla's PDF Viewer (PDF)</li> </ul> <p>Other:</p> <ul> <li>jidoujisho<ul> <li>Android e-book reader and media player. Advertises itself as an all-in-one app.</li> <li>Uses \u30c3\u30c4 Ebook Reader as its backend.</li> <li>See this note on jidoujisho.</li> </ul> </li> </ul> Guides (click here) <ul> <li>Like with Mokuro,     if you are on Android, this can be paired with     Anki Connect for Android     to create Anki cards.</li> </ul>"},{"location":"setupeverythingelse/#getting-images-sentence-audio-manually","title":"Getting Images &amp; Sentence Audio Manually","text":"<p>Sometimes, there is no easy way to get the image and sentence audio other than with a screen recorder. The primary example for this is game-like content.</p> <p>Here are the two popular approaches to automatically adding the image and sentence audio:</p> ShareX (Windows) <p>ShareX</p> <ul> <li>Windows media recorder which can both take screenshots and record audio. Personally tested.</li> </ul> <p>Guides:</p> <ul> <li>stegatxins0's mining guide: ShareX (recommended)<ul> <li>The scripts written here     works by default with this note.     These scripts are meant used with stegatxins0's setup.</li> </ul> </li> <li>Xeliu's mining guide: ShareX<ul> <li>ShareX setup is based off of stegatxins0's setup</li> </ul> </li> <li>Anime Cards: Handling Media<ul> <li>Not recommended: introduces additional steps compared to the above two guides</li> </ul> </li> </ul> ames (Linux) <p>ames</p> <ul> <li>ShareX alternative for Linux. Personally tested.</li> <li>Primarily used to automate audio and picture extraction to the most recently added Anki card.</li> </ul>"},{"location":"setupeverythingelse/#resource-lists","title":"Resource Lists","text":"<p>Other websites have significantly larger resource lists that may prove useful for you.</p> Resource Lists (click here) <ul> <li>TMW</li> <li>Tatsumoto</li> <li>itazuraneko</li> <li>kuzuri</li> <li>Refold (JP)     (Old Google doc)     (Mirror)</li> <li>Refold (General) (Mirror)</li> <li>IgrecL/japanese</li> <li>donkuri/jp-resources</li> </ul>"},{"location":"setupeverythingelse/#notes-on-various-programs","title":"Notes on Various Programs","text":""},{"location":"setupeverythingelse/#mpvacious","title":"mpvacious","text":"<ul> <li> <p>You will have to change the configuration     in order for mpvacious to work with JPMN.</p> Click here to see some basic config changes to get it working with JPMN. <pre><code># Model names are listed in `Tools -&gt; Manage note types` menu in Anki.\nmodel_name=JP Mining Note\n# Field names as they appear in the selected note type.\n# If you set `audio_field` or `image_field` empty,\n# the corresponding media file will not be created.\nsentence_field=Sentence\n#secondary_field=SentEng  # Not used by the note. This is ignored entirely.\naudio_field=SentenceAudio\nimage_field=Picture\n</code></pre> <p>You may want to increase the picture and audio quality, as it's extremely low by default. I personally use the following:</p> <pre><code># Sane values are 16k-32k for opus, 64k-128k for mp3.\naudio_bitrate=32k\n# Quality of produced image files. 0 = lowest, 100=highest.\n#snapshot_quality=15\nsnapshot_quality=50\n# Image dimensions\n# If either (but not both) of the width or height parameters is -2,\n# the value will be calculated preserving the aspect-ratio.\n#snapshot_width=-2\n#snapshot_height=200\nsnapshot_width=800\nsnapshot_height=-2\n</code></pre> <p>Info</p> <p>When creating the config file, ensure that the config file is placed in the correct folder. This <code>script-opts</code> folder does not exist by default. You will likely have to create the folder.</p> <p>Additionally, be sure to restart MPV after changing the config to apply the changes.</p> </li> <li> <p>A common issue with mpvacious is that     the <code>SentenceReading</code> field may differ from the <code>Sentence</code> field,     say, if you export multiple subtitles into one card.     See the     FAQ     on how to fix it.</p> </li> </ul>"},{"location":"setupeverythingelse/#asbplayer","title":"asbplayer","text":"<ul> <li> <p>To use asbplayer, add the card with Yomichan, and then update the created note with asbplayer.     I recommend filling out the following fields as follows:</p> asbplayer fields (click here) asbplayer field JPMN field Sentence Field <code>Sentence</code> Definition Field Word Field Audio Field <code>SentenceAudio</code> Image Field <code>Picture</code> Source Field <code>AdditionalNotes</code> URL Field <code>AdditionalNotes</code> <p>Note</p> <p>Chances are that you are using subtitles. However, if you are not using subtitles, it is fine to keep the Sentence Field empty.</p> </li> <li> <p>Any version of asbplayer released after     2023/01/16 (version 0.25.0 or higher)     will now preserve the bolded word within the sentence!     However, asbplayer shares the same common issue with mpvacious, where     the <code>SentenceReading</code> field may differ from the <code>Sentence</code> field.     See the     FAQ     on how to fix it.</p> </li> </ul>"},{"location":"setupeverythingelse/#jidoujisho","title":"jidoujisho","text":"<p>I'm not very sure how the Anki card generation works for this app, since this app does not use Yomichan.</p> <p>The custom handlebars used by JPMN does a lot of heavy lifting and has plenty of customizations specifically to work JPMN. Unfortunately, this handlebars is not very portable between programs.</p> <p>If you want to use this app, I leave it to the user to figure out the specifics of creating the cards.</p>"},{"location":"setupother/","title":"Setup: Other","text":""},{"location":"setupother/#overview","title":"Overview","text":"<p>This page contains all setup steps that are purely optional, as well as random miscellaneous info. It is expected that you have Anki and Yomichan already setup, and the note is already working.</p>"},{"location":"setupother/#yomichan-appearance","title":"Yomichan Appearance","text":"<p>If you want to follow my exact Yomichan popup appearance:</p> <ul> <li>Go to (Yomichan settings) \u2192  <code>Popup Appearance</code>.</li> <li>Set <code>Compact glossaries</code> to ON.</li> <li>Set <code>Compact tags</code> to OFF.</li> </ul> <p>There are also plenty of css customizations for Yomichan listed out in the JP Resources page.</p>"},{"location":"setupother/#jmdict","title":"JMdict","text":"<p>If you are planning on using the JMdict dictionary, the ones provided from most sources (TMW's google drive, Matt's video on Yomichan, and Yomichan's main github page) are all somewhat outdated, which usually means less accurate definitions and less coverage.</p> <p>To get the most recent version of JMdict, download it from the official site (download <code>JMdict_e.gz</code>) and use yomichan-import to get the latest JMdict version available.</p> <p>If you don't want to compile it from source, I provide a download link here, which should only be a few months stale at most.</p>"},{"location":"setupother/#other-dictionaries","title":"Other dictionaries","text":"<ul> <li> <p>JMdict Surface Forms</p> <p>This is a dictionary placed in the <code>UtilityDictionaries</code> field by default. Although I don't use it when studying Anki, it helps to use this when creating Anki notes for monolingual definitions. See this for more information.</p> </li> <li> <p>I highly recommend getting some pitch accent dictionaries and frequency lists     if you have not already, as these will be shown and used in the note type.     See TheMoeWay's folder to browse through some examples.</p> </li> <li> <p>JPDB frequency list</p> <p>I personally recommend using the JPDB frequency list as one of your frequency lists, because it has high word coverage, and seems very high quality (particularly for fiction content).</p> </li> <li> <p>JPDB Kanji dictionary</p> <p>This dictionary is extremely useful to see the most popular words where a particular kanji is used. I like using this to see how rare a kanji is at a glance.</p> <p>This synergizes well with kanji frequency dictionaries.</p> </li> </ul>"},{"location":"setupother/#local-audio-server-for-yomichan","title":"Local Audio Server for Yomichan","text":"<p>See here if you want to be able to create Anki cards nearly instanteously, and fetch audio without a working internet connection.</p> <p>I personally recommend using this setup if you can.</p>"},{"location":"setupother/#various-anki-resources","title":"Various Anki Resources","text":"<p>This documentation is primarily focused on how to use this note, rather than Anki itself, so little will be written about the details of Anki here.</p> <p>Instead, here is a small list of resources on setting up and using Anki itself:</p> <ul> <li>Cade's blog: Optimizing Anki for Language Learning (recommended)</li> <li>Tatsumoto's blog: Setting up Anki</li> <li>Lazy Guide: Anki<ul> <li>Showcases an example note type, addons used and tips</li> </ul> </li> <li>Refold's Recommended Anki Setup</li> <li>FSRS4Anki</li> <li>Twenty Rules<ul> <li>These are general rules for learning (with an SRS), written for SuperMemo. Some rules are not applicable for specifically language learning, but I believe the first 4 rules are very important.</li> </ul> </li> <li>Awesome Anki<ul> <li>\"A curated list of awesome Anki add-ons, decks and resources.\"</li> </ul> </li> </ul> <p>Note that every website here has different recommendations. You will likely have to play with the settings and actually use Anki for an extended period of time to find the most optimal setup for yourself.</p>"},{"location":"setupother/#other-anki-add-ons","title":"Other Anki Add-ons","text":"<p>If you're interested in copying my setup, I provide the list of addons I personally use here. I also provide a small list of other popular add-ons that I don't use, but may be useful for you.</p> List of Add-ons I use (click here) <p>Documented above (I use all required and optional addons for the note type):</p> <ul> <li>Anki-Connect</li> <li>CSS Injector</li> <li>AJT Japanese</li> </ul> <p>Algorithm Changing:</p> <ul> <li>FSRS4Anki Helper</li> </ul> <p>Stats:</p> <ul> <li>Learning Step and Review Interval Retention</li> <li>True Retention by Card Maturity Simplfied</li> <li>Kanji Grid</li> </ul> <p>Usability:</p> <ul> <li>Adjust Sound Volume<ul> <li>Used to normalize volume automatically (so adjusting the volume of recorded files is not necessary)</li> </ul> </li> <li>Advanced Browser<ul> <li>Used for sorting notes by frequency</li> </ul> </li> <li>AJT Flexible Grading<ul> <li>I use this to change Anki to pass/fail</li> <li>If you are using Anki dark mode, I recommend these colors (change in the config):<ul> <li><code>\"again\": \"#ff8c74\"</code></li> <li><code>\"good\": \"#9cff98\"</code></li> </ul> </li> </ul> </li> <li>Paste Images As WebP</li> </ul> <p>Other:</p> <ul> <li>AnkiWebView Inspector</li> <li>Local Audio Server for Yomichan</li> <li>Yomichan Forvo Server</li> </ul> Useful Add-ons that I don't use (click here) <ul> <li>AJT Mortician</li> <li>Edit Field During Review Cloze</li> <li>Generate Batch Audio</li> <li>Review Heatmap</li> <li>Straight Reward</li> </ul>"},{"location":"setupother/#separate-pitch-accent-deck","title":"Separate Pitch Accent Deck","text":"<p>If you want card types to go to a different deck by default, you can change it by doing the following:</p> <p>Instructions</p> <p><code>Browse</code> (top middle)  \u2192  <code>Cards...</code> (around the middle of the screen, right above first field of the note. This is NOT the <code>Cards</code> dropdown menu at the top right corner)  \u2192  <code>Card Type</code> dropdown (top of the screen)  \u2192  (choose pitch accent card type)  \u2192  <code>Options</code> (the first <code>Options</code> you see at the very top of the screen)  \u2192  <code>Deck Override...</code></p>"},{"location":"setupyomichan/","title":"Setup: Yomichan","text":""},{"location":"setupyomichan/#overview","title":"Overview","text":"<p>Yomichan is the main program that will create the cards. You can download Yomichan as a Firefox extension or under the Chrome web store.</p> <p>This section will go over the minimal Yomichan setup to work with this card type.</p> <p>If you have never used Yomichan before, please see this page first to get it working.</p>"},{"location":"setupyomichan/#preliminary-steps","title":"Preliminary Steps","text":"<p>If you have used Yomichan before, please make a backup of your settings (just in case).</p> <p>Additionally, if you downloaded Yomichan from a file, try updating that as well. Most users should have installed it from their browser's extension page, in which case nothing has to be done.</p> <p>Warning for Firefox Users</p> <p>There appears to be an issue where the default version for Yomichan on Firefox is three years old. If you are using Firefox, ensure that your Yomichan version is indeed the latest version, by clicking on the Yomichan icon and clicking on the question mark. If it isn't, you will have to download it manually.</p> <p>You may also have to download the Firefox Developer edition, and set <code>xpinstall.signatures.required</code> to <code>false</code>.</p>"},{"location":"setupyomichan/#yomichan-fields","title":"Yomichan Fields","text":"<p>To edit the fields that Yomichan will automatically fill out, do the following:</p> <p></p> <ol> <li>Navigate to Yomichan Settings.</li> <li>Go to the <code>Anki</code> section.</li> <li>Select <code>Anki card format...</code>.</li> <li>Set \"Model\" as <code>JP Mining Note</code>.</li> <li>Copy and paste the following values into the fields    (the custom markers won't be available in the dropdown arrow):</li> </ol> Click here to see the fields to copy and paste. Anki Fields Yomichan Format Notes Key <code>{expression}</code> Word <code>{expression}</code> WordReading <code>{furigana-plain}</code> PAOverride PAOverrideText New in version <code>0.11.0.0</code> AJTWordPitch PrimaryDefinition <code>{jpmn-primary-definition}</code> PrimaryDefinitionPicture New in version <code>0.11.0.0</code> Sentence <code>{cloze-prefix}&lt;b&gt;{cloze-body}&lt;/b&gt;{cloze-suffix}</code> SentenceReading AltDisplay AltDisplayPASentenceCard AdditionalNotes *IsSentenceCard *IsClickCard *IsHoverCard *IsTargetedSentenceCard *PAShowInfo *PATestOnlyWord *PADoNotTest *PASeparateWordCard *PASeparateSentenceCard *SeparateClozeDeletionCard Hint HintNotHidden Picture WordAudio <code>{audio}</code> SentenceAudio PAGraphs <code>{jpmn-pitch-accent-graphs}</code> PAPositions <code>{jpmn-pitch-accent-positions}</code> PASilence <code>[sound:_silence.wav]</code> WordReadingHiragana <code>{jpmn-word-reading-hiragana}</code> New in version <code>0.11.0.0</code> FrequenciesStylized <code>{jpmn-frequencies}</code> FrequencySort <code>{jpmn-frequency-sort}</code> SecondaryDefinition <code>{jpmn-secondary-definition}</code> ExtraDefinitions <code>{jpmn-extra-definitions}</code> UtilityDictionaries <code>{jpmn-utility-dictionaries}</code> Comment <p>The above fields will create, by default, a basic vocab card in bilingual format, with all other definitions in collapsable fields.</p> <p>Note</p> <p>Anything field marked with <code>*</code> are binary fields, and should be configured to each user's personal preferences.</p> <p>To change the default value of any of the fields, simply fill the field in within the aforementioned <code>Anki card format...</code> section.</p> <p>For example, if you want the card to be a sentence card by default, fill the <code>IsSentenceCard</code> field here.</p> <p>The custom markers like <code>{jpmn-primary-definition}</code> is not provided by Yomichan by default. See the section below to make these markers usable.</p>"},{"location":"setupyomichan/#yomichan-templates","title":"Yomichan Templates","text":"<p>Yomichan supports user inserted template code that allows the automatic separation of bilingual and monolingual dictionary definitions, custom stylization, etc. This note type makes heavy use of these custom templates.</p> <p>To make the new markers usable, do the following:</p> <p></p> <ol> <li>Navigate to Yomichan Settings.</li> <li>Make sure that advanced settings are turned on (bottom left corner).</li> <li>Go to the <code>Anki</code> section</li> <li>Select <code>Configure Anki card templates...</code></li> <li>If you have existing template code already, I highly recommend    resetting the templates (bottom right corner, red button)    unless you know exactly what you are doing.</li> </ol> <p>After resetting the templates, without removing any of the existing template code, add the following template code as follows:</p> <ol> <li> <p>Copy and paste the code below to the top of the default Yomichan template code:</p> Click here to show the template code to copy. <pre><code>{{~!                                                                      ~}}\n{{~! ==================== jp-mining-note handlebars ===================== ~}}\n{{~!                               v1.0.1                                 ~}}\n{{~!                                                                      ~}}\n{{~!       https://aquafina-water-bottle.github.io/jp-mining-note/        ~}}\n{{~!       -------------------------------------------------------        ~}}\n{{~! ================ Dictionary Categorization Options ================= ~}}\n{{~! valid values: \"bilingual\", \"monolingual\" ~}}\n{{~set \"opt-first-definition-type\" \"bilingual\" ~}}\n{{~! matches most JMdict dictionaries, \u65b0\u548c\u82f1 and \u65e5\u672c\u8a9e\u6587\u6cd5\u8f9e\u5178(\u5168\u96c6)~}}\n{{~#set \"bilingual-dict-regex\"~}} ^(([Jj][Mm][Dd]ict)(?! Surface Forms)(.*)|\u65b0\u548c\u82f1|\u65e5\u672c\u8a9e\u6587\u6cd5\u8f9e\u5178\\(\u5168\u96c6\\)|ADD_BILINGUAL_DICTIONARIES_HERE)$ {{~/set~}}\n{{~#set \"utility-dict-regex\"~}} ^(NHK\u65e5\u672c\u8a9e\u767a\u97f3\u30a2\u30af\u30bb\u30f3\u30c8\u65b0\u8f9e\u5178|\u30b7\u30f3\u30fb\u6f22\u5b57\u9063\u3044\u53c2\u8003|[Jj][Mm][Dd]ict( Surface)? Forms|JMedict)$ {{~/set~}}\n{{~#set \"ignored-dict-regex\"~}} ^(ADD_IGNORED_DICTIONARIES_HERE)$ {{~/set~}}\n{{~! ====================== Selected Text Options ======================= ~}}\n{{set \"opt-selection-text-enabled\"               false}}\n{{set \"opt-selection-text-dictionary\"            true}}\n{{set \"opt-selection-text-glossary\"              true}}\n{{set \"opt-selection-text-glossary-attempt-bold\" true}}\n{{~! ==================== Frequency Sorting Options ===================== ~}}\n{{~! See here for the official documentation on how these options work:\nhttps://github.com/MarvNC/JP-Resources#freq-settings ~}}\n{{~#set \"opt-ignored-freq-dict-regex\"~}} ^(JLPT_Level)$ {{~/set~}}\n{{~#set \"opt-ignored-freq-value-regex\"~}} \u274c {{~/set~}}\n{{~#set \"opt-keep-freqs-past-first-regex\"~}} ^()$ {{~/set~}}\n{{~set \"opt-no-freq-default-value\" 9999999 ~}}\n{{~set \"opt-freq-sorting-method\" \"harmonic\" ~}} {{~! \"min\", \"first\", \"avg\", \"harmonic\" ~}}\n{{~set \"opt-grammar-override\" true ~}}\n{{~set \"opt-grammar-override-value\" 0 ~}}\n{{~#set \"opt-grammar-override-dict-regex\"~}} ^(\u65e5\u672c\u8a9e\u6587\u6cd5\u8f9e\u5178\\(\u5168\u96c6\\)|\u6bce\u65e5\u306e\u3093\u3073\u308a\u65e5\u672c\u8a9e\u6559\u5e2b|JLPT\u6587\u6cd5\u89e3\u8aac\u307e\u3068\u3081|\u3069\u3093\u306a\u3068\u304d\u3069\u3046\u4f7f\u3046 \u65e5\u672c\u8a9e\u8868\u73fe\u6587\u578b\u8f9e\u5178|\u7d75\u3067\u308f\u304b\u308b\u65e5\u672c\u8a9e)$ {{~/set~}}\n{{~! ============== Dictionary First Line Removal Options =============== ~}}\n{{~set \"opt-wrap-first-line-spans\" true ~}}\n{{~! valid values: \"except\", \"only\" ~}}\n{{~set \"opt-first-line-regex-mode\" \"except\"~}}\n{{~#set \"opt-first-line-dicts-regex\"~}} ^(JMdict.*|Nico/Pixiv)$ {{~/set~}}\n{{~! ========================== Other Options =========================== ~}}\n{{~set \"opt-primary-def-one-dict-entry-only\" false ~}}\n{{~set \"opt-jmdict-list-format\" false ~}}\n{{~! ======================== Plaintext Options ========================= ~}}\n{{~!\nWARNING: I recommend not changing these options if you are using the\njp-mining-note template. These options will change the general layout\nof the HTML, which will prevent certain features or stylizations\nfrom properly working. (If you aren't using jp-mining-note, please feel\nfree to change these options!)\nInstead of using these options, see here:\nhttps://aquafina-water-bottle.github.io/jp-mining-note/definitions/\nThese hide specific elements using CSS instead of modifying the raw HTML\nstructure behind it.\n~}}\n{{~set \"opt__plaintext__enabled\"                     false ~}}\n{{~set \"opt__plaintext__one-dict-entry-only-no-list\" false ~}}\n{{~set \"opt__plaintext__remove-dictionary-tag\"       false ~}}\n{{~set \"opt__plaintext__remove-first-line-enabled\"   false ~}}\n{{~! ============== ORIGINAL YOMICHAN TEMPLATE CODE BELOW ============== ~}}\n</code></pre> </li> <li> <p>Copy and paste the code below to the bottom of the default Yomichan template code:</p> Click here to show the template code to copy. <pre><code>{{~! ============== ORIGINAL YOMICHAN TEMPLATE CODE ABOVE =============== ~}}\n{{~!                               v1.0.1                                 ~}}\n{{~!\n==================\nhelper functions\n==================\n~}}\n{{#*inline \"s\"}}{{/inline}}\n{{~! categorizes into 4 types: \"ignored\", \"bilingual\", \"utility\", or \"monolingual\" ~}}\n{{~#*inline \"jpmn-get-dict-type\"~}}\n{{~#scope~}}\n{{~#set \"rx-match-ignored\" ~}}\n{{~#regexMatch (get \"ignored-dict-regex\") \"gu\"~}}{{dictionaryName}}{{~/regexMatch~}}\n{{/set~}}\n{{~#set \"rx-match-bilingual\" ~}}\n{{~#regexMatch (get \"bilingual-dict-regex\") \"gu\"~}}{{dictionaryName}}{{~/regexMatch~}}\n{{/set~}}\n{{~#set \"rx-match-utility\" ~}}\n{{~#regexMatch (get \"utility-dict-regex\") \"gu\"~}}{{dictionaryName}}{{~/regexMatch~}}\n{{/set~}}\n{{~#if (op \"!==\" (get \"rx-match-ignored\") \"\")~}}\n            ignored\n        {{~else if (op \"!==\" (get \"rx-match-bilingual\") \"\")~}}\n            bilingual\n        {{~else if (op \"!==\" (get \"rx-match-utility\") \"\")~}}\n            utility\n        {{~else~}}\n            {{~! assumed that anything else is a monolingual dictionary ~}}\n            monolingual\n        {{~/if~}}\n    {{~/scope~}}\n{{~/inline~}}\n{{~! returns \"\" if selection text is disabled, or if none existed in the first place ~}}\n{{~#*inline \"_jpmn-selection-text\"~}}\n    {{~! text-mode != \"\" and text-mode &gt; 0 ~}}\n    {{~#if (op \"===\" (get \"opt-selection-text-enabled\") true)~}}\n        {{~! removes leading and trailing whitespace ~}}\n        {{~#regexReplace \"^\\s+|\\s+$\" \"\" \"g\"~}}\n            {{~#getMedia \"selectionText\"}}{{/getMedia~}}\n        {{~/regexReplace~}}\n    {{~/if~}}\n{{~/inline~}}\n{{~! checks that the selection text is indeed a dictionary (returns the text if true, nothing if false) ~}}\n{{~#*inline \"_jpmn-check-dictionary\"~}}\n    {{~#scope~}}\n        {{~#set \"selection-is-dictionary\" false}}{{/set~}}\n        {{~#each definition.definitions~}}\n            {{~#if (op \"===\" (get \"selection\") dictionary)~}}\n                {{~#set \"selection-is-dictionary\" true ~}}{{~/set~}}\n            {{~/if~}}\n        {{~/each~}}\n        {{~#if (op \"===\" (get \"selection-is-dictionary\") true)~}}\n            {{~get \"selection\"~}}\n        {{~else~}}\n            {{~! null ~}}\n        {{~/if~}}\n    {{~/scope~}}\n{{~/inline~}}\n{{~! gives the raw glossary as the search string (for searching to see if the selected text\nis a part of a dictionary) ~}}\n{{#*inline \"_jpmn-glossary-single-search\"}}\n    {{~#scope~}}\n        {{~#each glossary}}{{#formatGlossary ../dictionary}}{{{.}}}{{/formatGlossary}}{{#unless @last}} | {{/unless}}{{/each~}}\n    {{~/scope~}}\n{{/inline}}\n{{~! escape a regex string: https://stackoverflow.com/a/6969486~}}\n{{~! /[.*+?^${}()|[\\]\\\\]/g, '\\\\$&amp;' ~}}\n{{~! escapes the `regexString` regex to allow it to be used like a normal search in a string ~}}\n{{#*inline \"_jpmn-escape-regex\"}}\n    {{~#regexReplace \"[.*+?^${}()|[\\]\\\\]\" \"\\$&amp;\" \"g\"~}}{{~regexString~}}{{~/regexReplace~}}\n{{/inline}}\n{{~#*inline \"_jpmn-get-dict-if-glossary-selected\"~}}\n    {{~#scope~}}\n        {{~#set \"result-dictionary\" null}}{{/set~}}\n        {{~#set \"search-selection\"}}{{~#regexReplace \"[.*+?^${}()|[\\]\\\\]\" \"\\$&amp;\" \"g\"~}}{{~&gt; _jpmn-selection-text ~}}{{~/regexReplace~}}{{/set~}}\n        {{~#each definition.definitions~}}\n            {{~#set \"search-def\"}}{{~&gt; _jpmn-glossary-single-search . brief=../brief noDictionaryTag=../noDictionaryTag ~}}{{/set~}}\n            {{~set \"search-regex-match\" (regexMatch (get \"search-selection\") \"gu\" (get \"search-def\"))}}\n            {{~#if (op \"&amp;&amp;\"\n                (op \"===\" (get \"result-dictionary\") null)\n                (op \"!==\" (get \"search-regex-match\") \"\")\n            )~}}\n                {{~#set \"result-dictionary\" dictionary}}{{/set~}}\n            {{~/if~}}\n        {{~/each~}}\n        {{~get \"result-dictionary\" ~}}\n    {{~/scope~}}\n{{~/inline~}}\n{{~!\n    searches dictionary, determined by `opt-first-definition-type`\n    - (opt-first-definition-type === bilingual) -&gt; bilingual dictionaries are searched first\n    - (opt-first-definition-type === monolingual) -&gt; monolingual dictionaries are searched first\n~}}\n{{~#*inline \"_jpmn-search-primary-definition-dict\"~}}\n    {{~#scope~}}\n        {{~#if (op \"===\" (get \"opt-first-definition-type\") \"bilingual\")~}}\n            {{~#set \"first-definition-search-type-1\" \"bilingual\"}}{{/set~}}\n            {{~#set \"first-definition-search-type-2\" \"monolingual\"}}{{/set~}}\n        {{~else~}}\n            {{~#set \"first-definition-search-type-1\" \"monolingual\"}}{{/set~}}\n            {{~#set \"first-definition-search-type-2\" \"bilingual\"}}{{/set~}}\n        {{~/if~}}\n        {{~! first-dictionary === null &lt;=&gt; no valid dictionary was found ~}}\n        {{~#set \"first-dictionary\" null}}{{/set~}}\n        {{~#each definition.definitions~}}\n            {{~#set \"test-dict-name\"}}{{~&gt; jpmn-get-dict-type . dictionaryName=dictionary ~}}{{/set~}}\n            {{~#if (op \"===\" (get \"test-dict-name\") (get \"first-definition-search-type-1\"))~}}\n                {{~#if (op \"===\" null (get \"first-dictionary\"))~}}\n                    {{~#set \"first-dictionary\" dictionary~}}{{~/set~}}\n                {{~/if~}}\n            {{~/if~}}\n        {{~/each~}}\n        {{~! uses other dictionary type, last resort ~}}\n        {{~#if (op \"===\" (get \"first-dictionary\") null)~}}\n            {{~#each definition.definitions~}}\n                {{~#set \"test-dict-name\"}}{{~&gt; jpmn-get-dict-type . dictionaryName=dictionary ~}}{{/set~}}\n                {{~#if (op \"===\" (get \"test-dict-name\") (get \"first-definition-search-type-2\"))~}}\n                    {{~#if (op \"===\" null (get \"first-dictionary\"))~}}\n                        {{~#set \"first-dictionary\" dictionary~}}{{~/set~}}\n                    {{~/if~}}\n                {{~/if~}}\n            {{~/each~}}\n        {{~/if~}}\n        {{~#get \"first-dictionary\"~}}{{~/get~}}\n    {{~/scope~}}\n{{~/inline~}}\n{{~!\n    if (selection-text exists):\n        if (selection-text is exactly a dictionary):\n            return dictionary\n        if (able to detect dictionary of which the selection-text is highlighting):\n            return dictionary\n        return null\n~}}\n{{~#*inline \"_jpmn-check-dictionary-and-glossary\"~}}\n    {{~#scope~}}\n        {{~#set \"result\" \"\"}}{{/set~}}\n        {{~! checks if the selected text matches a dictionary ~}}\n        {{~#if (op \"===\" (get \"opt-selection-text-dictionary\") true)~}}\n            {{~#set \"result\"}}{{~&gt; _jpmn-check-dictionary . ~}}{{/set~}}\n        {{~/if~}}\n        {{~! checks if the selected text matches a definition in a dictionary ~}}\n        {{~#if\n            (op \"&amp;&amp;\" (op \"===\" (get \"result\") \"\")\n                (op \"&amp;&amp;\"\n                    (op \"===\" (get \"opt-selection-text-glossary\") true)\n                    (op \"===\" (get \"opt-selection-text-glossary-attempt-bold\") true)\n                )\n            )\n        ~}}\n            {{~#set \"result\"}}{{~&gt; _jpmn-get-dict-if-glossary-selected . ~}}{{/set~}}\n        {{~/if~}}\n        {{~get \"result\" ~}}\n    {{~/scope~}}\n{{~/inline~}}\n{{~!\n    if (selection-text exists):\n        if (selection-text is exactly a dictionary):\n            return null\n        if (able to detect dictionary of which the selection-text is highlighting):\n            return \"uses-glossary\"\n        return null\n~}}\n{{~#*inline \"_jpmn-selection-uses-glossary\"~}}\n    {{~#scope~}}\n        {{~#set \"result\" \"\"}}{{/set~}}\n        {{~! checks if the selected text matches a dictionary ~}}\n        {{~#if (op \"===\" (get \"opt-selection-text-dictionary\") true)~}}\n            {{~#set \"result\"}}{{~&gt; _jpmn-check-dictionary . ~}}{{/set~}}\n        {{~/if~}}\n        {{~! checks if the selected text matches a definition in a dictionary ~}}\n        {{~#if (op \"!==\" (get \"result\") \"\") ~}}\n            {{~! selection-text is a dictionary -&gt; null ~}}\n        {{~else if\n            (op \"&amp;&amp;\"\n                (op \"===\" (get \"opt-selection-text-glossary\") true)\n                (op \"===\" (get \"opt-selection-text-glossary-attempt-bold\") true)\n            )\n        ~}}\n            {{~#set \"result\"}}{{~&gt; _jpmn-get-dict-if-glossary-selected . ~}}{{/set~}}\n            {{~#if (op \"!==\" (get \"result\") \"\") ~}}\n                {{~! selection-text dict found -&gt; \"uses-glossary\" ~}}\n                uses-glossary\n            {{~/if~}}\n        {{~/if~}}\n    {{~/scope~}}\n{{~/inline~}}\n{{~!\n    if (selection-text exists):\n        if (selection-text is exactly a dictionary):\n            return dictionary\n        if (able to detect dictionary of which the selection-text is highlighting):\n            return dictionary\n        if (selection-text-glossary is not enabled):\n            return first-dictionary (determined by `opt-first-definition-type`)\n        return null\n    else:\n        return first-dictionary (determined by `opt-first-definition-type`)\n~}}\n{{~#*inline \"_jpmn-get-primary-definition-dict\"~}}\n    {{~#scope~}}\n        {{~! first checks selection text ~}}\n        {{~#set \"selection\"}}{{~&gt; _jpmn-selection-text ~}}{{/set~}}\n        {{~#if (op \"!==\" (get \"selection\") \"\")~}}\n            {{~#set \"result\"}}{{~&gt; _jpmn-check-dictionary-and-glossary . ~}}{{/set~}}\n            {{~! doesn't return a dictionary if opt-selection-text-glossary is false b/c ~}}\n            {{~#if\n                (op \"&amp;&amp;\"\n                    (op \"===\" (get \"result\") \"\")\n                    (op \"===\" (get \"opt-selection-text-glossary\") false)\n                )\n            ~}}\n                {{~#set \"result\"}}{{~&gt; _jpmn-search-primary-definition-dict . ~}}{{/set~}}\n            {{~/if~}}\n            {{~get \"result\" ~}}\n        {{~! no selection text ~}}\n        {{~else~}}\n            {{~&gt; _jpmn-search-primary-definition-dict . ~}}\n        {{~/if~}}\n    {{~/scope~}}\n{{~/inline~}}\n{{~!\n    get number of primary dictionary entries\n~}}\n{{~#*inline \"_jpmn-primary-dict-entry-count\"~}}\n    {{~#scope~}}\n        {{~#set \"primary-dictionary\"}}{{~&gt; _jpmn-get-primary-definition-dict . ~}}{{/set~}}\n        {{~set \"dict-entry-count\" 0 ~}}\n        {{~#each definition.definitions~}}\n            {{~#if (op \"===\" dictionary (get \"primary-dictionary\")) ~}}\n                {{~! dict-entry-count += 1 ~}}\n                {{~set \"dict-entry-count\" (op \"+\"\n                    (get \"dict-entry-count\") 1\n                )\n                ~}}\n            {{~/if~}}\n        {{~/each~}}\n        {{~get \"dict-entry-count\" ~}}\n    {{~/scope~}}\n{{~/inline~}}\n{{~!\n    returns \"true\" if valid dict, \"\" (null) otherwise\n~}}\n{{~#*inline \"_jpmn-non-primary-is-valid-dict\"~}}\n    {{~!\n        PARAMETERS:\n            validDictType: \"monolingual\" or \"bilingual\" or \"utility\"\n            dictionaryName: dictionary id\n            entryCount: primary dictionary entry count\n    ~}}\n    {{~#scope~}}\n        {{~set \"use-primary-dictionary\" (op \"&amp;&amp;\"\n            (get \"opt-primary-def-one-dict-entry-only\")\n            (op \"&amp;&amp;\" (op \"!==\" (op \"+\" entryCount) 0) (op \"!==\" (op \"+\" entryCount) 1))\n        )\n        ~}}\n        {{~set \"valid-dict\" null ~}}\n        {{~#set \"test-dict-type\"}}{{~&gt; jpmn-get-dict-type . dictionaryName=dictionaryName ~}}{{/set~}}\n        {{~#if (op \"&amp;&amp;\"\n            (op \"===\" (get \"test-dict-type\") validDictType)\n            (op \"||\"\n                (op \"!==\" (get \"primary-dictionary\") dictionaryName)\n                (op \"===\" (get \"use-primary-dictionary\") true)\n            )\n        ) ~}}\n            {{~set \"valid-dict\" \"true\" ~}}\n        {{~/if~}}\n        {{~get \"valid-dict\" ~}}\n    {{~/scope~}}\n{{~/inline~}}\n{{~!\n    returns \"true\" if valid dict, \"\" (null) otherwise\n~}}\n{{~#*inline \"_jpmn-non-primary-has-valid-dict\"~}}\n    {{~!\n        PARAMETERS:\n            validDictType: \"monolingual\" or \"bilingual\" or \"utility\"\n            entryCount: primary dictionary entry count\n    ~}}\n    {{~#scope~}}\n        {{~set \"use-primary-dictionary\" (op \"&amp;&amp;\"\n            (get \"opt-primary-def-one-dict-entry-only\")\n            (op \"&amp;&amp;\" (op \"!==\" (op \"+\" entryCount) 0) (op \"!==\" (op \"+\" entryCount) 1))\n        )\n        ~}}\n        {{~!\n            without this set statement, the parameters\n            magically disappears within the bottom 'each' loop...\n        ~}}\n        {{~ set \"valid-dict-type\" validDictType ~}}\n        {{~ set \"entry-count\" entryCount ~}}\n        {{~set \"has-valid-dict\" null ~}}\n        {{~#each definition.definitions~}}\n            {{~#set \"is-valid-dict\"}}{{~&gt; _jpmn-non-primary-is-valid-dict . validDictType=(get \"valid-dict-type\") entryCount=(get \"entry-count\") dictionaryName=dictionary ~}}{{/set~}}\n            {{~#if (op \"===\" (get \"is-valid-dict\") \"true\") ~}}\n                {{~set \"has-valid-dict\" \"true\" ~}}\n            {{~/if~}}\n        {{~/each~}}\n        {{~get \"has-valid-dict\" ~}}\n    {{~/scope~}}\n{{~/inline~}}\n{{~#*inline \"_jpmn-get-primary-definition-value\"~}}\n    {{~!\n        ASSUMPTION: \"primary-dictionary\" and \"search-selection\" is available to us from previous functions\n    ~}}\n    {{~#scope~}}\n        {{~#if\n            (op \"&amp;&amp;\"\n                (op \"!==\" (get \"search-selection\") \"\")\n                (get \"opt-primary-def-one-dict-entry-only\")\n            )\n        ~}}\n            {{~! text was highlighted -&gt; use primary dictionary entry with highlighted text ~}}\n            {{~set \"found-dict-entry\" false ~}}\n            {{~#if (op \"!\" (get \"opt__plaintext__one-dict-entry-only-no-list\")) ~}}\n            &lt;ol&gt;\n            {{~/if~}}\n            {{~#each definition.definitions~}}\n                {{~#set \"rx-match-dict-entry\" ~}}\n                    {{~#regexMatch (get \"search-selection\") \"gu\"~}}{{~&gt; _jpmn-glossary-single . brief=../brief noDictionaryTag=../noDictionaryTag ~}}{{~/regexMatch~}}\n                {{/set~}}\n                {{~#if\n                    (op \"&amp;&amp;\"\n                        (op \"===\" (get \"found-dict-entry\") false)\n                        (op \"&amp;&amp;\"\n                            (op \"!==\" (get \"rx-match-dict-entry\") \"\")\n                            (op \"===\" dictionary (get \"primary-dictionary\"))\n                        )\n                    )\n                ~}}\n                    {{~#if (op \"!\" (get \"opt__plaintext__one-dict-entry-only-no-list\")) ~}}\n                    &lt;li data-details=\"{{~dictionary~}}\"&gt;\n{{~/if~}}\n{{~&gt; _jpmn-glossary-single . brief=../brief noDictionaryTag=../noDictionaryTag ~}}\n{{~#if (op \"!\" (get \"opt__plaintext__one-dict-entry-only-no-list\")) ~}}\n                    &lt;/li&gt;\n{{~/if~}}\n{{~set \"found-dict-entry\" true ~}}\n{{~/if~}}\n{{~/each~}}\n{{~#if (op \"!\" (get \"opt__plaintext__one-dict-entry-only-no-list\")) ~}}\n            &lt;/ol&gt;\n{{~/if~}}\n{{~else if (get \"opt-primary-def-one-dict-entry-only\") ~}}\n{{~! use first primary dictionary entry ~}}\n{{~set \"found-dict-entry\" false ~}}\n{{~#if (op \"!\" (get \"opt__plaintext__one-dict-entry-only-no-list\")) ~}}\n            &lt;ol&gt;\n{{~/if~}}\n{{~#each definition.definitions~}}\n{{~#if\n(op \"&amp;&amp;\"\n(op \"===\" (get \"found-dict-entry\") false)\n                        (op \"===\" dictionary (get \"primary-dictionary\"))\n                    )\n                ~}}\n                    {{~#if (op \"!\" (get \"opt__plaintext__one-dict-entry-only-no-list\")) ~}}\n                    &lt;li data-details=\"{{~dictionary~}}\"&gt;\n{{~/if~}}\n{{~&gt; _jpmn-glossary-single . brief=../brief noDictionaryTag=../noDictionaryTag ~}}\n{{~#if (op \"!\" (get \"opt__plaintext__one-dict-entry-only-no-list\")) ~}}\n                    &lt;/li&gt;\n{{~/if~}}\n{{~set \"found-dict-entry\" true ~}}\n{{~/if~}}\n{{~/each~}}\n{{~#if (op \"!\" (get \"opt__plaintext__one-dict-entry-only-no-list\")) ~}}\n            &lt;/ol&gt;\n{{~/if~}}\n{{~else~}}\n{{~! use all primary dictionary entries ~}}\n{{~#if (get \"opt__plaintext__one-dict-entry-only-no-list\") ~}}\n{{~! must manually calculate number of primary-dictionary entries... ~}}\n{{~set \"t\" 0 ~}}\n{{~#each definition.definitions~}}\n{{~#if (op \"===\" dictionary (get \"primary-dictionary\"))~}}\n                        {{~set \"t\" (op \"+\" (get \"t\") 1) ~}}\n                    {{~/if~}}\n                {{~/each~}}\n                {{~#if (op \"&gt;=\" (get \"t\") 2)~}} &lt;ol&gt; {{~/if~}}\n                {{~#each definition.definitions~}}\n                    {{~#if (op \"===\" dictionary (get \"primary-dictionary\"))~}}\n                        {{~#if (op \"&gt;=\" (get \"t\") 2)~}} &lt;li data-details=\"{{~dictionary~}}\"&gt; {{~/if~}}\n{{~&gt; _jpmn-glossary-single . brief=../brief noDictionaryTag=../noDictionaryTag ~}}\n{{~#if (op \"&gt;=\" (get \"t\") 2)~}} &lt;/li&gt; {{~/if~}}\n                    {{~/if~}}\n                {{~/each~}}\n                {{~#if (op \"&gt;=\" (get \"t\") 2)~}} &lt;/ol&gt; {{~/if~}}\n            {{~else~}}\n                &lt;ol&gt; {{~s~}}\n                {{~#each definition.definitions~}}\n                    {{~#if (op \"===\" dictionary (get \"primary-dictionary\"))~}}\n                        &lt;li data-details=\"{{~dictionary~}}\"&gt;\n{{~&gt; _jpmn-glossary-single . brief=../brief noDictionaryTag=../noDictionaryTag ~}}\n                        &lt;/li&gt;\n{{~/if~}}\n{{~/each~}}\n                &lt;/ol&gt; {{~s~}}\n{{~/if~}}\n{{~/if~}}\n{{~/scope~}}\n{{~/inline~}}\n{{~!\nif (mode === \"except\" and (regex doesn't match) or mode === \"only\" and (regex matches)):\n        return true\n    return null\n~}}\n{{#*inline \"_jpmn-check-first-line-dict\"}}\n    {{~#scope~}}\n        {{~#set \"rx-match-first-line-dict\" ~}}\n            {{~#regexMatch (get \"opt-first-line-dicts-regex\") \"u\"~}}{{dictionary}}{{~/regexMatch~}}\n        {{/set~}}\n        {{~#if (op \"||\"\n            (op \"&amp;&amp;\"\n                (op \"===\" (get \"opt-first-line-regex-mode\") \"except\")\n                (op \"===\" (get \"rx-match-first-line-dict\") \"\")\n            )\n            (op \"&amp;&amp;\"\n                (op \"===\" (get \"opt-first-line-regex-mode\") \"only\")\n                (op \"!==\" (get \"rx-match-first-line-dict\") \"\")\n            )\n        )\n        ~}}\n            true\n        {{~/if~}}\n    {{~/scope~}}\n{{~/inline~}}\n{{~! custom glossary-single function for additional regex parsing per dictionary ~}}\n{{~! OVERRIDES brief and noDictionaryTag ~}}\n{{#*inline \"_jpmn-glossary-single\"}}\n    {{~#scope~}}\n        {{~#if (op \"===\" dictionary \"NHK\u65e5\u672c\u8a9e\u767a\u97f3\u30a2\u30af\u30bb\u30f3\u30c8\u65b0\u8f9e\u5178\")~}}\n            {{~#regexReplace \"&lt;br&gt;&lt;/span&gt; \u30fb\" \"&lt;br&gt;&lt;/span&gt;\" \"g\"~}}\n                {{~#regexReplace \"&lt;br&gt; \u30fb\" \"&lt;br&gt;\" \"g\"~}}\n                    {{~&gt; _jpmn-glossary-single2 . ~}}\n                {{~/regexReplace~}}\n            {{~/regexReplace~}}\n        {{~else~}}\n            {{~&gt; _jpmn-glossary-single2 . ~}}\n        {{~/if~}}\n    {{~/scope~}}\n{{/inline}}\n{{~! custom glossary-single function to add custom html around the dictionary and tags ~}}\n{{#*inline \"_jpmn-glossary-single2\"}}\n    {{~#scope~}}\n        {{~#if (op \"!\" (get \"opt__plaintext__enabled\")) ~}}\n            &lt;span class=\"dict-group__tag-list\"&gt; {{~s~}}\n                {{~#each definitionTags~}}\n                    &lt;span class=\"dict-group__tag dict-group__tag--name\"&gt; {{~s~}}\n                        &lt;span class=\"dict-group__tag-inner\"&gt; {{~s~}}\n                            {{~name~}}\n                        &lt;/span&gt; {{~s~}}\n                    &lt;/span&gt; {{~s~}}\n                {{~/each~}}\n                &lt;span class=\"dict-group__tag dict-group__tag--dict\"&gt; {{~s~}}\n                    &lt;span class=\"dict-group__tag-inner\"&gt; {{~s~}}\n                        {{~dictionary~}}\n                    &lt;/span&gt; {{~s~}}\n                &lt;/span&gt; {{~s~}}\n            &lt;/span&gt; {{~s~}}\n        {{~else~}}\n            {{~#scope~}}\n                {{~#set \"any\" false}}{{/set~}}\n                {{~#each definitionTags~}}\n                    {{~#if (get \"any\")}}, {{else}}({{/if~}}\n                    {{name}}\n                    {{~#set \"any\" true}}{{/set~}}\n                {{~/each~}}\n                {{~#if (op \"!\" (get \"opt__plaintext__remove-dictionary-tag\"))~}}\n                    {{~#if (get \"any\")}}, {{else}}({{/if~}}\n                    {{dictionary}}\n                    {{~#set \"any\" true}}{{/set~}}\n                {{~/if~}}\n                {{~#if (get \"any\")}}) {{/if~}}\n            {{~/scope~}}\n            {{~#if only~}}({{#each only}}{{.}}{{#unless @last}}, {{/unless}}{{/each}} only) {{/if~}}\n        {{~/if~}}\n        {{~#if (op \"!\" (get \"opt__plaintext__enabled\")) ~}}\n        &lt;span class=\"dict-group__glossary\"&gt; {{~s~}}\n        {{~/if~}}\n        {{~!\n            option to not wrap with spans because it may break dictionaries\n            (this is the hell that is parsing html with regex)\n        ~}}\n        {{~#if (op \"&amp;&amp;\"\n            (get \"opt-wrap-first-line-spans\")\n            (op \"!\" (get \"opt__plaintext__enabled\"))\n        )\n        }}\n            {{~#set \"modify-first-line\" ~}}{{&gt; _jpmn-check-first-line-dict dictionary=dictionary }}{{~/set~}}\n            {{~#if (get \"modify-first-line\") ~}}\n                {{~#regexReplace\n                        \"^(&lt;span lang=\\\"ja\\\"&gt;)?(.*?)&lt;br&gt;\"\n                        \"$1&lt;span class=\\\"dict-group__glossary--first-line\\\"&gt;$2&lt;/span&gt;&lt;span class=\\\"dict-group__glossary--first-line-break\\\"&gt;&lt;br&gt;&lt;/span&gt;\"\n                ~}}\n                    {{~&gt; _jpmn-glossary-single3 . ~}}\n                {{~/regexReplace~}}\n            {{~else~}}\n                {{~&gt; _jpmn-glossary-single3 . ~}}\n            {{~/if~}}\n        {{~else if (get \"opt__plaintext__remove-first-line-enabled\")~}}\n            {{~#set \"modify-first-line\" ~}}{{&gt; _jpmn-check-first-line-dict dictionary=dictionary }}{{~/set~}}\n            {{~#if (get \"modify-first-line\") ~}}\n                {{~! none match means the dictionary is not an exception, i.e. replace newline ~}}\n                {{~#regexReplace\n                        \"^(&lt;span lang=\\\"ja\\\"&gt;)?(.*?)&lt;br&gt;\"\n                        \"$1\"\n                ~}}\n                    {{~&gt; _jpmn-glossary-single3 . ~}}\n                {{~/regexReplace~}}\n            {{~else~}}\n                {{~&gt; _jpmn-glossary-single3 . ~}}\n            {{~/if~}}\n        {{~else~}}\n            {{~&gt; _jpmn-glossary-single3 . ~}}\n        {{~/if~}}\n        {{~#if (op \"!\" (get \"opt__plaintext__enabled\")) ~}}\n        &lt;/span&gt; {{~s~}}\n        {{~/if~}}\n    {{~/scope~}}\n    {{~#if only~}}({{#each only}}{{.}}{{#unless @last}}, {{/unless}}{{/each}} only) {{/if~}}\n{{/inline}}\n{{#*inline \"_jpmn-glossary-single3\"}}\n    {{~#scope~}}\n        {{~#if (op \"&amp;&amp;\"\n            (op \"===\" (get \"opt-jmdict-list-format\") true)\n            (op \"||\"\n                (op \"===\" dictionary \"JMdict (English)\")\n                (op \"===\" dictionary \"JMdict\")\n            )\n        )\n        ~}}\n            {{~#if (op \"&lt;=\" glossary.length 1)~}}\n                {{#each glossary}}{{#formatGlossary ../dictionary}}{{{.}}}{{/formatGlossary}}{{/each}}\n            {{~else~}}\n                &lt;ul&gt;{{#each glossary}}&lt;li&gt;{{#formatGlossary ../dictionary}}{{{.}}}{{/formatGlossary}}&lt;/li&gt;{{/each}}&lt;/ul&gt;\n            {{~/if~}}\n        {{~else~}}\n            {{~#each glossary}}{{#formatGlossary ../dictionary}}{{{.}}}{{/formatGlossary}}{{#unless @last}} | {{/unless}}{{/each~}}\n        {{~/if~}}\n    {{~/scope~}}\n{{/inline}}\n{{~!\n    =============\n     frequencies\n    =============\n~}}\n{{#*inline \"jpmn-frequencies\"}}\n    {{~#if (op \"&gt;\" definition.frequencies.length 0)~}}\n        {{~#each definition.frequencies~}}\n            &lt;div class=\"frequencies__group\" data-details=\"{{~dictionary~}}\"&gt; {{~s~}}\n                &lt;div class=\"frequencies__number\"&gt; {{~s~}}\n                    &lt;span class=\"frequencies__number-inner\"&gt; {{~s~}}\n                        {{~! removes the \"X\" in JPDB's frequency and replaces it with a less assuming character\n(it interferes with the color of the card, since you see red\nat the top corner which is somewhat distracting) ~}}\n{{~#regexReplace \"\u274c\" \"\u2716\" \"g\"~}}\n{{~frequency~}}\n{{~/regexReplace~}}\n                    &lt;/span&gt; {{~s~}}\n                &lt;/div&gt; {{~s~}}\n                &lt;div class=\"frequencies__dictionary\"&gt; {{~s~}}\n                    &lt;span class=\"frequencies__dictionary-inner\"&gt; {{~s~}}\n{{~dictionary~}}\n                    &lt;/span&gt; {{~s~}}\n                &lt;/div&gt; {{~s~}}\n            &lt;/div&gt;\n{{~/each~}}\n{{~/if~}}\n{{/inline}}\n{{~! base code taken from: https://github.com/MarvNC/JP-Resources#sorting-mined-anki-cards-by-frequency ~}}\n{{~! NOTE: THIS IS ONLY KEPT FOR LEGACY PURPOSES, and is now deprecated. Please use {jpmn-frequency-sort} instead. ~}}\n{{~#*inline \"jpmn-min-freq\"~}}\n{{~#scope~}}\n{{~#set \"min-freq\" 0~}}{{~/set~}}\n{{~#each definition.frequencies~}}\n{{~#set \"rx-match-ignored-freq\" ~}}\n{{~#regexMatch (get \"ignored-freq-dict-regex\") \"gu\"~}}{{this.dictionary}}{{~/regexMatch~}}\n{{/set~}}\n{{~#if\n(op \"&amp;&amp;\"\n(op \"||\"\n(op \"===\" (get \"min-freq\") 0)\n                            (op \"&gt;\" (op \"+\" (get \"min-freq\")) (op \"+\" (regexMatch \"\\d\" \"g\" this.frequency)))\n                        )\n                        (op \"===\" (get \"rx-match-ignored-freq\") \"\")\n                    )\n                ~}}\n                    {{~#set \"min-freq\" (op \"+\" (regexMatch \"\\d\" \"g\" this.frequency))}}{{/set~}}\n                {{~/if~}}\n            {{~/each~}}\n        {{~get \"min-freq\"~}}\n    {{~/scope~}}\n{{/inline}}\n{{#*inline \"jpmn-frequency-sort\"}}\n    {{~! Frequency sort handlebars: v23.03.13.1 ~}}\n    {{~! The latest version can be found at https://github.com/MarvNC/JP-Resources#freq-handlebar ~}}\n    {{~#scope~}}\n        {{~! Do not change the code below unless you know what you are doing. ~}}\n        {{~set \"result-freq\" -1 ~}} {{~! -1 is chosen because no frequency dictionaries should have an entry as -1 ~}}\n        {{~set \"prev-freq-dict\" \"\" ~}}\n        {{~set \"t\" 1 ~}}\n        {{~set \"found-grammar-dict\" false ~}}\n        {{~! search for grammar dictionary ~}}\n        {{~#each definition.definitions~}}\n            {{~#set \"rx-match-grammar-dicts\" ~}}\n                {{~#regexMatch (get \"opt-grammar-override-dict-regex\") \"u\"~}}{{this.dictionary}}{{~/regexMatch~}}\n            {{/set~}}\n            {{~! rx-match-grammar-dicts is not empty if a grammar dictionary was found ~}}\n            {{~#if (op \"!==\" (get \"rx-match-grammar-dicts\") \"\") ~}}\n                {{~set \"found-grammar-dict\" true ~}}\n            {{/if~}}\n        {{~/each~}}\n        {{~! Additional case when \"Result grouping mode\" is set to \"No Grouping\"~}}\n        {{~#set \"rx-match-grammar-dicts\" ~}}\n            {{~#regexMatch (get \"opt-grammar-override-dict-regex\") \"u\"~}}{{this.definition.dictionary}}{{~/regexMatch~}}\n        {{/set~}}\n        {{~! rx-match-grammar-dicts is not empty if a grammar dictionary was found ~}}\n        {{~#if (op \"!==\" (get \"rx-match-grammar-dicts\") \"\") ~}}\n            {{~set \"found-grammar-dict\" true ~}}\n        {{/if~}}\n        {{~#each definition.frequencies~}}\n            {{~! rx-match-ignored-freq is not empty if ignored &lt;=&gt; rx-match-ignored-freq is empty if not ignored ~}}\n            {{~#set \"rx-match-ignored-freq\" ~}}\n                {{~#regexMatch (get \"opt-ignored-freq-dict-regex\") \"u\"~}}{{this.dictionary}}{{~/regexMatch~}}\n            {{/set~}}\n            {{~#set \"rx-match-ignored-value\" ~}}\n                {{~#regexMatch (get \"opt-ignored-freq-value-regex\") \"u\"~}}{{this.frequency}}{{~/regexMatch~}}\n            {{/set~}}\n            {{~#if (op \"&amp;&amp;\" (op \"===\" (get \"rx-match-ignored-freq\") \"\") (op \"===\" (get \"rx-match-ignored-value\") \"\"))~}}\n                {{~!\n                    only uses the 1st frequency of any dictionary.\n                    For example, if JPDB lists 440 and 26189\u32d5, only the first 440 will be used.\n                ~}}\n                {{~set \"read-freq\" false ~}}\n                {{~#if (op \"!==\" (get \"prev-freq-dict\") this.dictionary ) ~}}\n                    {{~set \"read-freq\" true ~}}\n                    {{~set \"prev-freq-dict\" this.dictionary ~}}\n                {{/if~}}\n                {{~#if (op \"!\" (get \"read-freq\") ) ~}}\n                    {{~#set \"rx-match-keep-freqs\" ~}}\n                        {{~#regexMatch (get \"opt-keep-freqs-past-first-regex\") \"u\"~}}{{this.dictionary}}{{~/regexMatch~}}\n                    {{/set~}}\n                    {{~! rx-match-keep-freqs is not empty if keep freqs ~}}\n                    {{~#if (op \"!==\" (get \"rx-match-keep-freqs\") \"\") ~}}\n                        {{~set \"read-freq\" true ~}}\n                    {{/if~}}\n                {{/if~}}\n                {{~#if (get \"read-freq\") ~}}\n                    {{~set \"f\" (op \"+\" (regexMatch \"\\d+\" \"\" this.frequency)) ~}}\n                    {{~#if (op \"===\" (get \"opt-freq-sorting-method\") \"min\") ~}}\n                        {{~#if\n                            (op \"||\"\n                                (op \"===\" (get \"result-freq\") -1)\n                                (op \"&gt;\" (get \"result-freq\") (get \"f\"))\n                            )\n                        ~}}\n                            {{~set \"result-freq\" (op \"+\" (get \"f\")) ~}}\n                        {{~/if~}}\n                    {{~else if (op \"===\" (get \"opt-freq-sorting-method\") \"first\") ~}}\n                        {{~#if (op \"===\" (get \"result-freq\") -1) ~}}\n                            {{~set \"result-freq\" (get \"f\") ~}}\n                        {{~/if~}}\n                    {{~else if (op \"===\" (get \"opt-freq-sorting-method\") \"avg\") ~}}\n                        {{~#if (op \"===\" (get \"result-freq\") -1) ~}}\n                            {{~set \"result-freq\" (get \"f\") ~}}\n                        {{~else~}}\n                            {{~!\n                                iterative mean formula (to prevent floating point overflow):\n                                    $S_{(t+1)} = S_t + \\frac{1}{t+1} (x - S_t)$\n                                - example java implementation: https://stackoverflow.com/a/1934266\n                                - proof: https://www.heikohoffmann.de/htmlthesis/node134.html\n                            ~}}\n                            {{~set \"result-freq\"\n                                (op \"+\"\n                                    (get \"result-freq\")\n                                    (op \"/\"\n                                        (op \"-\"\n                                            (get \"f\")\n                                            (get \"result-freq\")\n                                        )\n                                        (get \"t\")\n                                    )\n                                )\n                            }}\n                        {{~/if~}}\n                        {{~set \"t\" (op \"+\" (get \"t\") 1) ~}}\n                    {{~else if (op \"===\" (get \"opt-freq-sorting-method\") \"harmonic\") ~}}\n                        {{~#if (op \"&gt;\" (get \"f\") 0) ~}} {{~! ensures only positive numbers are used ~}}\n                            {{~#if (op \"===\" (get \"result-freq\") -1) ~}}\n                                {{~set \"result-freq\" (op \"/\" 1 (get \"f\")) ~}}\n                            {{~else ~}}\n                                {{~set \"result-freq\"\n                                    (op \"+\"\n                                        (get \"result-freq\")\n                                        (op \"/\" 1 (get \"f\"))\n                                    )\n                                }}\n                                {{~set \"t\" (op \"+\" (get \"t\") 1) ~}}\n                            {{~/if~}}\n                        {{~/if~}}\n                    {{~else if (op \"===\" (get \"opt-freq-sorting-method\") \"debug\") ~}}\n                        {{ this.dictionary }}: {{ this.frequency }} -&gt; {{ get \"f\" }} &lt;br&gt;\n                    {{~else~}}\n                        (INVALID opt-freq-sorting-method value)\n                    {{~/if~}}\n                {{~/if~}}\n            {{~/if~}}\n        {{~/each~}}\n        {{~! (x) &gt;&gt; 0 apparently floors x: https://stackoverflow.com/a/4228528 ~}}\n        {{~#if (op \"===\" (get \"result-freq\") -1) ~}}\n            {{~set \"result-freq\" (get \"opt-no-freq-default-value\") ~}}\n        {{~ else if (op \"===\" (get \"opt-freq-sorting-method\") \"avg\") ~}}\n            {{~set \"result-freq\"\n                (op \"&gt;&gt;\" (get \"result-freq\") 0 )\n            ~}}\n        {{~ else if (op \"===\" (get \"opt-freq-sorting-method\") \"harmonic\") ~}}\n            {{~set \"result-freq\"\n                (op \"&gt;&gt;\"\n                    (op \"*\"\n                        (op \"/\" 1 (get \"result-freq\"))\n                        (get \"t\")\n                    )\n                    0\n                )\n            ~}}\n        {{~/if~}}\n        {{~! override final result if grammar dictionary ~}}\n        {{~#if (\n            op \"&amp;&amp;\"\n                (op \"===\" (get \"found-grammar-dict\") true)\n                (op \"===\" (get \"opt-grammar-override\") true)\n            )\n        ~}}\n            {{~set \"result-freq\" (get \"opt-grammar-override-value\") ~}}\n        {{/if}}\n        {{~get \"result-freq\"~}}\n    {{~/scope~}}\n{{/inline}}\n{{~!\n    ==============\n     pitch accent\n    ==============\n~}}\n{{#*inline \"jpmn-pitch-accent-graphs\"}}\n    {{~#if (op \"&gt;\" pitchCount 0)~}}\n        {{~#each pitches~}}\n            &lt;div class=\"pa-graphs__group\" data-details=\"{{dictionary}}\"&gt; {{~s~}}\n                &lt;div class=\"pa-graphs__dictionary\"&gt; {{~s~}}\n                    &lt;div class=\"pa-graphs__dictionary-inner\"&gt; {{~s~}}\n{{~dictionary~}}\n                    &lt;/div&gt; {{~s~}}\n                &lt;/div&gt; {{~s~}}\n                &lt;ol&gt; {{~s~}}\n{{~#each pitches~}}\n                        &lt;li&gt;\n{{~&gt; pitch-accent-item-disambiguation~}}\n{{~#scope~}}\n{{~#set \"any\" false}}{{/set~}}\n{{~#each tags~}}\n{{~#if (get \"any\")}}, {{else}}({{/if~}}\n{{name}}\n{{~#set \"any\" true}}{{/set~}}\n{{~/each~}}\n{{~#if (get \"any\")}}) {{/if~}}\n{{~/scope~}}\n{{~&gt; pitch-accent-item format=\"graph\"~}}\n                        &lt;/li&gt;\n{{~/each~}}\n                &lt;/ol&gt; {{~s~}}\n            &lt;/div&gt;\n{{~/each~}}\n{{~/if~}}\n{{/inline}}\n{{#*inline \"jpmn-pitch-accent-positions\"}}\n{{~#if (op \"&gt;\" pitchCount 0)~}}\n{{~#each pitches~}}\n            &lt;div class=\"pa-positions__group\" data-details=\"{{dictionary}}\"&gt; {{~s~}}\n                &lt;div class=\"pa-positions__dictionary\"&gt; {{~s~}}\n                    &lt;div class=\"pa-positions__dictionary-inner\"&gt; {{~s~}}\n{{~dictionary~}}\n                    &lt;/div&gt; {{~s~}}\n                &lt;/div&gt; {{~s~}}\n                &lt;ol&gt; {{~s~}}\n{{~#each pitches~}}\n                        &lt;li&gt;\n{{~&gt; pitch-accent-item-disambiguation~}}\n{{~#scope~}}\n{{~#set \"any\" false}}{{/set~}}\n{{~#each tags~}}\n{{~#if (get \"any\")}}, {{else}}({{/if~}}\n{{name}}\n{{~#set \"any\" true}}{{/set~}}\n{{~/each~}}\n{{~#if (get \"any\")}}) {{/if~}}\n{{~/scope~}}\n{{~&gt; pitch-accent-item format=\"position\"~}}\n                        &lt;/li&gt;\n{{~/each~}}\n                &lt;/ol&gt; {{~s~}}\n            &lt;/div&gt;\n{{~/each~}}\n{{~/if~}}\n{{/inline}}\n{{~!\n==============\ndictionaries\n==============\n~}}\n{{~! primary def: first monolingual (or first bilingual if no monolingual dicts found) ~}}\n{{~! does the reverse if opt-first-definition-type is \"bilingual\" ~}}\n{{~#*inline \"jpmn-primary-definition\"~}}\n{{~#scope~}}\n{{~#set \"primary-dictionary\"}}{{~&gt; _jpmn-get-primary-definition-dict . ~}}{{/set~}}\n{{~#if (op \"===\" (get \"primary-dictionary\") \"\")~}}\n            {{~&gt; _jpmn-selection-text ~}}\n        {{~else~}}\n            {{~#set \"selection\"}}{{~&gt; _jpmn-selection-text ~}}{{/set~}}\n            {{~#set \"selection-uses-glossary\"~}}\n                {{~&gt; _jpmn-selection-uses-glossary . ~}}\n            {{~/set~}}\n            {{~! not \"\" &lt;=&gt; is a filled string ~}}\n            {{~#if (op \"!==\" (get \"selection-uses-glossary\") \"\")~}}\n                {{~! escape regex ~}}\n                {{~#set \"search-selection\"}}{{~#regexReplace \"[.*+?^${}()|[\\]\\\\]\" \"\\$&amp;\" \"g\"~}}{{~&gt; _jpmn-selection-text ~}}{{~/regexReplace~}}{{/set~}}\n                {{~#set \"search-selection-bold\"}}&lt;b&gt;{{~&gt; _jpmn-selection-text ~}}&lt;/b&gt;{{/set~}}\n                {{~#regexReplace (get \"search-selection\") (get \"search-selection-bold\") \"g\"~}}\n                    {{~&gt; _jpmn-get-primary-definition-value . brief=../brief noDictionaryTag=../noDictionaryTag ~}}\n                {{~/regexReplace~}}\n            {{~else~}}\n                {{~#set \"search-selection\"}}{{/set~}}\n                {{~&gt; _jpmn-get-primary-definition-value . brief=../brief noDictionaryTag=../noDictionaryTag ~}}\n            {{~/if~}}\n        {{~/if~}}\n    {{~/scope~}}\n{{~/inline~}}\n{{~! extra def: bilingual defs (excluding primary def) ~}}\n{{~#*inline \"jpmn-secondary-definition\"~}}\n    {{~#scope~}}\n        {{~#set \"primary-dictionary\"}}{{~&gt; _jpmn-get-primary-definition-dict . ~}}{{/set~}}\n        {{~! looks to see if another dictionary exists ~}}\n        {{~! entry count must be gotten here in order to properly iterate through definition.definitions ~}}\n        {{~#set \"entry-count\"}}{{~&gt; _jpmn-primary-dict-entry-count . ~}}{{/set~}}\n        {{~#set \"has-valid-dict\"}}{{~&gt; _jpmn-non-primary-has-valid-dict . validDictType=\"bilingual\" entryCount=(get \"entry-count\")~}}{{/set~}}\n        {{~#if (op \"===\" (get \"has-valid-dict\") \"true\") ~}}\n            &lt;ol&gt;\n            {{~#each definition.definitions~}}\n                {{~#set \"is-valid-dict\"}}{{~&gt; _jpmn-non-primary-is-valid-dict . validDictType=\"bilingual\" entryCount=(get \"entry-count\") dictionaryName=dictionary ~}}{{/set~}}\n                {{~#if (op \"===\" (get \"is-valid-dict\") \"true\") ~}}\n                    &lt;li data-details=\"{{~dictionary~}}\"&gt;\n{{~&gt; _jpmn-glossary-single . brief=../brief noDictionaryTag=../noDictionaryTag ~}}\n                    &lt;/li&gt;\n{{~/if~}}\n{{~/each~}}\n            &lt;/ol&gt;\n{{~/if~}}\n{{~/scope~}}\n{{~/inline~}}\n{{~! extra def: monolingual defs (excluding primary def) ~}}\n{{~#*inline \"jpmn-extra-definitions\"~}}\n{{~#scope~}}\n{{~#set \"primary-dictionary\"}}{{~&gt; _jpmn-get-primary-definition-dict . ~}}{{/set~}}\n{{~! looks to see if another dictionary exists ~}}\n{{~! entry count must be gotten here in order to properly iterate through definition.definitions ~}}\n{{~#set \"entry-count\"}}{{~&gt; _jpmn-primary-dict-entry-count . ~}}{{/set~}}\n{{~#set \"has-valid-dict\"}}{{~&gt; _jpmn-non-primary-has-valid-dict . validDictType=\"monolingual\" entryCount=(get \"entry-count\")~}}{{/set~}}\n{{~#if (op \"===\" (get \"has-valid-dict\") \"true\") ~}}\n            &lt;ol&gt;\n            {{~#each definition.definitions~}}\n                {{~#set \"is-valid-dict\"}}{{~&gt; _jpmn-non-primary-is-valid-dict . validDictType=\"monolingual\" entryCount=(get \"entry-count\") dictionaryName=dictionary ~}}{{/set~}}\n                {{~#if (op \"===\" (get \"is-valid-dict\") \"true\") ~}}\n                    &lt;li data-details=\"{{~dictionary~}}\"&gt;\n{{~&gt; _jpmn-glossary-single . brief=../brief noDictionaryTag=../noDictionaryTag ~}}\n                    &lt;/li&gt;\n{{~/if~}}\n{{~/each~}}\n            &lt;/ol&gt;\n{{~/if~}}\n{{~/scope~}}\n{{~/inline~}}\n{{~! pitch accent info: all pitch accent info dictionaries ~}}\n{{~#*inline \"jpmn-utility-dictionaries\"~}}\n{{~#scope~}}\n{{~! looks to see if another dictionary exists ~}}\n{{~! this if-statement is much more simple than the ones above, since utility dictionaries usually aren't the primary definition (if it is, then it'll just be repeated again here) ~}}\n{{~#set \"has-valid-dict\"}}{{~&gt; _jpmn-non-primary-has-valid-dict . validDictType=\"utility\"~}}{{/set~}}\n{{~#if (op \"===\" (get \"has-valid-dict\") \"true\") ~}}\n            &lt;ol&gt;\n            {{~#each definition.definitions~}}\n                {{~#set \"test-dict-name\"}}{{~&gt; jpmn-get-dict-type . dictionaryName=dictionary ~}}{{/set~}}\n                {{~#if (op \"===\" (get \"test-dict-name\") \"utility\")~}}\n                    &lt;li data-details=\"{{~dictionary~}}\"&gt;\n{{~&gt; _jpmn-glossary-single . brief=../brief noDictionaryTag=../noDictionaryTag ~}}\n                    &lt;/li&gt;\n{{~/if~}}\n{{~/each~}}\n            &lt;/ol&gt;\n{{~/if~}}\n{{~/scope~}}\n{{~/inline~}}\n{{~!\n=======\nother\n=======\n~}}\n{{~#*inline \"jpmn-word-reading-hiragana\"~}}\n{{~#set \"word-reading\" ~}}{{&gt; reading}}{{/set~}}\n{{~#if (op \"\" (get \"word-reading\")) ~}}\n{{~#set \"word-reading\" ~}}{{&gt; expression}}{{/set~}}\n{{~/if~}}\n{{#hiragana (get \"word-reading\") keepProlongedSoundMarks=false}}{{/hiragana}}\n{{~/inline~}}\n{{~!\nthanks to:\n- https://github.com/FooSoft/yomichan/issues/1952#issuecomment-922671489 for the base code\n- DaNautics#8833 for finding the above + removing the span classes\n~}}\n{{#*inline \"jpmn-sentence-bolded-furigana-plain\"}}\n{{~#if definition.cloze~}}\n{{~#regexReplace \"(&lt;span class=\\\"term\\\"&gt;)|(&lt;/span&gt;)\" \"\" \"g\"~}}\n{{~#regexReplace \"&lt;ruby&gt;(.+?)&lt;rt&gt;(.+?)&lt;/rt&gt;&lt;/ruby&gt;\" \" $1[$2]\" \"g\"~}}\n{{~#if (hasMedia \"textFurigana\" definition.cloze.prefix)~}}\n{{~#getMedia \"textFurigana\" definition.cloze.prefix escape=false}}{{/getMedia~}}\n{{~else~}}\n{{~definition.cloze.prefix~}}\n{{~/if~}}\n            &lt;b&gt;\n{{~#if (hasMedia \"textFurigana\" definition.cloze.body)~}}\n{{~#getMedia \"textFurigana\" definition.cloze.body escape=false}}{{/getMedia~}}\n{{~else~}}\n{{~definition.cloze.body~}}\n{{~/if~}}\n            &lt;/b&gt;\n{{~#if (hasMedia \"textFurigana\" definition.cloze.suffix)~}}\n{{~#getMedia \"textFurigana\" definition.cloze.suffix escape=false}}{{/getMedia~}}\n{{~else~}}\n{{~definition.cloze.suffix~}}\n{{~/if~}}\n{{~/regexReplace~}}\n{{~/regexReplace~}}\n{{~/if~}}\n{{/inline}}\n{{#*inline \"jpmn-filled-if-word-is-hiragana\"}}\n{{~#scope~}}\n{{~#set \"expression\" ~}}{{&gt; expression}}{{/set~}}\n{{~#set \"reading\" ~}}{{&gt; reading}}{{/set~}}\n{{~#set \"expression-hiragana\" ~}}{{&gt; jpmn-word-reading-hiragana}}{{/set~}}\n{{~#if (op \"&amp;&amp;\" (op \"===\" (get \"expression\") (get \"reading\")) (op \"===\" (get \"expression\") (get \"expression-hiragana\")))~}}\n            1\n        {{~/if~}}\n    {{~/scope~}}\n{{/inline}}\n{{#*inline \"jpmn-filled-if-word-is-not-hiragana\"}}\n    {{~#scope~}}\n        {{~#set \"filled\" ~}}{{&gt; jpmn-filled-if-word-is-hiragana}}{{/set~}}\n        {{~#if (op \"===\" (get \"filled\") \"\")~}}\n            1\n        {{~/if~}}\n    {{~/scope~}}\n{{/inline}}\n{{#*inline \"jpmn-filled-if-grammar-point\"}}\n    {{~#scope~}}\n        {{~set \"found-grammar-dict\" false ~}}\n        {{~! search for grammar dictionary ~}}\n        {{~#each definition.definitions~}}\n            {{~#set \"rx-match-grammar-dicts\" ~}}\n                {{~#regexMatch (get \"opt-grammar-override-dict-regex\") \"gu\"~}}{{this.dictionary}}{{~/regexMatch~}}\n            {{/set~}}\n            {{~! rx-match-grammar-dicts is not empty if a grammar dictionary was found ~}}\n            {{~#if (op \"!==\" (get \"rx-match-grammar-dicts\") \"\") ~}}\n                {{~set \"found-grammar-dict\" true ~}}\n            {{/if~}}\n        {{~/each~}}\n        {{~! Additional case when \"Result grouping mode\" is set to \"No Grouping\"~}}\n        {{~#set \"rx-match-grammar-dicts\" ~}}\n            {{~#regexMatch (get \"opt-grammar-override-dict-regex\") \"gu\"~}}{{this.definition.dictionary}}{{~/regexMatch~}}\n        {{/set~}}\n        {{~! rx-match-grammar-dicts is not empty if a grammar dictionary was found ~}}\n        {{~#if (op \"!==\" (get \"rx-match-grammar-dicts\") \"\") ~}}\n            {{~set \"found-grammar-dict\" true ~}}\n        {{/if~}}\n        {{~#if (get \"found-grammar-dict\") ~}}\n            1\n        {{~/if~}}\n    {{~/scope~}}\n{{/inline}}\n{{#*inline \"jpmn-filled-if-not-grammar-point\"}}\n    {{~#scope~}}\n        {{~#set \"filled\" ~}}{{&gt; jpmn-filled-if-grammar-point}}{{/set~}}\n        {{~#if (op \"===\" (get \"filled\") \"\")~}}\n            1\n        {{~/if~}}\n    {{~/scope~}}\n{{/inline}}\n{{#*inline \"jpmn-filled-if-on-mim\"}}\n    {{~#scope~}}\n        {{~#set \"rx-match-on-mim\" ~}}\n            {{~#regexMatch \"(, |^)on-mim(, |$)\" \"gu\"~}}{{&gt; tags }}{{~/regexMatch~}}\n        {{/set~}}\n        {{~#if (op \"!==\" (get \"rx-match-on-mim\") \"\") ~}}\n            1\n        {{/if~}}\n    {{~/scope~}}\n{{/inline}}\n{{#*inline \"jpmn-filled-if-not-on-mim\"}}\n    {{~#scope~}}\n        {{~#set \"filled\" ~}}{{&gt; jpmn-filled-if-not-on-mim}}{{/set~}}\n        {{~#if (op \"===\" (get \"filled\") \"\")~}}\n            1\n        {{~/if~}}\n    {{~/scope~}}\n{{/inline}}\n{{~! my personal settings:\n- sentence card if grammar point\n- otherwise, if it's on-mim, then hint card\n- otherwise, default\n~}}\n{{#*inline \"jpmn-is-sentence-card\"}}\n    {{~&gt; jpmn-filled-if-grammar-point ~}}\n{{/inline}}\n{{#*inline \"jpmn-is-hint-card\"}}\n    {{~#scope~}}\n        {{~#set \"filled\" ~}}{{&gt; jpmn-is-sentence-card}}{{/set~}}\n        {{~#if (op \"===\" (get \"filled\") \"\")~}}\n            {{~&gt; jpmn-filled-if-on-mim ~}}\n        {{~/if~}}\n    {{~/scope~}}\n{{/inline}}\n{{#*inline \"jpmn-is-click-card\"}}\n    {{~#scope~}}\n        {{~#set \"filled1\" ~}}{{&gt; jpmn-is-hint-card}}{{/set~}}\n        {{~#set \"filled2\" ~}}{{&gt; jpmn-is-sentence-card}}{{/set~}}\n        {{~#if (op \"&amp;&amp;\"\n            (op \"===\" (get \"filled1\") \"\")\n            (op \"===\" (get \"filled2\") \"\")\n        )~}}\n            1\n        {{~/if~}}\n    {{~/scope~}}\n{{/inline}}\n{{~! a test to check if your dictionaries are correctly classified. ~}}\n{{~! Only meant to be used for debugging purposes, not Anki. ~}}\n{{~#*inline \"jpmn-test-dict-type\"~}}\n{{~#scope~}}\n{{~#each definition.definitions~}}\n\u300c{{dictionary}}\u300d: {{&gt; jpmn-get-dict-type . dictionaryName=dictionary}}\n{{/each~}}\n{{~/scope~}}\n{{~/inline~}}\n</code></pre> </li> </ol>"},{"location":"setupyomichan/#make-an-example-card","title":"Make an example card!","text":"<p>At this point, you should be able to make cards with Yomichan!</p> Click here to show some example Japanese sentences. <p>\u300c\u3084\u3001\u3044\u3089\u3063\u3057\u3083\u3044\u3002\u307e\u3001\u6bd2\u3092\u98df\u3089\u308f\u3070\u76bf\u307e\u3067\u3063\u3066\u8a00\u3046\u3057\u306d\u3002\u3042\u3001\u9055\u3046\u304b\u3002\u4e57\u308a\u639b\u304b\u3063\u305f\u8239\uff1f\u300d</p> <p>\u300c\u306a\u306b\u3088\u3045\u2026\u7532\u6590\u7532\u6590\u3057\u304f\u4f1a\u3044\u306b\u6765\u305f\u5973\u306b\u5bfe\u3057\u3066\u3001\u6700\u521d\u306b\u8a00\u3046\u30bb\u30ea\u30d5\u304c\u305d\u308c\uff1f\u300d</p> <p>\u300c\u3042\u306e\u6642\u9003\u3052\u51fa\u3057\u305f\u79c1\u306e\u7f70\u2026\u3042\u306e\u6642\u306e\u6c5a\u8fb1\u306f\u4eca\u3053\u3053\u3067\u3001\u5168\u90e8\u305d\u305d\u3044\u3067\u3084\u308b\u3093\u3060\u2026\u300d</p> <p>\u300c\u8cb4\u65b9\u306a\u3093\u306a\u3093\u3067\u3059\uff1f\u306a\u306b\u304b\u3001\u5999\u306b\u9283\u53e3\u6163\u308c\u3057\u3066\u3044\u307e\u3059\u306d\u2026\u82e5\u8005\u7279\u6709\u306e\u7a7a\u5a01\u5f35\u308a\u3068\u3044\u3046\u8a33\u3067\u3082\u306a\u3055\u305d\u3046\u3067\u3059\u3057\u2026\u300d</p> <p></p> <p>Obviously, just Yomichan alone doesn't fill every field. Notably, the picture and sentence audio is missing.</p> <p>Outside of that, there are some final settings you can adjust within the Yomichan templates if the card doesn't look quite right.</p>"},{"location":"setupyomichan/#yomichan-templates-options-summary","title":"Yomichan Templates Options Summary","text":""},{"location":"setupyomichan/#monolingual-definition","title":"Monolingual Definition","text":"<p>If you want the first definition you see (the <code>PrimaryDefinition</code> field) to be monolingual, change the following line at the top of the templates code:</p> <p></p><pre><code>{{~#set \"opt-first-definition-type\" \"bilingual\"}}{{/set~}}\n</code></pre> to <pre><code>{{~#set \"opt-first-definition-type\" \"monolingual\"}}{{/set~}}\n</code></pre> <p>Additionally, a common thing that people want to do with monolingual dictionaries is to remove the first line of the definition, because it may contain extra info that the user does not want. See here to do exactly that.</p> <p>Note</p> <p>If you are using monolingual dictionaries, on your first few cards, please check that your dictionaries are in the expected places. Extra bilingual definitions should be under <code>Secondary Definition</code>, and extra monolingual definitions should be under <code>Extra Definitions</code>.</p> <p>If your dictionaries are ending up in the wrong sections, then it is likely a problem with how the template code categorizes the dictionaries. See here for more info.</p> <p></p>"},{"location":"setupyomichan/#selected-text-as-the-definition","title":"Selected Text as the Definition","text":"<p>If you want to select the text to use instead of the definition, simply set <code>opt-selection-text-enabled</code> to <code>true</code>.</p> <p></p> <p>By default, this enable the following behavior:</p> <ol> <li>If nothing is selected, then the first dictionary is chosen just like normal.</li> <li>If a dictionary is selected, then that dictionary will replace the first definition.</li> <li>If a section of text is selected, then that dictionary will replace the first definition.     Additionally, that section of text will be highlighted (bolded).</li> </ol> <p>Note</p> <p>Selecting parts of a definition to bold the text does not always work, especially when used across text with formatting or newlines. See this for more details.</p> <p>With this being said, selecting the dictionary should always work.</p>"},{"location":"setupyomichan/#additional-instructions-for-other-platforms","title":"Additional Instructions for Other Platforms","text":"<p>Outside of creating cards on the PC, there are some other platforms that one can create cards from.</p> <p></p>"},{"location":"setupyomichan/#android-setup","title":"Android Setup","text":"<p>Warning</p> <p>Actually using JPMN on mobile devices (e.g. for reviewing), is currently not stable. This simply shows how to make the cards on Android.</p> <p>If you wish to add cards on Android, use AnkiconnectAndroid and follow the instructions on the AnkiconnectAndroid's README page. It might help to export a copy of Yomichan settings from your PC and import said settings on Android, instead of re-doing all of the steps on Android.</p> <p>Note</p> <p>Occasionally, importing your Yomichan settings from the PC may lead to AnkiconnectAndroid not working. If AnkiconnectAndroid doesn't work after going through the entire README, try resetting your Yomichan settings on Android and starting from scratch.</p> <p>Note</p> <p>There is currently no way to automatically add an image (e.g. a screenshot) automatically. Images must be added manually within AnkiDroid.</p> <p>Although screenshots cannot be added automatically, the runtime options supports automatically adding images based off of tags. See here for more info.</p> <p></p>"},{"location":"setupyomichan/#kindle-setup","title":"Kindle Setup","text":"<p>One can use something like ann2html to export a Yomichan-able HTML file based on the Kindle's vocabulary builder. This allows you to add the cards through Yomichan on the PC.</p>"},{"location":"setupyomichan/#enjoy-your-new-one-click-cards","title":"Enjoy your new one-click cards!","text":"<p>If you've made it this far, then congratulations! Most fields of the cards have been automatically filled out, just from Yomichan alone!</p> <p>This concludes the setup process for creating cards with Yomichan.</p> <p>From here, you likely fall under one of the two categories below:</p> <ol> <li> <p>I'm new to sentence mining.</p> <p>If you're new to sentence mining, there are likely some things things that you would like to set up. These include:</p> <ol> <li>Getting the actual text to use Yomichan on.</li> <li>Getting the pictures and/or sentence audio from the media into the card.</li> </ol> <p>Head over to the Setup: Everything Else page to see exactly that.</p> </li> <li> <p>I already have a sentence mining workflow.</p> <p>If you have a workflow already setup, you may have to do some minor tweaks to your current workflow to match the new field names. For example, the exporting sentence audio and picture fields may be different compared to your previous card.</p> <p>Other than that, you are completely finished with the setup process!</p> <p>Note</p> <p>See Setup: Everything Else (Notes on Various Programs) for specific tips on a select few programs.</p> </li> </ol>"},{"location":"tooltipresults/","title":"Tooltip Results (TODO)","text":"<p>TODO add intro</p> <ul> <li>for kanji hover and same reading indicator</li> <li>TODO generalize this page to not only be for kanji hover</li> </ul>"},{"location":"tooltipresults/#details","title":"Details","text":"<ul> <li>pitch accents should be exactly the same pitch accents as shown on the specified card</li> <li>pitch accents are stripped of extra information (nasal and devoiced)<ul> <li>all the extra color was very distracting, and stole the attention away from the important part     (the example words found)</li> </ul> </li> </ul>"},{"location":"tooltipresults/#result-queries-categorization","title":"Result Queries &amp; Categorization","text":"<p>The exact results shown through Kanji Hover is not completely trivial, so this process is explained below.</p> <p>The words are searched and sorted into 3 categories:</p> <ul> <li>The two oldest, not new cards (already reviewed before, in order of add date)</li> <li>The two latest, not new cards (the most recent two cards that you have reviewed, in order of add date)</li> <li>The two oldest, new cards (the first 2 new cards that you will see with the kanji)</li> </ul> <p>The last category (the new cards) are greyed out to show that you haven't reviewed the card yet (i.e. you may not know the word yet). Conversely, the first two categories (the non-new cards) represent words that you likely already know, so they are not greyed out.</p> <p>The exact numbers shown in each category can be changed in the runtime options:</p> <pre><code>\"kanji-hover\": {\n  \"max-non-new-oldest\": ...\n  \"max-non-new-latest\": ...\n  \"max-new-latest\": ...\n}\n</code></pre> <p>TODO: add this to each query to hide results from cards that are due today </p><pre><code>-(prop:due=0 -rated:1)\n</code></pre>"},{"location":"tooltipresults/#results-sorting","title":"Results Sorting","text":"<p>The above makes the assumption that you are reviewing in order of creation date, rather than the time of first review, to save resources. In other words, if you re-ordered your cards to be different from the add-date, then the kanji hover will not be able to recognize that.</p> <p>For people who review in order of frequency only, then the assumption above is completely broken.</p> <p>Unfortunately, there is currently no way to order the results by anything other than by the creation date.</p>"},{"location":"tooltipresults/#suspended-cards","title":"Suspended Cards","text":"<p>Some assumptions are made about suspended cards. For example, suspended cards flagged as <code>green</code> are counted in the \"non-new\" cards category (known words), and suspended cards flagged as <code>red</code> are counted as words that you do not know AND will not study in the future (not shown in any category). This can be changed in the runtime options:</p> <pre><code>\"kanji-hover\": {\n  \"non-new-query\": ...\n  \"new-query\": ...\n}\n</code></pre>"},{"location":"ui/","title":"User Interface","text":"<p>This page is dedicated to showcasing various aspects of the common user interface.</p>"},{"location":"ui/#summary","title":"Summary","text":"<p>Most of the user interface is already shown off in the GUI demo, and I would recommend watching it before continuing.</p> <p>However, to dispell any mysteries, here is a fully annotated summary of the user interface.</p> <p></p> <p>Additional information on some parts of the UI is stated below.</p>"},{"location":"ui/#keybinds","title":"Keybinds","text":"<p>This note ships with some keybinds to do basic actions.</p> Keybind What it does <code>p</code> Play sentence audio <code>w</code> Play word audio <code>8</code> Toggles <code>Secondary Definition</code> field <code>9</code> Toggles <code>Additional Notes</code> field <code>0</code> Toggles <code>Extra Definitions</code> field <code>[</code> Toggles <code>Extra Info</code> field <p>See the runtime options if you would like to edit / disable any keybind, and/or to view the full list of keybinds.</p>"},{"location":"ui/#info-circle","title":"Info Circle","text":"DefaultErrorWarningLeech <p>      On hover, the info circle on the top left corner just shows some basic info.     However, it also serves as a notification system to the user, when it has a color.    </p> <p>      This should only appear when some javascript code fails.     In other words, this should not appear under normal circumstances.     If you get this without modifying the note in any way,     please see this section for basic troubleshooting.    </p> <p>      This serves to warn the user about something.     It can appear without completely breaking the functionality of the card.     In other words, you can choose to ignore it.    </p> <p>      When the card is a leech, the circle is highlighted yellow (or blue in light mode)     to indicate that it is a leech.     This is only shown on the back side of the card.    </p>"},{"location":"ui/#locking-the-info-circle","title":"Locking the Info Circle","text":"<p>New in version <code>0.10.3.0</code> (latest version: <code>0.11.0.3</code>)</p> <p>You can toggle (click on) the info circle to lock the tooltip in place. This may be useful for copying/pasting errors and other debugging purposes.</p>"},{"location":"ui/#kanji-hover","title":"Kanji Hover","text":"<p>Kanji hover shows you if you have seen the kanji in previous cards or not. This is useful if you want to check whether you have seen the reading in a previous card, to differentiate between similar kanjis, etc.</p> <p>By default, it searches for the kanji within the \"Word\" field, within \"JP Mining Note\" types.</p> <p></p> <p>Various Details:</p> <ul> <li> <p>You may have noticed that some results are greyed out.     These represent words from cards that have not been reviewed yet.     Conversely, as non-greyed out results come from cards that you have already reviewed,     they should represent words that you already know.</p> </li> <li> <p>Pitch accents are shown when you hover over a particular word     within the tooltip. You can change this to always be shown in the runtime options.</p> </li> <li> <p>You can click on the word to open the specified card within Anki's card browser.</p> </li> </ul> <p>See here for information on how the examples are chosen, and how to customize it.</p> Related Programs (click here) <p>Cade's Kanji Hover</p> <ul> <li>Hover over a kanji to see its readings, meanings (english), and other info.</li> <li>This does not show example words from other cards.</li> <li>My implmentation of kanji hover was heavily inspired by this.</li> </ul> <p>Hanzi Web for Anki</p> <ul> <li>The end result of this is to this note's implementation of kanji-hover,     in the sense that it is used to see kanjis that have been used in other notes.     However, it differs primarily in the fact that all the information must be     mass-generated. This indeed has several advantages, such as being able to     use the infomation on Android, where Anki-Connect isn't full supported.</li> </ul> <p>KanjiEater's Kanji Connections</p> <ul> <li>Ability to show kanjis with heisig's RTK keywords, as well as related vocabulary.     Similar to Hanzi Web for Anki.</li> </ul> <p>Warning</p> <p>None of the above will work with jp-mining-note by default. In fact, it's almost guaranteed that Cade's Kanji Hover will conflict with this note's kanji hover ability.</p>"},{"location":"ui/#word-indicators","title":"Word Indicators","text":"<p>New in version <code>0.11.0.0</code> (latest version: <code>0.11.0.3</code>)</p> <p>Indicators will be shown to the top-left of the reading when similar words in your deck are found. The indicators are as follows:</p> <ul> <li>\u540c (short for \u540c\u3058) indicates that the card is a duplicate.</li> <li>\u8aad (short for \u8aad\u307f\u65b9) indicates that there are other card(s) with the same reading (ignoring pitch accent).     In Japanese, these words are \u540c\u97f3\u7570\u7fa9\u8a9e.     I consider this the most useful of the three.</li> <li>\u6f22 (short for \u6f22\u5b57) indicates that there are other card(s) with the same kanji, but different reading.</li> </ul> <p></p> <p>As you can see from the above, the query ignores pitch accent. The word \u81ea\u8eab is still shown, despite having a different pitch accent compared to \u5730\u9707.</p> <p>Note</p> <p>This indicator will be yellow (or blue on light mode) for new cards only. After the first review, the indicator will be the same color as the default info circle (grey).</p> <p>The tooltip behaves very similarly properties to Kanji hover's tooltip:</p> <ul> <li>New cards are greyed out.</li> <li>You can click on words to open them in Anki's card browser.</li> <li>Pitch accent is shown without requiring the user to hover over the word by default.     This is different from Kanji hover's tooltip.</li> </ul> <p>See here for information on how the examples are chosen, and how to customize it.</p>"},{"location":"ui/#images-pitch-accent","title":"Images &amp; Pitch Accent","text":"<p>See the Images page for information on the following:</p> <ul> <li>Blurring images</li> <li>Specifying default images</li> <li>Automatically formatting pictures within the definition</li> </ul> <p>See the Pitch Accent page for information on the following:</p> <ul> <li>Pitch accent notation</li> <li>Automatic pitch accent coloring</li> <li>How to override the pitch accent of any word</li> </ul>"},{"location":"ui/#external-links","title":"External Links","text":"<p>New in version <code>0.10.3.0</code> (latest version: <code>0.11.0.3</code>)</p> <p>External links are shown as icons in the <code>Extra Info</code> collapsable field by default. By default, hovering over them will show the url. Click on the desired icon to visit to the desired site.</p> <p></p> <p>See also: UI Customization (External Links).</p>"},{"location":"ui/#automatic-word-highlighting","title":"Automatic Word Highlighting","text":"<p>Warning</p> <p>New as of version <code>0.11.1.0</code>. This version is currently bleeding edge, so this feature cannot be used unless you compile the templates from the dev branch.</p> <p>Usually, the word within the sentence is already bolded by Yomichan. However, there are some cases where the word within the sentence may not be bold, such as when external programs update the <code>Sentence</code> field, or if you are using imported cards.</p> <p>By default, the note attempts to highlight the word within the sentence.</p> <p>With that being said, it is not uncommon that the automatic highlighting fails to highlight the full word. For example, verb and i-adj. conjugations are not highlighted whatsoever. In order to keep the javascript lightweight, any improper highlighting is considered as expected behavior, and will not be changed or fixed. I recommend manually bolding the word if the word is incorrectly highlighted.</p> Examples (click here) <p>Any text in red is not highlighted automatically. They are considered as examples of when automatic highlighting doesn't work.</p> WordReading Sentence Result \u6295\u7a3f\u3068\u3046\u3053\u3046 \u300c\u3042\u306e\u6642\u306f\u3001\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u4e0a\u3067\u8272\u3093\u306a\u8cea\u554f\u304c\u3067\u304d\u308b\u30b5\u30a4\u30c8\u306b\u6295\u7a3f\u3057\u305f\u3089\u3001\u89aa\u5207\u306a\u4eba\u304c\u5546\u54c1\u540d\u3068\u58f2\u3063\u3066\u3044\u308b\u5834\u6240\u3092\u6559\u3048\u3066\u304f\u308c\u305f\u3093\u3067\u3059\u300d \u4e00\u5148\u3072\u3068\u307e\u305a \u300c\u3075\u30fc\u2026\u3053\u308c\u3067\u3072\u3068\u307e\u305a\u306f\u5927\u4e08\u592b\u305d\u3046\u306d\u2026\u300d \u7363\u3051\u3060\u3082\u306e \u300c\u305d\u306e\u5834\u5408\u2026\u300e\u5acc\u3063\uff01\u3053\u306e\u30b1\u30c0\u30e2\u30ce\uff01\u300f\u3068\u66b4\u308c\u305f\u65b9\u304c\u3001\u98a8\u898b\u3055\u3093\u306f\u304a\u597d\u307f\u3067\u3057\u3087\u3046\u304b\uff1f\u300d \u7532\u6590\u7532\u6590\u304b\u3044\u304c\u3044\u3057\u3044 \u300c\u306a\u306b\u3088\u3045\u2026\u7532\u6590\u7532\u6590\u3057\u304f\u4f1a\u3044\u306b\u6765\u305f\u5973\u306b\u5bfe\u3057\u3066\u3001\u6700\u521d\u306b\u8a00\u3046\u30bb\u30ea\u30d5\u304c\u305d\u308c\uff1f\u300d \u5c71\u3084\u307e\u3054\u3082\u308a \u300c\u3067\u306f\u3001\u308f\u305f\u3057\u3082\u4eca\u304b\u3089\u5c71\u3054\u3082\u308a\u306e\u4fee\u884c\u3092\u59cb\u3081\u307e\u3059\u300d \u5c71\u7c60\u3084\u307e\u3054\u3082\u308a \u300c\u3067\u306f\u3001\u308f\u305f\u3057\u3082\u4eca\u304b\u3089\u5c71\u3054\u3082\u308a\u306e\u4fee\u884c\u3092\u59cb\u3081\u307e\u3059\u300d \u629c\u306c\u304d\u3093\u51fa\u306c\u308b \u300c\u201c\u3059\u3054\u3044\u201d\u3067\u3059\u304b\u3089\u3001\u826f\u304f\u3082\u60aa\u304f\u3082\u3001\u629c\u304d\u3093\u51fa\u3066\u3044\u308b\u3068\u3044\u3046\u610f\u5473\u306b\u306f\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u300d <p>Note</p> <p>Much of the base code was taken from Marv's implementation of the same thing.</p>"},{"location":"ui/#conclusion","title":"Conclusion","text":"<p>This page shows various aspects of the user interface, but says little about actually modifying it. Head over to the UI Customization page to see just that.</p>"},{"location":"uicustomization/","title":"UI Customization","text":"<p>This page showcases many examples on how you can customize the user interface to your liking. As there are many examples that you likely won't use, I recommend quickly skimming through this page to see if there is anything you would like your note to do.</p> <p>Note</p> <ul> <li>If you want to change something for a card-per-card basis, see the Field Reference page.</li> <li>These customizations make heavy use of runtime options and custom CSS.</li> </ul>"},{"location":"uicustomization/#fix-ruby-positioning-for-legacy-anki-versions","title":"Fix Ruby Positioning (for legacy Anki versions)","text":"<p>New in version <code>0.11.0.0</code> (latest version: <code>0.11.0.3</code>)</p> <p>If the furigana appears higher than normal on your card, the following runtime option serves as a quick fix to lower the furigana:</p> <pre><code>{\n\"fix-ruby-positioning\": ...\n}\n</code></pre> <p>See the pictures below to compare between furigana positions.</p> Higher than NormalQuick FixNormal <p></p> <p></p> <p></p>"},{"location":"uicustomization/#why-this-happens","title":"Why this happens","text":"<p>There are a few reasons why this can happen:</p> <ol> <li>Your Anki version is 2.1.49 or below.</li> <li>Your Anki version is 2.1.50 and above, but using the older Qt5 version.</li> <li>You are using AnkiMobile.</li> </ol> <p>If you have this issue with the desktop version of Anki, it is recommended that you update a version with Qt6 support. This will allow the furigana to behave as expected.</p> <p>If you are unable to do that for any reason, or you are using AnkiMobile, this option serves as a quick but imperfect fix to make the furigana lower. This fix is imperfect because it adds even more spacing to the left and right than normal if the furigana text is too long.</p>"},{"location":"uicustomization/#external-links","title":"External Links","text":""},{"location":"uicustomization/#external-links-in-primary-definition","title":"External links in primary definition","text":"<p>New in version <code>0.11.0.0</code> (latest version: <code>0.11.0.3</code>)</p> <p>External links usually appear in the \"Extra Info\" section. If you wish to have the external links to be on the primary definition section, set <code>external-links-position</code> to <code>\"Primary Definition\"</code> in the compile-time options.</p> <p></p>"},{"location":"uicustomization/#customize-external-links","title":"Customize external links","text":"<p>New in version <code>0.10.3.0</code> (latest version: <code>0.11.0.3</code>)</p> <p>Custom external links can be specified under the <code>external-links</code> section in the compile-time options.</p> <p>Creating external links is self explanatory and is explained further in the config file. Additionally, some commented-out examples are provided within the file.</p> Remove all external links (click here) <p>If you want to remove all external links, set <code>external-links</code> to <code>{}</code> in the compile-time options.</p> <p>For example: </p><pre><code>\"external-links\": {},\n</code></pre> Icons with multiple text characters (click here) <p>When using text instead of a picture, it is recommended that you use single characters (e.g. one kanji) to represent the icon.</p> <p>However, in the cases where you want to use more characters, the default CSS rules causes the icon will use the minimum amount of space, which may mis-aligned the surrounding icons.</p> <p>Using the custom SCSS, you can specify the amount of space it takes (in terms of number of icons):</p> <pre><code>@use \"../base/common\" as common;\n.glossary__external-links a[data-details=\"DICTIONARY_ID\"] { // (1)!\nwidth: common.maxWidthForXIcons(2);\n}\n</code></pre> <ol> <li>The DICTIONARY_ID are the key values of <code>external-links</code>.     For example, the id of the <code>jpdb.io</code> entry below is exactly <code>jpdb.io</code>.     <pre><code>\"jpdb.io\": {\n\"icon-type\": \"image\",\n\"icon-image-light\": \"_icon_jpdb_lightmode.png\",\n\"icon-image-dark\":  \"_icon_jpdb_darkmode.png\",\n\"url\": \"https://jpdb.io/search?q={{text:Word}}\"\n}\n</code></pre></li> </ol> <p>Warning</p> <p>This SCSS code is NOT CSS. This cannot be added directly to the template's style sheet in Anki. Please see the link above to see how to use custom SCSS.</p> <p>An example of this can be found in <code>src/scss/dictionaries/style.scss</code></p>"},{"location":"uicustomization/#adjusting-zoom","title":"Adjusting Zoom","text":"<p>You can increase (or decrease) the size of the card, (without affecting any of Anki's GUI) with custom CSS.</p> Instructions (click here) <ol> <li> <p>Under <code>extra/style.scss</code>, add the following code:</p> <pre><code>:root {\n/* Times 1.1 of the original size.\n   * If you want to make the note smaller, use a value below 1, like 0.9.\n   */\n--zoom: 1.1;\n}\n</code></pre> </li> </ol>"},{"location":"uicustomization/#limiting-number-of-frequencies","title":"Limiting number of frequencies","text":"<p>This CSS allows you to limit the number of frequencies shown at the top right corner.</p> Instructions (click here) <ol> <li> <p>Under <code>extra/style.scss</code>, add the following code:</p> <pre><code>/* max 5 frequencies shown */\n.frequencies div.frequencies__group:nth-child(n+6) {\ndisplay: none;\n}\n</code></pre> </li> <li> <p>(Optional) Under <code>extra/field.scss</code>, add the following code:</p> <p></p><pre><code>/* max 5 frequencies shown */\nanki-editable[field=\"FrequenciesStylized\"] div.frequencies__group:nth-child(n+6) {\ncolor: var(--text-color--3);\n}\n</code></pre> This will grey out the frequencies past the 5th frequency in the editor. </li> </ol> TODO: ONLY VERSION <code>0.11.1.0</code> and over, NOT RELEASED YET <p>By default, a maximum of 4 frequencies are shown. Any more frequency list entries will appear in a dropdown arrow to the right of the frequencies.</p> <p>You can edit the following runtime option to adjust this number: </p><pre><code>{\n\"modules\": {\n\"freq-utils\": {\n\"max\": 4\n}\n}\n}\n</code></pre>"},{"location":"uicustomization/#changing-the-display-language","title":"Changing the display language","text":"<p>Warning</p> <p>New as of version <code>0.11.1.0</code>. This version is currently bleeding edge, so this feature cannot be used unless you compile the templates from the dev branch.</p> <p>By default, the display language is in English. Currently, Japanese and English are supported as display languages.</p> <p>To change the display language (say, to Japanese), use the following compile-time option: </p><pre><code>\"display-languages\": [\"jp\", \"en\"],\n</code></pre> <p>Note</p> <p>Currently, only some text is supported. This means that various tooltips on hover, warning messages, etc. will still be in English.</p>"},{"location":"uicustomization/#sentencereading-furigana-options","title":"SentenceReading Furigana Options","text":"<p>By default, the furigana for the full sentence (on the back side of the card) is shown on hover. The following options change how the furigana is displayed.</p>"},{"location":"uicustomization/#sentencereading-when-to-show-furigana","title":"SentenceReading: When to show furigana","text":"<p>Warning</p> <p>New as of version <code>0.11.1.0</code>. This version is currently bleeding edge, so this feature cannot be used unless you compile the templates from the dev branch.</p> <p>By default, furigana is shown on hover. This can be changed to only be shown on click, or always/never shown.</p> On clickOn hover (default)Always revealedNever revealed <p>TODO gif: show on click</p> Instructions (click here) <p>Change the following compile-time option:</p> <pre><code>\"full-sentence-ruby\": {\n\"display-mode\": \"click\",\n}\n</code></pre> <p>This is commonly paired with the hide furigana spacing option, so furigana does not impede with the sentence whatsoever until toggled.</p> <p>TODO gif: show on hover</p> <p>This is the default behavior.</p> Instructions (click here) <p>Change the following compile-time option:</p> <pre><code>\"full-sentence-ruby\": {\n\"display-mode\": \"hover\",\n}\n</code></pre> <p>TODO gif: static with mouseover</p> <p>This is not recommended, because you should not be relying on furigana to understand Japanese.</p> Instructions (click here) <p>Change the following compile-time option:</p> <pre><code>\"full-sentence-ruby\": {\n\"display-mode\": \"always\",\n}\n</code></pre> <p>TODO gif: static with mouseover</p> <p>If you are looking to not see furigana at all, feel free to use this option. However, I personally recommend toggling on click instead of removing furigana completely.</p> Instructions (click here) <p>Change the following compile-time option:</p> <pre><code>\"full-sentence-ruby\": {\n\"display-mode\": \"never\",\n}\n</code></pre>"},{"location":"uicustomization/#sentencereading-hide-spacing","title":"SentenceReading: Hide spacing","text":"<p>Warning</p> <p>New as of version <code>0.11.1.0</code>. This version is currently bleeding edge, so this feature cannot be used unless you compile the templates from the dev branch.</p> <p>Furigana that extends past the length of the kanji will add additional spacing around the kanjis, which may be unpleasant to look at.</p> <p>One solution to this is to simply hide the spacing until hover or click. This has the unintentional consequence where kanjis can potentionally change position, or overflow into the next line. There is also a possibility that the entire sentence shifts over a bit to the left due to (what I think is a) chromium based bug1.</p> Hide SpacingHide spacing with no transitionKeep spacing (default) <p>TODO img</p> Instructions (click here) <p>Change the following compile-time options:</p> <pre><code>\"full-sentence-ruby\": {\n\"fill-mode\": \"font-size\",\n\"fill-mode-font-size-transition\": True,\n}\n</code></pre> <p>TODO img</p> Instructions (click here) <p>Change the following compile-time options:</p> <pre><code>\"full-sentence-ruby\": {\n\"fill-mode\": \"font-size\",\n\"fill-mode-font-size-transition\": False,\n}\n</code></pre> <p>TODO img</p> <p>This is the default behavior.</p> Instructions (click here) <p>Change the following compile-time option:</p> <pre><code>\"full-sentence-ruby\": {\n\"fill-mode\": \"opacity\",\n}\n</code></pre> <p>Note</p> <p>All of the examples above are shown with furigana on hover. They will also work with furigana on click.</p>"},{"location":"uicustomization/#collapsed-fields","title":"Collapsed Fields","text":""},{"location":"uicustomization/#automatically-open-collapsed-fields","title":"Automatically open collapsed fields","text":"<p>Collapsed fields are collapsed by default. These fields can be set to be automatically opened under the following runtime option:</p> <pre><code>{\n\"modules\": {\n\"customize-open-fields\": {\n...\n}\n}\n}\n</code></pre> Example Config (click here) <pre><code>\"customize-open-fields\": {\n\"enabled\": false,\n// Force a field to be always open\n\"open\": [\n\"Secondary Definition\"\n],\n// Opens the specified collapsable field if the card is new.\n\"open-on-new-enabled\": {\n\"type\": \"pc-mobile\",\n\"pc\": true,\n\"mobile\": false\n},\n\"open-on-new\": [\n\"Extra Info\"\n]\n}\n</code></pre> DefaultUsing example config (new card)Using example config (non-new card) <p></p> <p></p> <p></p>"},{"location":"uicustomization/#do-not-hide-empty-collapsed-fields","title":"Do not hide empty collapsed fields","text":"<p>Collapsable fields that are empty are usually not shown at all. This runtime option allows them to be shown (but greyed out) when empty. </p><pre><code>{\n\"greyed-out-collapsable-fields-when-empty\": ...\n}\n</code></pre> Empty fields greyed out (<code>true</code>)Empty fields not shown (<code>false</code>, default) <p></p> <p></p>"},{"location":"uicustomization/#highlight-the-word-within-the-tooltips","title":"Highlight the word within the tooltips","text":"<p>New in version <code>0.11.0.0</code> (latest version: <code>0.11.0.3</code>)</p> <p>Within the tooltips, the word is not highlighted by default. This CSS allows the words to be highlighted within the sentence.</p> HighlightedNot Highlighted (default) <p></p> <p></p> Instructions (click here) <ol> <li> <p>Under <code>extra/style.scss</code>, add the following code:</p> <pre><code>.hover-tooltip .hover-tooltip__sent-div b {\nfont-weight: bold;\ncolor: var(--accent);\n}\n</code></pre> </li> </ol>"},{"location":"uicustomization/#remove-the-na-on-cards-with-no-pitch-accents","title":"Remove the \"(N/A)\" on cards with no pitch accents","text":"<p>New in version <code>0.11.0.0</code> (latest version: <code>0.11.0.3</code>)</p> <p>If the word has no pitch accent, the pitch accent is usually displayed as <code>(N/A)</code>. This indicator can be removed with the following CSS:</p> Instructions (click here) <ol> <li> <p>Under <code>extra/style.scss</code>, add the following code:</p> <pre><code>.dh-left__word-pitch-text:empty:before {\ncontent: \"\"\n}\n</code></pre> </li> </ol>"},{"location":"uicustomization/#keeping-and-removing-newlines-within-the-display-sentence","title":"Keeping and removing newlines within the display sentence","text":"<p>Warning</p> <p>New as of version <code>0.11.1.0</code>. This version is currently bleeding edge, so this feature cannot be used unless you compile the templates from the dev branch.</p> <p>You can add newlines to the <code>Sentence</code> field to make the full sentence field have cleaner line breaks. If you do this, you will need to regenerate the <code>SentenceReading</code> field if you are using furigana.</p> <p>However, these newlines are automatically removed from the display sentence if the width of the screen is determined to be too small. To override this option, you can use the following custom CSS:</p> Instructions (click here) Keep all newlinesRemove all newlinesRemove all newlines when AltDisplay is not used <ol> <li> <p>Under <code>extra/style.scss</code>, add the following code:</p> <pre><code>.expression .expression-inner br {\ndisplay: inline !important;\n}\n</code></pre> </li> </ol> <ol> <li> <p>Under <code>extra/style.scss</code>, add the following code:</p> <pre><code>.expression .expression-inner br {\ndisplay: none !important;\n}\n</code></pre> </li> </ol> <p>This only removes newlines when the <code>AltDisplay</code> (or <code>AltDisplayPASentenceCard</code>) field is not being used as the display sentence.</p> <ol> <li> <p>Under <code>extra/style.scss</code>, add the following code:</p> <pre><code>.expression .expression-inner br {\ndisplay: inline !important;\n}\n.expression .expression-inner:not(.expression-inner--altdisplay) br {\ndisplay: none !important;\n}\n</code></pre> </li> </ol>"},{"location":"uicustomization/#removing-the-furigana-on-the-word-reading","title":"Removing the furigana on the word reading","text":"<p>The following CSS removes the furigana on the word reading, while keeping the furigana on the kanjis within hover.</p> <p>TODO image</p> Instructions (click here) <ol> <li> <p>Under <code>extra/style.scss</code>, add the following code:</p> <pre><code>.dh-left__reading &gt; ruby &gt; rt {\ndisplay: none;\n}\n</code></pre> </li> </ol>"},{"location":"uicustomization/#changing-colors","title":"Changing colors","text":"<p>Most color changes can be done by simply editing a CSS variable. These variables are shown at the very top of the main CSS sheet. For example, the following changes the main accent color of the card:</p> Instructions (click here) <ol> <li> <p>Under <code>extra/style.scss</code>, add the following code:</p> <pre><code>:root {\n--accent: #ff1fd1; /* hot pink */\n}\n.night_mode {\n--accent: #ff7777; /* light red */\n}\n</code></pre> </li> </ol> <p>Note</p> <p>To change any variable color for dark mode, you cannot use <code>:root</code>, even if you are only setting the color for night mode. You must use <code>.night_mode</code>.</p> <p>For example, doing the following will NOT change the accent for night mode: </p><pre><code>:root {\n/* only changes light mode accent, and will NOT change dark mode accent! */\n--accent: #ff7777;\n}\n</code></pre> <p>You must do this instead: </p><pre><code>/* changes the color for both light and dark mode */\n:root {\n--accent: #ff7777;\n}\n.night_mode {\n--accent: #ff7777;\n}\n</code></pre>"},{"location":"uicustomization/#removing-the-word-sentence-at-the-top-of-the-back-side","title":"Removing the word / sentence at the top of the back side","text":"<p>Warning</p> <p>New as of version <code>0.11.1.0</code>. This version is currently bleeding edge, so this feature cannot be used unless you compile the templates from the dev branch.</p> <p>For users who are only using one card type (e.g. only vocab cards with no sentence cards, TSCs, or anything else), it might be better to remove the tested content and the line below it.</p> <p>TODO image</p> <p>The tested content is shown at the back by default to allow the user to differentiate between card types on both sides of the card. However, this take up extra vertical space which is unnecessary if you are only using one card type.</p> Instructions (click here) <p>Use the following CSS:</p> <ol> <li> <p>Under <code>extra/style.scss</code>, add the following code:</p> <pre><code>.card-main--back .expression-wrapper {\ndisplay: none;\n}\n</code></pre> </li> </ol>"},{"location":"uicustomization/#conclusion","title":"Conclusion","text":"<p>Outside of the user interface, the note has plenty of fields you can use to further modify the card. Head over to the Field Reference page to see just that.</p> <ol> <li> <p>See #4 in the minor visual bugs list.\u00a0\u21a9</p> </li> </ol>"},{"location":"updating/","title":"Updating","text":""},{"location":"updating/#overview","title":"Overview","text":"<p>This page is dedicated to explaining how to update JPMN, as well as provide basic support for required steps outside of Anki.</p> <p>Warning</p> <p>Updating your card will DELETE ANY CHANGES you have made to the templates.</p> <p>Please make a complete backup of your collection before continuing to update your note.</p>"},{"location":"updating/#updating-via-python-script","title":"Updating: Via Python Script","text":"<p>The recommended way to install the note is by using a python script. This will change the note in place, and gives you various options on how the note will be changed. Lastly, it will give you warnings on anything you have to change manually, such as Yomichan Templates.</p> Why can't I just copy/paste the templates, or just re-install the .apkg file to update the note? <p>It's not uncommon for updates to contain many changes outside of just the templates alone. For example, required Yomichan settings, add-on config changes, or sometimes even the data within the note fields must be changed. Additionally, the field list is changed somewhat frequently.</p> <p>Although settings outside of Anki cannot be changed automatically, almost all settings within Anki are automatically updated with the python script. Additionally, the python script will give you plenty of instructions on exactly how to update any Yomichan setting or add-on config change.</p> <p>Finally, installing the .apkg file when the field list is in any way different will actually create a new version of the note instead of replacing the old note, which may prove to be an even bigger hassle.</p> <p></p>"},{"location":"updating/#preliminary-steps","title":"Preliminary steps","text":"<p>Ensure that your note is named exactly <code>JP Mining Note</code>. To do this, head over to:</p> <p>(Main Window) \u2192  <code>Tools</code> \u2192  <code>Manage Note Types</code>.</p> <p>If your note is named differently, please rename it to <code>JP Mining Note</code>.</p> <p>Note</p> <p>You can always change the name back after updating.</p> <p></p>"},{"location":"updating/#running-the-script","title":"Running the Script","text":"Command LineWindows <p>The cross platform command line summary is shown below.</p> <p>A more user friendly set of instructions for Windows users is also available on the second tab, for people who have never used <code>python</code> or <code>git</code> before.</p> <pre><code># assuming you are at the root of the repo, i.e. after the following commands:\n#  $ git clone https://github.com/Aquafina-water-bottle/jp-mining-note.git\n#  $ cd jp-mining-note\n# grabs the latest version of the master branch\ngit pull origin/master\n\ncd tools\n\n# Make sure you have Anki open and Anki-Connect installed!\n# Also ensure that your python version is 3.10.6 or higher.\n# Note: Linux users may have to use `python3` instead of `python`.\npython install.py --update\n</code></pre> <p>This section explains how to run the script on Windows if you have never used <code>python</code> or <code>git</code> before.</p> <ol> <li> <p>Install Python version 3.10.6 or above, if you haven't already.     I recommend using the latest stable version if you have not downloaded Python before.</p> <p>Additionally, make sure the box for \"Add Python to PATH\" is checked. (This is a common error for people to make. Please pay attention to this step!)</p> </li> <li> <p>Get the latest version of the repository.     The easiest way to do this is by heading to the     main repository,     click on the green <code>Code</code> dropdown, and then download the zip by the <code>Download Zip</code> button.     After that, unzip the directory.</p> </li> <li> <p>Open command prompt, and cd (change directory) into <code>jp-mining-note/tools</code>.     If you don't know how to do that, see     this     or     this.</p> </li> <li> <p>With your current directory being the <code>tools</code> directory, run the following command:     </p><pre><code>python install.py --update\n</code></pre>     Once you run the command, further instructions should be given to you through the command     line interface. </li> </ol>"},{"location":"updating/#common-errors","title":"Common Errors","text":"<p>This section will document common errors that occur when running the <code>install.py</code> script.</p> <p></p>"},{"location":"updating/#anki-connect-is-missing-actions","title":"Anki-Connect is missing actions","text":"<p>Anki-Connect is likely outdated. To fix this, remove and re-download Anki-Connect from the AnkiWeb page.</p> <p>Note</p> <p>It seems that the <code>Check for Updates</code> occasionally fails to update the add-on, despite the fact that a newer version of the add-on exists. That is why I recommend re-downloading from the AnkiWeb page instead of using this feature.</p> <p></p>"},{"location":"updating/#fieldverifierexception","title":"FieldVerifierException","text":"<p>This class of errors means that the field list was edited at some point after the installation or last update of JPMN. The field list can be accessed by navigating to the following:</p> <p>(Main window) \u2192  <code>Browse</code> \u2192  <code>Fields...</code>.</p> <p>The <code>install.py</code> is picky about fields and its order, and by default, the script will reject any note type with modifications to the field list.</p> <p>To fix this, there are a few cases to go through.</p> The field order has been changed. <p>If the field order has been changed, and nothing else has been changed, you should be able to preserve your existing field list order by running the installation script with the <code>--ignore-order</code> flag (i.e. <code>python3 install.py --ignore-order</code>).</p> <p>Alternatively, you can simply re-order the fields back to their original position.</p> <p>Note</p> <p>If you use <code>--ignore-order</code>, all new fields will be added to the very end of the field list (i.e. under <code>Comment</code>). Additionally, any fields that were supposed to be repositioned will stay in place. It is up to you to move the fields to the appropriate places.</p> New field(s) have been created. <p>You have two options. Neither of these will delete your existing field(s).</p> <ol> <li> <p>If you want to preserve your existing field list order, then you can run the script     with the <code>--ignore-order</code> flag, like above.</p> </li> <li> <p>If you want to have the field list order match exactly with the current note,     then re-order all the new fields to be below the last <code>Comment</code> field.     Of course, this can be a temporary move; you can move the fields back to their previous positions     after the update.</p> <p>Note</p> <p>On rare occasions, you might have added a field that serves the same purpose as a field that will be created on update. If so, rename your field to the field that will be added, and move the field under the <code>Comment</code> field.</p> <p>For example, if your note doesn't have <code>PAPositions</code> but you added a field <code>Positions</code> that fulfills the same purpose, then rename <code>Positions</code> to <code>PAPositions</code>.</p> </li> </ol> Field(s) were removed or renamed. <p>Unfortunately, there is no way to ignore removed or renamed fields. If you removed a field, please re-add the field. Likewise, if you renamed a field, please rename it back to the original name. See here for more info on why they cannot be ignored.</p>"},{"location":"updating/#updating-manually","title":"Updating: Manually","text":"<p>Warning</p> <p>This method is not recommended whatsoever. Furthermore, very limited support will be given if you attempt this method.</p> Click here to see the steps on how to update the note manually. <p>Sometimes, you may be able to update the card simply by re-installing the newer version of the <code>.apkg</code>. However, this has the main caveat where if any of the fields are added, renamed, repositioned or deleted between card versions, this will not work (and instead add a new version of <code>JP Mining Note</code>, e.g. named <code>JP Mining Note-b320fa</code>). Additionally, if you manually edited any of the fields, then this method will not work.</p> <p>To see if the fields have been changed, compare the first two numbers in the version you want to install to the first two numbers of the current card version. If the first two numbers match, then you are likely safe to manually update the card.</p> <p>If they don't match, then you MAY be able to get away with installing it anyways and transferring the old note types to the new note type. For example, a possible way to update the note is:</p> <ol> <li>Install the new version of the note.</li> <li>Select all the cards you want to transfer to the version, and change note type.</li> <li>Remove the old note type.</li> <li>Rename the new note type to the old note type name (<code>JP Mining Note</code>). See the changelog to see how the fields have changed and how you have to map the old fields to the new fields.</li> </ol>"},{"location":"updating/#after-updating-the-card","title":"After Updating the Card","text":"<p>There may be further steps outside of just updating the card, such as updating Yomichan's templates / format. Further instructions on these are written below.</p> <p>Afterwards, please see the final steps section.</p>"},{"location":"updating/#updating-yomichans-anki-card-format","title":"Updating Yomichan's Anki Card Format","text":"<p>To update the Yomichan Format, the steps should be almost the same as the one specified already in the setup. The most important difference is that if a new field was added or a field has been renamed, then the field will not show up automatically in Yomichan.</p> <p>Warning</p> <p>Doing the above WILL clear all the fields that you previously had, unless there is a matching field in that other card.</p>"},{"location":"updating/#refreshing-yomichan-fields","title":"Refreshing Yomichan Fields","text":"Video Demo (click here) <ol> <li>As always, create a backup     of your Yomichan settings, just in case.</li> <li>After running <code>install.py --update</code>, create a temporary copy of the note by:  <code>Tools</code>      \u2192  <code>Manage Note Types</code>      \u2192  <code>Add</code>      \u2192  Select <code>Clone: JP Mining Note</code> \u2192  <code>Ok</code>      \u2192  Name the note anything you want (the following examples will use <code>JP Mining Note copy</code>)  \u2192  <code>Ok</code>     \u2192  <code>Close</code></li> <li>If you are currently viewing Yomichan Settings, please refresh the page.</li> <li>Head over to Anki Card Format as before.</li> <li>In the top right corner, change <code>Model</code> to <code>JP Mining Note copy</code>,     and then change it back to <code>JP Mining Note</code>.     (If you don't see <code>JP Mining Note copy</code>, please refresh the page.)</li> <li>Update the fields as specified.<ul> <li>It should be specified in the text you see when running <code>install.py --update</code>.</li> <li>However, you should also simply compare the table on the     setup page to your filled out fields.</li> </ul> </li> <li>Remove the temporary note:  <code>Tools</code>      \u2192  <code>Manage Note Types</code>      \u2192  (select <code>JP Mining Note copy</code>)      \u2192  <code>Delete</code></li> </ol> <p>Explanation</p> <p>Using the temporary copy of the updated card means that fields that remain unchanged between the old card and new card will be transferred automatically in the Yomichan Format. If you simply choose some random model like <code>Basic</code>, then almost none of the fields will be preserved, as the <code>Basic</code> card does not have any matching fields with the <code>JP Mining Note</code> model.</p>"},{"location":"updating/#updating-yomichan-templates","title":"Updating Yomichan Templates","text":"<p>Like the above, you can simply follow the steps already specified in setup.</p> <p>Again, please make a backup of your Yomichan settings just in case, and again, please make sure you reset the existing templates (unless you know what you are doing).</p> <p>Note that your Yomichan template options will be reset if you follow all the steps. I recommend temporarily saving a copy of the Yomichan templates so you can easily reset your Yomichan template options after updating.</p>"},{"location":"updating/#updating-the-runtime-options-file","title":"Updating the Runtime Options File","text":"<p>The runtime options does not automatically update with each note update, as to not override the user's configuration on each update. If the options file isn't updated, then the note will simply use the default value for the option.</p> <p>However, if certain runtime options no longer work, you may have to update this file, as it is possible for the configuration file layout to have changed between versions. The most recent version of the options file can always be found here. if you want to update it.</p>"},{"location":"updating/#final-steps","title":"Final Steps","text":"<p>By now, you should be done updating the note! Please do the following checks to make sure everything properly works:</p> <ol> <li>Preview an existing card, to ensure that nothing looks odd.</li> <li> <p>Create a new card and make sure nothing looks odd.</p> Example Japanese sentences to test card creation <p>\u300c\u6211\u306a\u304c\u3089\u99ac\u9e7f\u99ac\u9e7f\u3057\u3044\u3053\u3068\u3092\u601d\u3044\u3064\u3044\u305f\u3082\u306e\u3060\u3068\u5606\u606f\u3057\u3064\u3064\u3082\u3001\u79c1\u306f\u9759\u304b\u306b\u30d9\u30c3\u30c9\u306b\u8fd1\u4ed8\u304f\u300d</p> <p>\u300c\u30b8\u30a7\u30e9\u30fc\u30c8\u3092\u8cb7\u3046\u304a\u91d1\u304c\u306a\u3044\u3068\u306f\uff01\u7d66\u6599\u65e5\u307e\u3067\u53ce\u5165\u306e\u5f53\u3066\u3082\u306a\u3057\u3001\u81ea\u708a\u3059\u308b\u3057\u304b\u3042\u308a\u307e\u305b\u3093\u306d\u300d</p> <p>\u300c\u3053\u308c\u304c\u5c11\u5e74\u8a8c\u3060\u3063\u305f\u3089\u9806\u4f4d\u4e0a\u304c\u3063\u3066\u308b\u305e\u3002\u305d\u3057\u3066\u30c8\u30fc\u30ca\u30e1\u30f3\u30c8\u7de8\u3067\u30a2\u30cb\u30e1\u5316\u6c7a\u5b9a\u3060\u300d</p> <p>\u300c\u3042\u306e\u6642\u306f\u3001\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u4e0a\u3067\u8272\u3093\u306a\u8cea\u554f\u304c\u3067\u304d\u308b\u30b5\u30a4\u30c8\u306b\u6295\u7a3f\u3057\u305f\u3089\u3001\u89aa\u5207\u306a\u4eba\u304c\u5546\u54c1\u540d\u3068\u58f2\u3063\u3066\u3044\u308b\u5834\u6240\u3092\u6559\u3048\u3066\u304f\u308c\u305f\u3093\u3067\u3059\u300d</p> <p>\u300c\u7b2c\u4e8c\u6b21\u4e16\u754c\u5927\u6226\u306b\u304a\u3051\u308b\u9023\u5408\u56fd\u8ecd\u306e\u91cd\u8981\u62e0\u70b9\u3067\u3059\u2026\u300d</p> </li> </ol>"},{"location":"yomichantemplates/","title":"Yomichan Template Options","text":"<p>Yomichan template options are options that are specified, as you may have guessed, in Yomichan's templates. These options are applied on card creation, so changing these options will only affect cards created in the future.</p>"},{"location":"yomichantemplates/#accessing-editing","title":"Accessing &amp; Editing","text":"<p>To access the Yomichan template options, head to the Yomichan templates as normal:</p> <ol> <li>Navigate to Yomichan Settings.</li> <li>Make sure that advanced settings are turned on (bottom left corner).</li> <li>Go to the <code>Anki</code> section</li> <li>Select <code>Configure Anki card templates...</code></li> </ol> <p>The options should be available at the very top of the template code.</p>"},{"location":"yomichantemplates/#custom-markers","title":"Custom Markers","text":"<p>Additional markers can be used under the Yomichan Fields to further customize what happens during card creation time.</p> <p></p>"},{"location":"yomichantemplates/#custom-card-types-on-hiragana-only-cards","title":"Custom card types on hiragana-only cards","text":"<p>Warning</p> <p>New as of version <code>0.11.1.0</code>. This version is currently bleeding edge, so this feature cannot be used unless you compile the templates from the dev branch.</p> <p>Markers: <code>{jpmn-filled-if-word-is-hiragana}</code>\u30fb<code>{jpmn-filled-if-word-is-not-hiragana}</code></p> <p>If the word is purely comprised of hiragana, you can create different card types by default using these markers.</p> <p>For example, let's say you want the default card to be a vocab card, but want hiragana terms to be TSCs. To do exactly that, do the following:</p> <ul> <li>Navigate to Yomichan settings, and then to <code>Anki</code> \u2192  <code>Configure Anki card format...</code>.</li> <li>Set <code>IsTargetedSentenceCard</code> to <code>{jpmn-filled-if-word-is-hiragana}</code>.</li> </ul> Example behavior (click here) Example word <code>{jpmn-filled-if-word-is-hiragana}</code> <code>{jpmn-filled-if-word-is-not-hiragana}</code> \u3075\u3089\u3063\u3068 1 \u30c8\u30a4\u30ec 1 \u6210\u308a\u7acb\u3064 1 \u3076\u3064\u3076\u3064 1 \u30d6\u30c4\u30d6\u30c4 1 <p>Note</p> <p>This was inspired by Marv's hint sentence for kana cards.</p> <p></p>"},{"location":"yomichantemplates/#automatic-furigana-without-ajt-japanese","title":"Automatic furigana without AJT Japanese","text":"<p>New in version <code>0.11.0.0</code> (latest version: <code>0.11.0.3</code>)</p> <p>Marker: <code>{jpmn-sentence-bolded-furigana-plain}</code></p> <p>This automatically uses Yomichan's internal furigana generator to add furigana to your sentence. Use this under <code>SentenceReading</code>.</p> <p>This is useful if:</p> <ul> <li>You are not using AJT Japanese, or</li> <li>You are using a device that doesn't have AJT Japanese installed (say, a phone),     and you do not want to bulk generate furigana after each session.</li> </ul>"}]}